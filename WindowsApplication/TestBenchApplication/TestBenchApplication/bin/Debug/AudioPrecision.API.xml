<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AudioPrecision.API</name>
    </assembly>
    <members>
        <member name="T:AudioPrecision.API.Apx500PortNumbers">
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.Apx500PortNumbers.APx500ApiPortNumber">
            <summary>
            Default port number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Apx500PortNumbers.APx500ApiPortNumberAlternate">
            <summary>
            Alternate port number
            </summary>
        </member>
        <member name="T:AudioPrecision.API.Attributes.ObsoleteInVersionAttribute">
            <summary>
            An attribute which describes the version of APx in which the attributed API method/property became obsolete.
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.Attributes.ObsoleteInVersionAttribute.Version">
            <summary>
            The version when the attributed API became obsolete, ie. "2.5"
            </summary>
        </member>
        <member name="M:AudioPrecision.API.Attributes.ObsoleteInVersionAttribute.#ctor(System.String)">
            <summary>
            Constructor.  For internal use only.
            </summary>
            <param name="version">The version when the attributed API became obsolete, ie. "2.5"</param>
        </member>
        <member name="T:AudioPrecision.API.IBenchMode">
            <summary>
            Represents the settings for Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.ActiveMeasurement">
            <summary>
            Gets or sets which panel is active in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Setup">
            <summary>
            Gets the settings for the signal path including I/O, Clocks, Triggers, Switchers, and DCX.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.AnalogInputRanges">
            <summary>
            Gets the settings for the analog input range control.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.SignalPathSettingsVisible">
            <summary>
            Gets or sets whether or not the setup panel is visible.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.GeneratorAnalyzerSettingsVisible">
            <summary>
            Gets or set whether or not the Generator and Analyzer panel is visible.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Generator">
            <summary>
            Gets the settings for the Bench Mode generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Analyzer">
            <summary>
            Gets the settings for signal analysis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Measurements">
            <summary>
            Gets the collection of measurements which can be made in Bench Mode including Sweep, FFT, Recorder, Continuous Sweep, and Acoustic Response.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Meters">
            <summary>
            Gets the collection of instantaneous measurement meters in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchMode.Monitors">
            <summary>
            Gets the collection of signal monitors in Bench Mode.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchMode.GetSettledMeterReadings(AudioPrecision.API.SettlingMeterType[])">
            <summary>
            Gets settled readings for one or more meter types.
            </summary>
            <param name="meterType">A comma seperated list of meter types</param>
            <returns>An object which contains the results and whether or not they were settled.</returns>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeDcxSettings">
            <summary>
            Represents the settings for the DCX accessory.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeDcxSettings.Dmm">
            <summary>
            Control the DMM of the DCx.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeSignalPathSettings">
            <summary>
            Represents the signal path I/O settings for Bench Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeSignalPathSettings.FileAnalysisSettings">
            <summary>
            Gets the list of files and associated settings for measuring the audio performance of one or more recorded .WAV files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeSignalPathSettings.Dcx">
            <summary>
            Gets the settings for controlling an Audio Precision DCX device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeMeasurementCollection">
            <summary>
            Represents the measurements available in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurementCollection.Fft">
            <summary>
            Gets the FFT measurement settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurementCollection.SteppedSweep">
            <summary>
            Gets the Sweep measurement settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurementCollection.ContinuousSweep">
            <summary>
            Gets the Continuous Sweep measurement settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurementCollection.AcousticResponse">
            <summary>
            Gets the Acoustic Response measurement settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurementCollection.Recorder">
            <summary>
            Gets the Recorder measurement settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISettledResultCollection">
            <summary>
            Represents a collection of settled reading values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettledResultCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettledResultCollection.Item(System.Int32)">
            <summary>
            Gets the specified item.
            </summary>
            <param name="index">The 0-based index of the item</param>
            <returns>An ISettledResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.ISettledResultCollection.Item(AudioPrecision.API.SettlingMeterType)">
            <summary>
            Gets the specified item.
            </summary>
            <param name="index">The meter type of the requested item</param>
            <returns>An ISettledResult object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISettledResult">
            <summary>
            Represents a settled meter result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettledResult.MeterType">
            <summary>
            Gets the meter reading type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettledResult.AnyTimedOut">
            <summary>
            Gets whether or not any channel timed out before settling.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISettledResult.TimedOutOnChannel(System.Int32)">
            <summary>
            Gets whether or not the specified channel had a timeout.
            </summary>
            <param name="ch">The 0-based index of the channel</param>
            <returns>True if timed out</returns>
        </member>
        <member name="M:AudioPrecision.API.ISettledResult.GetValues(System.String)">
            <summary>
            Gets an array of reading values in the specified unit.
            </summary>
            <param name="unit">A valid unit string for this meter type, or a blank string to get the values in their default unit</param>
            <returns>An array of double values</returns>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeGenerator">
            <summary>
            Represents the settings for the Bench Mode generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.Imd">
            <summary>
            Gets the IMD settings when the <see cref="T:AudioPrecision.API.GeneratorType">GeneratorType</see> property is IMD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.AutoOn">
            <summary>
            Gets or sets whether the generator is automatically turned on when a measurement is started.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.LoopWaveform">
            <summary>
            Gets or sets whether the generator loops the waveform selected in the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.NoiseShape">
            <summary>
            Gets or sets the noise type when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property is "Noise".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.ConstantValues">
            <summary>
            Gets the generator values for use when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property is set to ConstantValue.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeGenerator.SamplesPerStep">
            <summary>
            Gets or sets the number of samples per step for the Walking Zeros and Walking Ones digital generator type.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeMonitorCollection">
            <summary>
            Gets the collection of signal monitors in Bench Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMonitorCollection.Scope">
            <summary>
            Gets the time domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMonitorCollection.Fft">
            <summary>
            Gets the frequency domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMonitorCollection.XyMonitorsVisible">
            <summary>
            Gets whether or not the monitors are displayed, or if the panel containing the monitors is collapsed.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeMeterCollection">
            <summary>
            Represents the collection of instantaneous meter readings in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeterCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetMeterType(System.Int32)">
            <summary>
            Gets the meter type for the specified index.
            </summary>
            <param name="monitorIndex">0-based index</param>
            <returns>The type of the meter</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.Add(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Adds a meter of the specified type to the end of the list.
            </summary>
            <param name="meterType">The type of the meter</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.Remove(System.Int32)">
            <summary>
            Removes the specified meter from the collection.
            </summary>
            <param name="monitorIndex">The 0-based index of the meter</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.Remove(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Removes the specified meter from the collection.
            </summary>
            <param name="meterType">The type of the meter.  If the meter is not found, the function throws an exception.</param>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeterCollection.Enabled">
            <summary>
            Gets or sets whether or not the signal monitors are enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeterCollection.MetersVisible">
            <summary>
            Gets or sets whether or not the meters are visible.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.IsValid(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets whether or not the specified meter type is in a valid state.  The meter may be invalid if the input configuration does not
            match the analysis type of the meter.
            </summary>
            <param name="meterType">The meter type</param>
            <returns>True if valid.  The function throws an exception if the meter type is not in the collection.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.Contains(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets whether or not the specified meter type is in the collection.
            </summary>
            <param name="meterType">The meter type</param>
            <returns>True if in the collection</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetReadings(AudioPrecision.API.BenchModeMeterType,System.String)">
            <summary>
            Get readings for all channels of a specific monitor type.  Even though the UI only displays 2 channels, this function 
            will return readings for all channels.  
            </summary>
            <param name="meterType">Which meter</param>
            <param name="unit">Which unit for the values</param>
            <returns>An array of doubles</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetReadings(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Get readings for all channels of a specific monitor type.  Even though the UI only displays 2 channels, this function 
            will return readings for all channels.  
            </summary>
            <param name="meterType">Which meter</param>
            <returns>An array of doubles</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetWarnings(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets warnings for each channel for the specified meter type.  A meter might have a warning if the input configuration does not match
            the analysis type of the meter.
            </summary>
            <param name="meterType">The type of the meter</param>
            <returns>An array of strings per channel if any warnings exist, or a 0-length array if there are no warnings.
            The function throws an exception if the meter type is not in the collection.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.SaveMeterData(System.String,System.Boolean)">
            <summary>
            Saves the meter data to a CSV file.
            </summary>
            <param name="fileName">The full path to the destination file on disk.</param>
            <param name="append">True to append the data to the file, or false to overwrite the file.</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.Show">
            <summary>
            Makes the Bench Mode Monitors/Meters panel visible.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetDisplaySettings(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets the axis object for the specified meter which allows configuration of units and display range.
            </summary>
            <param name="meterType">Which meter</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetDisplaySettings(System.Int32)">
            <summary>
            Gets the axis object for the specified meter which allows configuration of units and display range.
            </summary>
            <param name="meterIndex">The 0-based index of the meter</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetLimitSettings(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets the limit settings for the specified meter.
            </summary>
            <param name="meterType">Which meter</param>
            <returns>An IMeterLimits object which has settings for upper and lower limits</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetLimitSettings(System.Int32)">
            <summary>
            Gets the limit settings for the specified meter.
            </summary>
            <param name="meterIndex">The 0-based index of the meter</param>
            <returns>An IMeterLimits object which has settings for upper and lower limits</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetChannelCount(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Gets the number of channels for this meter.
            </summary>
            <param name="meterType">Which meter</param>
            <returns>Most meters measure up to two channels. Some meteres like Jitter read only one channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetChannelCount(System.Int32)">
            <summary>
            Gets the number of channels for this meter.
            </summary>
            <param name="meterIndex">The 0-based index of the meter</param>
            <returns>Most meters measure up to two channels. Some meteres like Jitter read only one channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.ResetMinMax(AudioPrecision.API.BenchModeMeterType)">
            <summary>
            Resets the minimum and maximum value history for all meters of the specified type.
            </summary>
            <param name="meterType">Which meter type</param>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetMinValues(AudioPrecision.API.BenchModeMeterType,System.String)">
            <summary>
            Gets the minimum reading values for the specified meter type, optionally in a specific display unit.
            </summary>
            <param name="meterType">Which meter</param>
            <param name="unit">Which unit, or blank string to get the value in the base unit</param>
            <returns>An array of double value</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetMaxValues(AudioPrecision.API.BenchModeMeterType,System.String)">
            <summary>
            Gets the maximum reading values for the specified meter type, optionally in a specific display unit.
            </summary>
            <param name="meterType">Which meter</param>
            <param name="unit">Which unit, or blank string to get the value in the base unit</param>
            <returns>An array of double value</returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.GetReadingChannel(System.Int32,AudioPrecision.API.BenchModeMeterReadingIndex)">
            <summary>
            Gets the 0-based channel index for the specified meter and specified display channel index.
            </summary>
            <param name="meterIndex">Which meter</param>
            <param name="readingIndex">Which reading</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeterCollection.SetReadingChannel(System.Int32,AudioPrecision.API.BenchModeMeterReadingIndex,System.Int32)">
            <summary>
            Sets the 0-base channel index for the specified meter and specified display channel index.
            </summary>
            <param name="meterIndex">Which meter</param>
            <param name="readingIndex">Which reading</param>
            <param name="channelIndex">Which 0-based channel</param>
        </member>
        <member name="T:AudioPrecision.API.BenchModeMeterReadingIndex">
            <summary>
            Represents the ordered readings as displayed on meter readings in Bench Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterReadingIndex.MeterCh1">
            <summary>
            Channel 1 or the first meter reading
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterReadingIndex.MeterCh2">
            <summary>
            Channel 2 or the second meter reading
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeAnalyzer">
            <summary>
            Represents the analysis settings for Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.ThdNWeighting">
            <summary>
            Gets or sets the weighting filter used for noise measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.BandpassFilterTuning">
            <summary>
            Gets or sets the Bandpass Filter Tune Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.BandpassFixedFilterFrequency">
            <summary>
            Gets a setting for the Bandpass Filter frequency when the <see cref="P:AudioPrecision.API.IBenchModeAnalyzer.BandpassFilterTuning">BandpassFilterTuning</see> is set to FixedFrequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.NotchFilterTuning">
            <summary>
            Gets or sets the Notch Filter Tune Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.NotchFilterFrequency">
            <summary>
            Gets a setting for the Notch Filter frequency when the <see cref="P:AudioPrecision.API.IBenchModeAnalyzer.NotchFilterTuning">NotchFilterTuning</see> is set to FixedFrequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.ReferenceChannel">
            <summary>
            Gets or sets the reference channel used to measure Phase or Level Ratio.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.ImdMeterType">
            <summary>
            Gets or sets the IMD analysis type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeAnalyzer.Regulation">
            <summary>
            Get the one time regulation settings for Bench Mode.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBenchModeMeasurement">
            <summary>
            Represents common settings for all measuremments in Bench Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.Append">
            <summary>
            Gets or sets whether new data will be appended to the existing graph, or whether
            the data will be cleared each time the measuremen starts.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.Repeat">
            <summary>
            Gets or sets whether the measurement will keep running until the user cancels it.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeasurement.Start">
            <summary>
            Starts the measurement and returns control immediately.  Use the <see cref="P:AudioPrecision.API.IBenchModeMeasurement.IsStarted">IsStarted</see> property to determine
            if the measurement is in progress.  Use the <see cref="M:AudioPrecision.API.IBenchModeMeasurement.Stop">Stop</see> method to stop the measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeasurement.Analyze">
            <summary>
            Starts the measurement and analyzes the specified .WAV files and returns control immediately.  
            Use the <see cref="P:AudioPrecision.API.IBenchModeMeasurement.IsStarted">IsStarted</see> property to determine
            if the measurement is in progress.  Use the <see cref="M:AudioPrecision.API.IBenchModeMeasurement.Stop">Stop</see> method to stop the measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeasurement.Stop">
            <summary>
            Stops the measurement if it is in progress.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.IsStarted">
            <summary>
            Returns true if the measurement is in progress.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.HasError">
            <summary>
            Returns true if the measurement stopped with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.LastErrorCode">
            <summary>
            Gets the error code for the last measurement error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.LastErrorMessage">
            <summary>
            Gets the error message for the last measurement error.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBenchModeMeasurement.Show">
            <summary>
            Makes the measurement the active measurement in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBenchModeMeasurement.Function">
            <summary>
            Gets the type of this measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFftAnalyzer">
            <summary>
            Represents the settings for the FFT measurement in Bench Mode.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRecorderSettings">
            <summary>
            Represents the settings for the Recorder measurement in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.Mode">
            <summary>
            Gets or sets how the recorder determines when to stop the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.FixedTime">
            <summary>
            Gets or sets the recording time, in seconds, when the <see cref="P:AudioPrecision.API.IRecorderSettings.Mode">Mode</see> property is <see cref="F:AudioPrecision.API.TimeSweepRunMode.Fixed">Fixed</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.PreSweepDelay">
            <summary>
            Gets or sets the amount of time, in seconds, the measurement waits before starting to record the input signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.ReadingRate">
            <summary>
            Gets or sets the meter reading rate.  Higher rates return more results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRecorderSettings.MakeSettledReadings">
            <summary>
            Gets or sets whether the readings are instantaneous, or settled.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStartStopSweepParameters">
            <summary>
            Represents the settings for a swept measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartStopSweepParameters.Start">
            <summary>
            Gets the setting for the start value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartStopSweepParameters.Stop">
            <summary>
            Gets the setting for the stop value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedSweep">
            <summary>
            Represents the settings for the Sweep measurement in Bench Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.Source">
            <summary>
            Gets or sets the primary parameter of the sweep. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.Sources">
            <summary>
            Gets the list of currently available sweep parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.SourceParameters">
            <summary>
            Gets the start/stop settings for the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.PreSweepDelay">
            <summary>
            Gets or sets the amount of time, in seconds, the measurement waits before starting the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.FrequencySweepSignal">
            <summary>
            Gets or sets the type of signal to use when the sweep tones are not generated by 
            the APx internal generator (i.e. waveform files or externally generated signals)
            This choice allows the analyzer to better understand the signal so it can make
            more accurate measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.FrequencySweepSignalNames">
            <summary>
            Gets the list of sweep signals that have been defined for this measurment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.FrequencySweepSignalDefinition">
            <summary>
            Gets the settings for the currently selected <see cref="P:AudioPrecision.API.ISteppedSweep.FrequencySweepSignal">SweepSignal</see>.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedSweep.LoadFrequencySweepSignalFile(System.String,System.Boolean)">
            <summary>
            Loads a file which represents a sweep signal from a specified file on disk.  
            Sweep signal files can be descriptive files in .CSV or .XLS format.
            </summary>
            <param name="fileName">The full path to the file on disk</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a signal definition file attached
            to the project with this signal definition file.</param>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.FrequencySweepTrackChannel">
            <summary>
            Gets or sets which channel is used for primary analysis of sweep tones when the output connector
            is set to None (External) or when the generator is playing a waveform file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.ReadingRate">
            <summary>
            Gets or sets the rate at which readings are made.  Reading rate may be dependent on the input signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.RegulateEachStep">
            <summary>
            Gets or sets whether or not the sweep attempts to regulate a setting to find a target value on each step
            of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweep.Regulation">
            <summary>
            Gets the settings for the regulation.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweep">
            <summary>
            Represents the settings for the Continuous Sweep measurement in Bench Mode.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweep.Generate">
            <summary>
            The generate runs synchronously and does not return control to the user
            until the signal has been played out the generator. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweep.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweep.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweep.Generator">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IContinuousSweep.GeneratorWithPilot"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweep.GeneratorWithPilot">
            <summary>
            Gets the Continuous Sweep generator settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticResponse">
            <summary>
            Represents the settings for the Acoustic Response measurement in Bench Mode.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticResponse.Generate">
            <summary>
            The generate runs synchronously and does not return control to the user
            until the signal has been played out the generator. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponse.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponse.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponse.Generator">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IAcousticResponse.GeneratorWithPilot"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponse.GeneratorWithPilot">
            <summary>
            Gets the Continuous Sweep generator settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISettlingParametersEx">
            <summary>
            Represents the settling parameters for a single channel used in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.MeterType">
            <summary>
            Gets which meter readings to which these settling parameters apply.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.Algorithm">
            <summary>
            Gets or sets the method used to determine when the values are settled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.SettlingTime">
            <summary>
            Gets or sets the maximum settling time in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.SettlingCycles">
            <summary>
            Gets or sets the number of cycles when the Algorithm is "Flat".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.DelayTime">
            <summary>
            Gets or sets the amount of delay in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.DelayCycles">
            <summary>
            Gets or sets the maximum number of cycles if the readings are unsettled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.Tolerance">
            <summary>
            Gets or sets the reading value tolerance when the algorithm is Flat.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.Floor">
            <summary>
            Gets or sets the reading value floor when the algorithm is Flat.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersEx.Points">
            <summary>
            Gets or sets the number of settling points.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISettlingParametersExChannelCollection">
            <summary>
            Represents the settling parameters for a single meter type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExChannelCollection.MeterType">
            <summary>
            Gets which meter readings to which these settling parameters apply.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExChannelCollection.Count">
            <summary>
            Gets the number of available channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExChannelCollection.Item(System.Int32)">
            <summary>
            Gets the settling parameters for the specified channel.
            </summary>
            <param name="ch">0-based index of the channel</param>
            <returns>Settling parameters for one channel</returns>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExChannelCollection.Item(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the settling parameters for the specified channel.
            </summary>
            <param name="ch">Index of the channel</param>
            <returns>Settling parameters for one channel</returns>
        </member>
        <member name="M:AudioPrecision.API.ISettlingParametersExChannelCollection.ResetToDefaults">
            <summary>
            Resets the settling parameters for all channels for this meter type to their default values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISettlingParametersExCollection">
            <summary>
            Represents the settings for all settling parameters in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.Enabled">
            <summary>
            Gets or sets whether or not settling is enabled on any meter types.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.TrackFirst">
            <summary>
            Gets or set whether or not the settling parameters are the same on all channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISettlingParametersExCollection.ResetToDefaults">
            <summary>
            Resets all settling parameters back to their default values for all meter types.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.ReadingTimeout">
            <summary>
            Gets or sets the maximum settling time allowed before a settled measurement determines
            the point could not be settled and moves to the next step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.Item(System.Int32)">
            <summary>
            Gets the settling parameters for a specific meter type.
            </summary>
            <param name="index">0-based index of the meter</param>
            <returns>Settling parameters for all channels</returns>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.Item(AudioPrecision.API.SettlingMeterType)">
            <summary>
            Gets the settling parameters for a specific meter type.
            </summary>
            <param name="meterType">Type of the meter</param>
            <returns>Settling parameters for all channels</returns>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParametersExCollection.Count">
            <summary>
            Gets the number of meter types that can be settled.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdGeneratorSettings">
            <summary>
            Represents the settings for the IMD generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdGeneratorSettings.Frequency1">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdGeneratorSettings.Frequency2">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdGeneratorSettings.SignalType">
            <summary>
            Gets or sets the type of IMD waveform to generate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdGeneratorSettings.Split">
            <summary>
            Gets whether or not the IMD frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdGeneratorSettings.Frequency1ToFrequency2AmplitudeRatio">
            <summary>
            Gets or sets the ratio of signal amplitudes on channels with each IMD frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ResultDisplayType">
            <summary>Describes the display type of a measurement result.</summary>
        </member>
        <member name="F:AudioPrecision.API.ResultDisplayType.Xy">
            <summary>X,Y Graph</summary>
        </member>
        <member name="F:AudioPrecision.API.ResultDisplayType.Meter">
            <summary>Meter</summary>
        </member>
        <member name="F:AudioPrecision.API.ResultDisplayType.VerticalBar">
            <summary>Vertical bar graph</summary>
        </member>
        <member name="F:AudioPrecision.API.ResultDisplayType.DataTable">
            <summary>Data table</summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementResultType">
            <summary>
            Specifies the result of a specific measurement. The result is usually represented by a bar graph or X,Y line graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Id">
            <summary>A unique ID for this result. For internal use only.</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.XAxis">
            <summary>Describes the data type on the X-Axis for X,Y graphs</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DataAxis">
            <summary>Describes the data type on the data axis for X,Y or meter graphs</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Name">
            <summary>The default name of this result type.</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.IsDerived">
            <summary>Indicates whether or not this is a derived result type.</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DisplayType">
            <summary>Describes the visual representation of this result type.</summary>
        </member>
        <member name="P:AudioPrecision.API.MeasurementResultType.NextId">
            <summary>For internal use only</summary>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.Create(System.String,System.String,AudioPrecision.API.AxisDataType,AudioPrecision.API.AxisDataType,AudioPrecision.API.ResultDisplayType,System.Boolean)">
            <summary>For internal use only</summary>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.ToString">
            <summary>Returns a string that represents the current object.</summary>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.op_Equality(AudioPrecision.API.MeasurementResultType,System.Object)">
            <summary>Compares two measurement result objects and returns true if they are the same.</summary>
            <param name="obj1">The current object.</param>
            <param name="obj2">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.op_Inequality(AudioPrecision.API.MeasurementResultType,System.Object)">
            <summary>Compares two measurement result objects and return true if they are not the same. </summary>
            <param name="obj1">The current object.</param>
            <param name="obj2">The object to compare with the current object.</param>
            <returns>true if the specified object is not equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.Equals(AudioPrecision.API.MeasurementResultType)">
            <summary>Determines whether the specified MeasurementResultType object is equal to the current object</summary>
            <param name="other">The MeasurementResultType to compare with the current MeasurementResultType.</param>
            <returns>true if the specified MeasurementResultType is equal to the current MeasurementResultType; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.GetHashCode">
            <summary>Returns the hash value for the current object</summary>
            <returns>A hash code for the current object</returns>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelMeter">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsTime">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsFrequency">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsPhase">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsGeneratorLevel">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsGeneratorOffset">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsOutputSampleRate">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsRefSyncOutputRate">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsJitterLevelUi">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsJitterLevelSec">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsDcxDcv1Level">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsDcxDcv2Level">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DigitalInterfaceLevelVsVBiasLevel">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelMeter">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsTime">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsFrequency">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsPhase">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsGeneratorLevel">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsGeneratorOffset">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsOutputSampleRate">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsRefSyncOutputRate">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsJitterLevelUi">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsJitterLevelSec">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsDcxDcv1Level">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsDcxDcv2Level">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsVBiasLevel">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelMeter">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsTime">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsFrequency">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsPhase">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsGeneratorLevel">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsGeneratorOffset">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsOutputSampleRate">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsRefSyncOutputRate">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsJitterLevelUi">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsJitterLevelSec">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsDcxDcv1Level">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsDcxDcv2Level">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BandpassLevelVsVBiasLevel">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateMeter">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsTime">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsFrequency">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsPhase">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsGeneratorLevel">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsGeneratorOffset">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsOutputSampleRate">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsRefSyncOutputRate">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsJitterLevelUi">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsJitterLevelSec">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsDcxDcv1Level">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsDcxDcv2Level">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ErrorRateVsVBiasLevel">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorMeter">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsTime">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsFrequency">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsPhase">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsGeneratorLevel">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsGeneratorOffset">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsOutputSampleRate">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsRefSyncOutputRate">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsJitterLevelUi">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsJitterLevelSec">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsDcxDcv1Level">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsDcxDcv2Level">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsVBiasLevel">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelMeter">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsTime">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsFrequency">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsPhase">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsGeneratorLevel">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsGeneratorOffset">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsOutputSampleRate">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsRefSyncOutputRate">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsJitterLevelUi">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsJitterLevelSec">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsDcxDcv1Level">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsDcxDcv2Level">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcLevelVsVBiasLevel">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsMeter">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsTime">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsFrequency">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsPhase">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsGeneratorLevel">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsGeneratorOffset">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsOutputSampleRate">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsRefSyncOutputRate">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsJitterLevelUi">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsJitterLevelSec">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsDcxDcv1Level">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsDcxDcv2Level">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxOhmsVsVBiasLevel">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsMeter">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsTime">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsFrequency">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsPhase">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsGeneratorLevel">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsGeneratorOffset">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsOutputSampleRate">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsRefSyncOutputRate">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsJitterLevelUi">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsJitterLevelSec">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsDcxDcv1Level">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsDcxDcv2Level">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DcxVoltsVsVBiasLevel">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyMeter">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsTime">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsFrequency">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsPhase">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsGeneratorLevel">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsGeneratorOffset">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsOutputSampleRate">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsRefSyncOutputRate">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsJitterLevelUi">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsJitterLevelSec">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsDcxDcv1Level">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsDcxDcv2Level">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyVsVBiasLevel">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainMeter">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsTime">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsFrequency">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsPhase">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsGeneratorLevel">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsGeneratorOffset">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsOutputSampleRate">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsRefSyncOutputRate">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsJitterLevelUi">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsJitterLevelSec">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsDcxDcv1Level">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsDcxDcv2Level">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsVBiasLevel">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioMeter">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsTime">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsFrequency">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsPhase">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsGeneratorLevel">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsGeneratorOffset">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsOutputSampleRate">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsRefSyncOutputRate">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsJitterLevelUi">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsJitterLevelSec">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsDcxDcv1Level">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsDcxDcv2Level">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsVBiasLevel">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioMeter">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsTime">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsFrequency">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsPhase">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsGeneratorLevel">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsGeneratorOffset">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsOutputSampleRate">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsRefSyncOutputRate">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsJitterLevelUi">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsJitterLevelSec">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsDcxDcv1Level">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsDcxDcv2Level">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelRatioVsVBiasLevel">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelMeter">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsTime">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsFrequency">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsPhase">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsGeneratorLevel">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsGeneratorOffset">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsOutputSampleRate">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsRefSyncOutputRate">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsJitterLevelUi">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsJitterLevelSec">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsDcxDcv1Level">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsDcxDcv2Level">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsVBiasLevel">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseMeter">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsTime">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsFrequency">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsPhase">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsGeneratorLevel">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsGeneratorOffset">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsOutputSampleRate">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsRefSyncOutputRate">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsJitterLevelUi">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsJitterLevelSec">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsDcxDcv1Level">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsDcxDcv2Level">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PhaseVsVBiasLevel">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelMeter">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsTime">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsFrequency">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsPhase">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsGeneratorLevel">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsGeneratorOffset">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsOutputSampleRate">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsRefSyncOutputRate">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsJitterLevelUi">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsJitterLevelSec">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsDcxDcv1Level">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsDcxDcv2Level">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsVBiasLevel">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateMeter">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsTime">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsFrequency">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsPhase">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsGeneratorLevel">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsGeneratorOffset">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsOutputSampleRate">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsRefSyncOutputRate">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsJitterLevelUi">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsJitterLevelSec">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsDcxDcv1Level">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsDcxDcv2Level">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InputSampleRateVsVBiasLevel">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioMeter">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsTime">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsFrequency">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsPhase">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsGeneratorLevel">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsGeneratorOffset">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsOutputSampleRate">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsRefSyncOutputRate">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsJitterLevelUi">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsJitterLevelSec">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsDcxDcv1Level">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsDcxDcv2Level">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsVBiasLevel">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelMeter">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsTime">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsFrequency">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsPhase">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsGeneratorLevel">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsGeneratorOffset">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsOutputSampleRate">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsRefSyncOutputRate">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsJitterLevelUi">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsJitterLevelSec">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsDcxDcv1Level">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsDcxDcv2Level">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsVBiasLevel">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioMeter">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsTime">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsFrequency">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsPhase">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsGeneratorLevel">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsGeneratorOffset">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsOutputSampleRate">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsRefSyncOutputRate">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsJitterLevelUi">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsJitterLevelSec">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsDcxDcv1Level">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsDcxDcv2Level">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsVBiasLevel">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsMeter">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsTime">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsFrequency">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsPhase">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsGeneratorLevel">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsGeneratorOffset">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsOutputSampleRate">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsRefSyncOutputRate">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsJitterLevelUi">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsJitterLevelSec">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsDcxDcv1Level">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsDcxDcv2Level">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.BitsVsVBiasLevel">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelMeter">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelVsFrequency">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelVsTime">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelVsGeneratorLevel">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelVsJitterLevel">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdLevelVsMeasuredLevel">
            <summary>THD Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioMeter">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioVsFrequency">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioVsTime">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioVsGeneratorLevel">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioVsJitterLevel">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdRatioVsMeasuredLevel">
            <summary>THD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GainVsJitterLevel">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsJitterLevel">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SinadRatioVsMeasuredLevel">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelVsJitterLevel">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RmsLevelAcPlusDcVsFrequency">
            <summary>RMS Level (AC+DC)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RmsLevelAcPlusDcVsTime">
            <summary>RMS Level (AC+DC)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RmsLevelAcPlusDcVsGeneratorLevel">
            <summary>RMS Level (AC+DC)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PeakLevelVsJitterLevel">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrestFactorVsMeasuredLevel">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsJitterLevel">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNLevelVsMeasuredLevel">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsJitterLevel">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThdNRatioVsMeasuredLevel">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrosstalkMeter">
            <summary>Crosstalk</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrosstalkVsFrequency">
            <summary>Crosstalk</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GroupDelayMeter">
            <summary>Group Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GroupDelayVsFrequency">
            <summary>Group Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductLevelVsFrequency">
            <summary>Distortion Product Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductLevelVsJitterLevel">
            <summary>Distortion Product Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductRatioVsFrequency">
            <summary>Distortion Product Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductRatioVsJitterLevel">
            <summary>Distortion Product Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.GeneratorLevelVsFrequency">
            <summary>Generator Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SignalToNoiseRatioMeter">
            <summary>Signal to Noise Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImdRatioVsMeasuredLevel">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DeviationMeter">
            <summary>Deviation</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DynamicRangeMeter">
            <summary>Dynamic Range - AES17</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DimRatioMeter">
            <summary>DIM Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DimRatioVsMeasuredLevel">
            <summary>DIM Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DelayVsTime">
            <summary>Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FrequencyShiftMeter">
            <summary>Frequency Shift</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.HarmonicSumRatioMeter">
            <summary>Harmonic Sum Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.HarmonicSumLevelMeter">
            <summary>Harmonic Sum Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.EnobMeter">
            <summary>ENOB</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.QpeakLevelMeter">
            <summary>Q-peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrMeter">
            <summary>PSR</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrVsFrequency">
            <summary>PSR</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrPlusNMeter">
            <summary>PSR+N</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrPlusNVsFrequency">
            <summary>PSR+N</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrrMeter">
            <summary>PSRR</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrrVsFrequency">
            <summary>PSRR</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrrPlusNMeter">
            <summary>PSRR+N</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PsrrPlusNVsFrequency">
            <summary>PSRR+N</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PesqMeter">
            <summary>PESQ</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PolqaMeter">
            <summary>POLQA G.107</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.MosMeter">
            <summary>MOS</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.MosVsTime">
            <summary>MOS</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.MosAverageMeter">
            <summary>MOS Average</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ModulatedNoiseRatioMeter">
            <summary>Modulated Noise Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.NoiseLevelMeter">
            <summary>Noise Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.NoiseLevelVsGeneratorLevel">
            <summary>Noise Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.NoiseRatioMeter">
            <summary>Noise Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SampleRateMeter">
            <summary>Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FftSpectrumMonitor">
            <summary>FFT</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ScopeMonitor">
            <summary>Scope</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LevelAndDistortion">
            <summary>Level and Distortion</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.EnergyTimeCurve">
            <summary>Energy Time Curve</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TdPlusNSpectrum">
            <summary>TD+N Spectrum</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpulseResponse">
            <summary>Impulse Response</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpulseResponseWithWindow">
            <summary>Impulse Response</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpulseResponseWindow">
            <summary>Window</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AmplitudeSpectralDensity">
            <summary>Amplitude Spectral Density</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PowerSpectralDensity">
            <summary>Power Spectral Density</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FileMos">
            <summary>File MOS</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PolqaFileMos">
            <summary>File MOS</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PolqaMosAverageMeter">
            <summary>MOS Average</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PolqaMosMeter">
            <summary>MOS</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AcquiredWaveform">
            <summary>Acquired Waveform</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ReferenceWaveform">
            <summary>Reference Waveform</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AcquiredCrosstalkWaveformOneChannelDriven">
            <summary>Acquired Crosstalk Waveform One Channel Driven</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AcquiredCrosstalkWaveformOneChannelUndriven">
            <summary>Acquired Crosstalk Waveform One Channel Undriven</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Scope">
            <summary>Scope</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.FFTSpectrum">
            <summary>FFT Spectrum</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.InstantaneousErrorRate">
            <summary>Instantaneous Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CumulativeErrors">
            <summary>Cumulative Errors</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Linearity">
            <summary>Linearity</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RubAndBuzzCrestFactor">
            <summary>Rub and Buzz Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RubAndBuzzPeakRatio">
            <summary>Rub and Buzz Peak Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RubAndBuzz">
            <summary>Rub and Buzz</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpedanceMagnitude">
            <summary>Impedance Magnitude</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpedancePhase">
            <summary>Impedance Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpedanceReal">
            <summary>Impedance Real</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ImpedanceImaginary">
            <summary>Impedance Imaginary</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.NoiseDensitySpectrum">
            <summary>Noise Density Spectrum</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DelayVsTimeResampled">
            <summary>Delay vs Time (Resampled)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CustomXYResult">
            <summary>(X, Y)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DimRatioVsLevel">
            <summary>DIM Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrosstalkOneChannelUndriven">
            <summary>Crosstalk, One Channel Undriven</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CrosstalkOneChannelDriven">
            <summary>Crosstalk, One Channel Driven</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RelativeLevelVsFrequency">
            <summary>Relative Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageJitterLevelVsJitterLevel">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LinearityVsJitterLevel">
            <summary>Linearity</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LinearityVsJitterLevelUi">
            <summary>Linearity</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.LinearityVsJitterLevelSec">
            <summary>Linearity</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Smooth">
            <summary>Smooth</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SmoothTimeDomain">
            <summary>Smooth</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.XYStatistics">
            <summary>Min/Max/Statistics</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Normalize">
            <summary>Normalize/Invert</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.OffsetXY">
            <summary>Offset</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CompareXY">
            <summary>Compare</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SpecifyXYDataPoints">
            <summary>Specify Data Points</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Eq">
            <summary>EQ</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageErrorRate">
            <summary>Average Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TotalErrors">
            <summary>Total Errors</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TotalRmsLevelMeter">
            <summary>Total Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ToneRmsLevelMeter">
            <summary>Tone Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.MaximumToneLevelMeter">
            <summary>Maximum Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ToneInterchannelPhaseMeter">
            <summary>Phase (at Tone)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ToneCrosstalkMeter">
            <summary>Crosstalk (at Tone)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.Metadata">
            <summary>Metadata</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.ThieleSmall">
            <summary>Thiele-Small</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CompareBitstream">
            <summary>Compare Bitstream</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.AverageDelayMeter">
            <summary>Average Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CustomMeterResult">
            <summary>Bar</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.NoiseRmsLevelMeter">
            <summary>Noise Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CmrrMeter">
            <summary>CMRR</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CmrrIecMeter">
            <summary>CMRR IEC</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CmrrPin2Meter">
            <summary>CMRR Pin2</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CmrrPin3Meter">
            <summary>CMRR Pin3</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TdPlusNLevelMeter">
            <summary>TD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TdPlusNRatioMeter">
            <summary>TD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DelayMeter">
            <summary>Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.RmsLevelAcPlusDcMeter">
            <summary>RMS Level (AC+DC)</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.MeterStatistics">
            <summary>Min/Max/Statistics</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.OffsetMeter">
            <summary>Offset</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CompareMeter">
            <summary>Compare</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DataDistribution">
            <summary>Data Distribution</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.SpecifyXYSingleDataPoint">
            <summary>Specify Data Point</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DimDistortionProductRatio">
            <summary>Distortion Product Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductLevelMeter">
            <summary>Distortion Product Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductRatioMeter">
            <summary>Distortion Product Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PassFailResponse">
            <summary>Pass/Fail Response</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.PolqaDataTable">
            <summary>POLQA Result Data</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.TedsDataTable">
            <summary>TEDS Data</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductLevelVsGeneratorLevel">
            <summary>Distortion Product Level</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DistortionProductRatioVsGeneratorLevel">
            <summary>Distortion Product Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.CorrelationVsTime">
            <summary>Cross Correlation</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.DelaySecondsMeter">
            <summary>Delay</summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultType.None">
            <summary>None</summary>
        </member>
        <member name="P:AudioPrecision.API.MeasurementResultType.Elements">
            <summary>Returns the collection of MeasurementResulTypes</summary>
        </member>
        <member name="M:AudioPrecision.API.MeasurementResultType.ParseResultType(System.String,System.Boolean)">
            <summary>
            Parses a string name and returns the appropriate MeasurementResultType object.
            </summary>
             <param name="resultTypeName">The name of the result type</param>
             <param name="throwException">If true, and the string does not match a known type, an exception is thrown</param>
             <returns>An object, or null if throwException is false</returns>
        </member>
        <member name="T:AudioPrecision.API.BenchModeMeterType">
            <summary>Describes a meter reading type displayed in Bench Mode.</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.DataAxis">
            <summary>Describes the type of data displayed in the meter.</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.Name">
            <summary>Returns the default name of this meter.</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.IsSettled">
            <summary>Returns true if this meter offers settled readings, otherwise false.</summary>
        </member>
        <member name="M:AudioPrecision.API.BenchModeMeterType.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.BenchModeMeterType.Equals(AudioPrecision.API.BenchModeMeterType)">
            <summary>Determines whether the specified BenchModeMeterType is equal to the current object</summary>
            <param name="other">The BenchModeMeterType to compare with the current BenchModeMeterType.</param>
            <returns>true if the specified BenchModeMeterType is equal to the current BenchModeMeterType; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.BenchModeMeterType.op_Equality(AudioPrecision.API.BenchModeMeterType,System.Object)">
            <summary>Compares two measurement result objects and returns true if they are the same.</summary>
            <param name="obj1">The current object.</param>
            <param name="obj2">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.BenchModeMeterType.op_Inequality(AudioPrecision.API.BenchModeMeterType,System.Object)">
            <summary>Compares two measurement result objects and return true if they are not the same. </summary>
            <param name="obj1">The current object.</param>
            <param name="obj2">The object to compare with the current object.</param>
            <returns>true if the specified object is not equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.BenchModeMeterType.GetHashCode">
            <summary>Returns the hash value for the current object</summary>
            <returns>A hash code for the current object</returns>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.DigitalInterfaceLevelMeter">
            <summary>Digital Interface Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.AverageJitterLevelMeter">
            <summary>Average Jitter Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.BandpassLevelMeter">
            <summary>Bandpass Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.BitErrorMeter">
            <summary>Error Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.CrestFactorMeter">
            <summary>Crest Factor</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.DcLevelMeter">
            <summary>DC Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.DcxOhmsMeter">
            <summary>Resistance (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.DcxVoltsMeter">
            <summary>DC Level (DCX)</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.FrequencyMeter">
            <summary>Frequency</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.GainMeter">
            <summary>Gain</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.ImdRatioMeter">
            <summary>IMD Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.LevelRatioMeter">
            <summary>RMS Level Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.PeakLevelMeter">
            <summary>Peak Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.PhaseMeter">
            <summary>Phase</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.RmsLevelMeter">
            <summary>RMS Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.SampleRateMeter">
            <summary>Input Sample Rate</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.SinadRatioMeter">
            <summary>SINAD</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.ThdNLevelMeter">
            <summary>THD+N Level</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.ThdNRatioMeter">
            <summary>THD+N Ratio</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.BitsMeter">
            <summary>Bits</summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeterType.Elements">
            <summary>Returns the collection of BenchModeMeterTypes</summary>
        </member>
        <member name="T:AudioPrecision.API.IPromptStepCollection">
            <summary>
            Represents a collection of Prompt sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IPromptStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IInputStepCollection">
            <summary>
            Represents a collection of Input sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IInputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IProgramStepCollection">
            <summary>
            Represents a collection of Program sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IProgramStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementStepCollection">
            <summary>
            Represents a collection of Measurement sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:AudioPrecision.API.IAppendedMeasurementStepCollection">
            <summary>
            Represents a collection of Appended Measurement sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IAppendedMeasurementStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IDelayStepCollection">
            <summary>
            Represents a collection of Delay sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IDelayStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetAuxControlOutputStepCollection">
            <summary>
            Represents a collection of Set Aux Control Out sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetAuxControlOutputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IEnableGeneratorStepCollection">
            <summary>
            Represents a collection of Enable Generator sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableGeneratorStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableGeneratorStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:AudioPrecision.API.IConnectBluetoothDeviceStepCollection">
            <summary>
            Represents a collection of Connect Bluetooth Device sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IConnectBluetoothDeviceStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IDisconnectBluetoothDeviceStepCollection">
            <summary>
            Represents a collection of Disconnect Bluetooth Device sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDisconnectBluetoothDeviceStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDisconnectBluetoothDeviceStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IDisconnectBluetoothDeviceStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IA2dpSourceStepCollection">
            <summary>
            Represents a collection of A2DP Source sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSourceStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSourceStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IA2dpSourceStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHfpAudioGatewayStepCollection">
            <summary>
            Represents a collection of HFP Audio Gateway sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHfpAudioGatewayStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHspAudioGatewayStepCollection">
            <summary>
            Represents a collection of HSP Audio Gateway sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHspAudioGatewayStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IA2dpSinkStepCollection">
            <summary>
            Represents a collection of AVRCP Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSinkStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSinkStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IA2dpSinkStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHfpHandsFreeStepCollection">
            <summary>
            Represents a collection of AT Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHfpHandsFreeStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHfpHandsFreeCommandStepCollection">
            <summary>
            Represents a collection of HFP Hands-Free Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeCommandStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeCommandStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHfpHandsFreeCommandStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHspHeadsetStepCollection">
            <summary>
            Represents a collection of HSP Headset Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHspHeadsetStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHspHeadsetATCommandStepCollection">
            <summary>
            Represents a collection of AT Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetATCommandStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetATCommandStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHspHeadsetATCommandStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHfpAudioGatewayATCommandStepCollection">
            <summary>
            Represents a collection of AT Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayATCommandStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayATCommandStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHfpAudioGatewayATCommandStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IHspAudioGatewayATCommandStepCollection">
            <summary>
            Represents a collection of AT Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayATCommandStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayATCommandStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHspAudioGatewayATCommandStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IExportResultDataStepCollection">
            <summary>
            Represents a collection of Export Result Data sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IExportResultDataStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IImportResultDataStepCollection">
            <summary>
            Represents a collection of Import Result Data sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IImportResultDataStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISendPdmControlCodesStepCollection">
            <summary>
            Represents a collection of Send PDM Control Codes sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStepCollection">
            <summary>
            Represents a collection of Send PDM Control Code Indefinitely sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IStopSendingPdmControlCodeStepCollection">
            <summary>
            Represents a collection of Stop Sending PDM Control Code sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopSendingPdmControlCodeStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopSendingPdmControlCodeStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IStopSendingPdmControlCodeStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetSwitcherConfigurationStepCollection">
            <summary>
            Represents a collection of Set Switcher Configuration sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetSwitcherConfigurationStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetSwitcherConfigurationStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetSwitcherConfigurationStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IEnableWidebandSpeechStepCollection">
            <summary>
            Represents a collection of Enable Wideband Speech sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableWidebandSpeechStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableWidebandSpeechStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IEnableWidebandSpeechStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IRefreshDefinedResultsStepCollection">
            <summary>
            Represents a collection of Refresh Defined Result(s) sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRefreshDefinedResultsStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRefreshDefinedResultsStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:AudioPrecision.API.ISendHdmiCecMessageStepCollection">
            <summary>
            Represents a collection of Send CEC Command sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISendHdmiCecMessageStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IImportOutputEqCurveStepCollection">
            <summary>
            Represents a collection of Import Output EQ Curve sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportOutputEqCurveStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportOutputEqCurveStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IImportOutputEqCurveStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetVddOutputStepCollection">
            <summary>
            Represents a collection of Set Vdd Output sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetVddOutputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetVddOutputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetVddOutputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IImportAmplifierCorrectionCurveStepCollection">
            <summary>
            Represents a collection of Import Amplifier Correction Curve sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportAmplifierCorrectionCurveStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportAmplifierCorrectionCurveStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IImportAmplifierCorrectionCurveStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetDcxControlOutputStepCollection">
            <summary>
            Represents a collection of Set DCX Aux Output sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetDcxControlOutputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetDcxDcvOutputStepCollection">
            <summary>
            Represents a collection of Set DCX DC Output sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetDcxDcvOutputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IUserEvaluationOfResultStepCollection">
            <summary>
            Represents a collection of User Evaluation of Result sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IUserEvaluationOfResultStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IUserEvaluationOfResultStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IUserEvaluationOfResultStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IDigitalSyncDelayStepCollection">
            <summary>
            Represents a collection of Digital Sync Delay sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalSyncDelayStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalSyncDelayStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IDigitalSyncDelayStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IStartAnalogSineWaveGeneratorStepCollection">
            <summary>
            Represents a collection of Start Analog Sine Generator sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartAnalogSineWaveGeneratorStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartAnalogSineWaveGeneratorStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IStartAnalogSineWaveGeneratorStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IStopAnalogSineWaveGeneratorStepCollection">
            <summary>
            Represents a collection of Stop Analog Sine Generator sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopAnalogSineWaveGeneratorStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopAnalogSineWaveGeneratorStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IStopAnalogSineWaveGeneratorStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IMakeResultVisibleStepCollection">
            <summary>
            Represents a collection of Make Result Visible sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMakeResultVisibleStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMakeResultVisibleStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMakeResultVisibleStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IImportLimitsDataStepCollection">
            <summary>
            Represents a collection of Import Limits Data sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IImportLimitsDataStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetTransducerInputStepCollection">
            <summary>
            Represents a collection of Set Transducer Interface Input sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetTransducerInputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetTransducerOutputStepCollection">
            <summary>
            Represents a collection of Set Transducer Interface Output sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerOutputStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerOutputStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetTransducerOutputStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ICalibrateFromTedsStepCollection">
            <summary>
            Represents a collection of Calibrate From TEDS sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ICalibrateFromTedsStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ICalibrateFromTedsAcousticStepCollection">
            <summary>
            Represents a collection of Calibrate From TEDS Acoustic sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsAcousticStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsAcousticStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ICalibrateFromTedsAcousticStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetBluetoothTransmitPowerStepCollection">
            <summary>
            Represents a collection of Set Transmit Power sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetBluetoothTransmitPowerStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetBluetoothTransmitPowerStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetBluetoothTransmitPowerStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStepCollection">
            <summary>
            Represents a collection of AVRCP Set Absolute Volume sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISetDeviceDelayStepCollection">
            <summary>
            Represents a collection of Measure and Set DUT Delay sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:AudioPrecision.API.IClearVariableValueStepCollection">
            <summary>
            Represents a collection of Clear Variable Value sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClearVariableValueStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClearVariableValueStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IClearVariableValueStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IEnableVBiasStepCollection">
            <summary>
            Represents a collection of Enable VBias sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableVBiasStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableVBiasStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IEnableVBiasStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISelectInputEqCurveStepCollection">
            <summary>
            Represents a collection of Select Input EQ Curve sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISelectInputEqCurveStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.IImportGeneratorEqCurveStepCollection">
            <summary>
            Represents a collection of Import Generator EQ Curve sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportGeneratorEqCurveStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportGeneratorEqCurveStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="M:AudioPrecision.API.IImportGeneratorEqCurveStepCollection.Add">
            <summary>
            Adds a new step to the collection.
            </summary>
            <returns>ISequenceStep object</returns>
        </member>
        <member name="T:AudioPrecision.API.ISaveGeneratorWaveformStepCollection">
            <summary>
            Represents a collection of Save Generator Waveform sequence steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorWaveformStepCollection.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorWaveformStepCollection.Item(System.Int32)">
            <summary>
            Gets the specified step.
            </summary>
            <param name="index">The index of the step.</param>
            <returns>The step.</returns>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStepCollection">
            <summary>
            Represents a collection sub-steps for a measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.InputSteps">
            <summary>
            Gets all of the Input steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.MeasurementSteps">
            <summary>
            Gets all of the Measurement steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.AppendedMeasurementSteps">
            <summary>
            Gets all of the AppendedMeasurement steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.EnableGeneratorSteps">
            <summary>
            Gets all of the EnableGenerator steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ConnectBluetoothDeviceSteps">
            <summary>
            Gets all of the ConnectBluetoothDevice steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.DisconnectBluetoothDeviceSteps">
            <summary>
            Gets all of the DisconnectBluetoothDevice steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.A2dpSourceSteps">
            <summary>
            Gets all of the A2dpSource steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HfpAudioGatewaySteps">
            <summary>
            Gets all of the HfpAudioGateway steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HspAudioGatewaySteps">
            <summary>
            Gets all of the HspAudioGateway steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.A2dpSinkSteps">
            <summary>
            Gets all of the A2dpSink steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HfpHandsFreeSteps">
            <summary>
            Gets all of the HfpHandsFree steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HfpHandsFreeCommandSteps">
            <summary>
            Gets all of the HfpHandsFreeCommand steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HspHeadsetSteps">
            <summary>
            Gets all of the HspHeadset steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HspHeadsetATCommandSteps">
            <summary>
            Gets all of the HspHeadsetATCommand steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HfpAudioGatewayATCommandSteps">
            <summary>
            Gets all of the HfpAudioGatewayATCommand steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.HspAudioGatewayATCommandSteps">
            <summary>
            Gets all of the HspAudioGatewayATCommand steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ExportResultDataSteps">
            <summary>
            Gets all of the ExportResultData steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ImportResultDataSteps">
            <summary>
            Gets all of the ImportResultData steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SendPdmControlCodesSteps">
            <summary>
            Gets all of the SendPdmControlCodes steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SendPdmControlCodeIndefinitelySteps">
            <summary>
            Gets all of the SendPdmControlCodeIndefinitely steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.StopSendingPdmControlCodeSteps">
            <summary>
            Gets all of the StopSendingPdmControlCode steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetSwitcherConfigurationSteps">
            <summary>
            Gets all of the SetSwitcherConfiguration steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.EnableWidebandSpeechSteps">
            <summary>
            Gets all of the EnableWidebandSpeech steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.RefreshDefinedResultsSteps">
            <summary>
            Gets all of the RefreshDefinedResults steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SendHdmiCecMessageSteps">
            <summary>
            Gets all of the SendHdmiCecMessage steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ImportOutputEqCurveSteps">
            <summary>
            Gets all of the ImportOutputEqCurve steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetVddOutputSteps">
            <summary>
            Gets all of the SetVddOutput steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ImportAmplifierCorrectionCurveSteps">
            <summary>
            Gets all of the ImportAmplifierCorrectionCurve steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetDcxControlOutputSteps">
            <summary>
            Gets all of the SetDcxControlOutput steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetDcxDcvOutputSteps">
            <summary>
            Gets all of the SetDcxDcvOutput steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.UserEvaluationOfResultSteps">
            <summary>
            Gets all of the UserEvaluationOfResult steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.DigitalSyncDelaySteps">
            <summary>
            Gets all of the DigitalSyncDelay steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.StartAnalogSineWaveGeneratorSteps">
            <summary>
            Gets all of the StartAnalogSineWaveGenerator steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.StopAnalogSineWaveGeneratorSteps">
            <summary>
            Gets all of the StopAnalogSineWaveGenerator steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.MakeResultVisibleSteps">
            <summary>
            Gets all of the MakeResultVisible steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ImportLimitsDataSteps">
            <summary>
            Gets all of the ImportLimitsData steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetTransducerInputSteps">
            <summary>
            Gets all of the SetTransducerInput steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetTransducerOutputSteps">
            <summary>
            Gets all of the SetTransducerOutput steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.CalibrateFromTedsSteps">
            <summary>
            Gets all of the CalibrateFromTeds steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.CalibrateFromTedsAcousticSteps">
            <summary>
            Gets all of the CalibrateFromTedsAcoustic steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetBluetoothTransmitPowerSteps">
            <summary>
            Gets all of the SetBluetoothTransmitPower steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.AvrcpSetAbsoluteVolumeSteps">
            <summary>
            Gets all of the AvrcpSetAbsoluteVolume steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SetDeviceDelaySteps">
            <summary>
            Gets all of the SetDeviceDelay steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ClearVariableValueSteps">
            <summary>
            Gets all of the ClearVariableValue steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.EnableVBiasSteps">
            <summary>
            Gets all of the EnableVBias steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SelectInputEqCurveSteps">
            <summary>
            Gets all of the SelectInputEqCurve steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.ImportGeneratorEqCurveSteps">
            <summary>
            Gets all of the ImportGeneratorEqCurve steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollection.SaveGeneratorWaveformSteps">
            <summary>
            Gets all of the SaveGeneratorWaveform steps in the collection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITransducerInputSetting">
            <summary>
            Interface for  the Transducer Interface input configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerInputSetting.Mic1">
            <summary>
            Set or set the Transducer Interface microphone output pass thru for Mic 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerInputSetting.Mic2">
            <summary>
            Set or get the Transducer Interface microphone output pass thru for Mic 2.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerInputSetting.CurrentSense">
            <summary>
            Set or get the Transducer Interface power amp to monitor for current sense.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerInputSetting.PhantomPower">
            <summary>
            Set or get the phantom power for all microphones in the Transducer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerInputSetting.CcpPower">
            <summary>
            Set or get the state of the CCP power.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITransducerOutputSetting">
            <summary>
            Interface for the Transducer Interface output configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerOutputSetting.Amplifier1">
            <summary>
            Set or get the state of the Transducer Interface Amplifier 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerOutputSetting.Amplifier2">
            <summary>
            Set or get the state of the Transducer Interface Amplifier 2.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerOutputSetting.Gain">
            <summary>
            Get the gain of the Transducer Interface. It is query only.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerOutputSetting.ParasiticResistance">
            <summary>
            Get or get the parasitic resistance.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITransducerOutputSetting.AnalogOutputRanges">
            <summary>
            Get the analog output range object to control the APx1701 output ranges.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAPx1701">
            <summary>
            Interface for the status of the Transducer Interface output section.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.Online">
            <summary>
            Returns true if the APx1701 is on line.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.Faults">
            <summary>
            Get the set of faults that reflect the current state of the APx1701.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.ID">
            <summary>
            Get the APx1701 Instrument ID.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SerialNumber">
            <summary>
            Get the APx1701 Serial Number
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.CalibrationDate">
            <summary>
            Get the APx1701 calibration date.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnId">
            <summary>
            Get the ID of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnSerialNumber">
            <summary>
            Get the Serial Number of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnManufactureDate">
            <summary>
            Get the Manufacture Date of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnHwRevision">
            <summary>
            Get the Hardware Revison of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnAdjDate">
            <summary>
            Get the Adjustment Date of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.SaturnTechID">
            <summary>
            Get the Tech Initials of the Saturn board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanId">
            <summary>
            Get the Id of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanSerialNumber">
            <summary>
             Get the Serial Number of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanManufactureDate">
            <summary>
            Get the Manufacture Date of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanHwRevision">
            <summary>
            Get the Hardware Revision of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanAdjDate">
            <summary>
            Get the Adjustment Date of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.TitanTechID">
            <summary>
            Get the Tech Initials of the Titan board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.FactoryAdjust">
            <summary>
            Determine if the Factory Adjustments have been done.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701.Signature">
            <summary>
            Get the signature of the APx1701 firmware.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAPx1701Faults">
            <summary>
            Get the faults object fot eh APx1701 to determine the status of the APx1701.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701Faults.Temp">
            <summary>
            Returns true if the APx1701 is overheated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701Faults.Power">
            <summary>
            Returns true if the APx1701 is in a Power fault.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701Faults.Current1">
            <summary>
            Returns true if the APx1701 is in a Current Limit fault on Amplifier 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPx1701Faults.Current2">
            <summary>
            Returns true if the APx1701 is in a Current Limit fault on Amplifier 2.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDelayGenerator">
            <summary>
            Represents the Delay Generator of the APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayGenerator.SequenceLength">
            <summary>
            Gets or sets the DelaySequenceLength.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayGenerator.SequenceType">
            <summary>
            Gets or sets the DelaySequenceType.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayGenerator.NoiseShape">
            <summary>
            Gets or sets the NoiseShape of the sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpCommand">
            <summary>
            The set of supported AVRCP commands.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.VolumeUp">
            <summary>
            Volume Up (0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.VolumeDown">
            <summary>
            Volume Down (1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.Mute">
            <summary>
            Mute (2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.Stop">
            <summary>
            Stop (3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.Play">
            <summary>
            Play (4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.Pause">
            <summary>
            Pause (5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.Rewind">
            <summary>
            Rewind (6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.FastForward">
            <summary>
            Fast Forward (7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.NextTrack">
            <summary>
            Next Track (8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommand.PreviousTrack">
            <summary>
            Previous Track (9)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAvrcpSettingsBase">
            <summary>
            The base interface for Bluetooth AVRCP settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpSettingsBase.Enabled">
            <summary>
            Gets or sets whether or not the AVRCP Target profile is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpSettingsBase.Version">
            <summary>
            Gets or sets supported AVRCP version which determines available set of features and event notifications.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAvrcpTargetSettings">
            <summary>
            The base interface for Bluetooth AVRSP target settings
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpTargetSettings.PlaybackStatus">
            <summary>
            Gets or sets the desired playback status notification.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpTargetSettings.AbsoluteVolume">
            <summary>
            Absolute Volume level that will be sent to the remote device as a volume level request.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpTargetSettings.ApplyGeneratorSettings">
            <summary>
            Gets or sets the enable of the generator settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAvrcpControllerSettings">
            <summary>
            Represents the Bluetooth AVRCP Controller settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpControllerSettings.PlaybackStatus">
            <summary>
            Gets the last reported AVRCP playback status.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpControllerSettings.PlaybackPosition">
            <summary>
            Gets the currently reported playback position reported by the AVRCP Target device in milliseconds.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAvrcpControllerSettings.SendCommand(AudioPrecision.API.BluetoothAvrcpCommand)">
            <summary>
            Sends an AVRCP command to the connected device.  This function is only applicable when APx is configured as an 
            A2DP Sink device and the AVRCP profile is connected.
            </summary>
            <param name="command">The AVRCP command.</param>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpControllerSettings.AbsoluteVolume">
            <summary>
            Absolute Volume level to report back to the remote device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpControllerSettings.IsRewindPressed">
            <summary>
            Determines if the Rewind is pressed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpControllerSettings.IsFastForwardPressed">
            <summary>
            Determines if the Fast Forard is pressed.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAvrcpCommandInfo">
            <summary>
            Represents a received AVRCP command
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfo.Timestamp">
            <summary>
            Gets the date and time the command was received
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfo.Command">
            <summary>
            Get the name of the command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfo.Modifier">
            <summary>
            Gets any additional information about the command, such as whether the button was pushed or released on the sending device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfo.IsReceived">
            <summary>
            Gets whether this AVRCP command was send by APx or sent by the remote device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfo.DisplayType">
            <summary>
            Gets what type of AVRCP information this item represents, such as command or an event notification.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog">
            <summary>
            Gets the collection of AVRCP commands received by APx during the current session.  APx must be configured as an AVRCP Target to receive 
            these commands.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog.Item(System.Int32)">
            <summary>
            Gets the AVRCP command at the specified index.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>An object representing an AVRCP command</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog.Clear">
            <summary>
            Removes all entries from the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog.Save(System.String,System.Boolean)">
            <summary>
            Save the ACRVP Command Log to a file.
            </summary>
            <param name="fileName">File to save to.</param>
            <param name="appendIfExists">Append or overwrite flag.</param>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAvrcpCommandInfoLog.Filter">
            <summary>
            Gets or sets which AVRCP information is displayed in the log.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothCodecSettingsBase">
            <summary>
            The interface for the Bluetooth Codec Settings base.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettingsBase.CodecType">
            <summary>
            Gets the Codec type of the Bluetooth codec.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettingsBase.Name">
            <summary>
            Gets the name of the codec.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettingsBase.Priority">
            <summary>
            Gets or sets the priority of the codec.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothCodecSettingsBase.MoveUp">
            <summary>
            Moves up the codec setting in priority.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothCodecSettingsBase.MoveDown">
            <summary>
            Moves down the codec setting in priority.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettingsBase.Enabled">
            <summary>
            Gets or sets the enable of the codec setting.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothSbcCodecSettings">
            <summary>
            Represents the Bluetooth codec setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSbcCodecSettings.PreferredSampleRate">
            <summary>
            Gets or sets the preferred sample rate of the codec.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSbcCodecSettings.PreferredChannnelMode">
            <summary>
            Gets or sets the preffered channel mode of the codec.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSbcCodecSettings.EnableSampleRate(AudioPrecision.API.BluetoothSbcSampleRate,System.Boolean)">
            <summary>
            Enable a given sample rate of the codec.
            </summary>
            <param name="rate">Desired sample rate</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSbcCodecSettings.IsSampleRateEnabled(AudioPrecision.API.BluetoothSbcSampleRate)">
            <summary>
            Determines if a given sample rate is enabled.
            </summary>
            <param name="rate">Selected sample rate</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSbcCodecSettings.EnableChannelMode(AudioPrecision.API.BluetoothSbcChannelMode,System.Boolean)">
            <summary>
            Enable a given channel mode.
            </summary>
            <param name="channelMode">Desired channel mode</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSbcCodecSettings.IsChannelModeEnabled(AudioPrecision.API.BluetoothSbcChannelMode)">
            <summary>
            Determines if a given channel mode is enabled.
            </summary>
            <param name="channelMode">Desired channel mode</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAptxCodecSettings">
            <summary>
            Represents the Bluetooth APTX Codec settings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxCodecSettings.EnableSampleRate(AudioPrecision.API.BluetoothAptxSampleRate,System.Boolean)">
            <summary>
            Enables the given sample rate.
            </summary>
            <param name="rate">Desired sample rate</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxCodecSettings.IsSampleRateEnabled(AudioPrecision.API.BluetoothAptxSampleRate)">
            <summary>
            Determine if a given sample rate is enabled.
            </summary>
            <param name="rate">Desired sample rate</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAptxLowLatencyCodecSettings">
            <summary>
            Represents the Bluetooth APTX Low Latency Codec settings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxLowLatencyCodecSettings.EnableSampleRate(AudioPrecision.API.BluetoothAptxLowLatencySampleRate,System.Boolean)">
            <summary>
            Enable a specific sample rate.
            </summary>
            <param name="rate">Desired sample rate</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxLowLatencyCodecSettings.IsSampleRateEnabled(AudioPrecision.API.BluetoothAptxLowLatencySampleRate)">
            <summary>
            Determine if a given sample rate is enabled.
            </summary>
            <param name="rate">Desired sample rate</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAptxHdCodecSettings">
            <summary>
            Represents the Bluetooth APTX HD Codec settings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxHdCodecSettings.EnableSampleRate(AudioPrecision.API.BluetoothAptxHdSampleRate,System.Boolean)">
            <summary>
            Enable a specific sample rate.
            </summary>
            <param name="rate">Desired sample rate</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAptxHdCodecSettings.IsSampleRateEnabled(AudioPrecision.API.BluetoothAptxHdSampleRate)">
            <summary>
            Determine if a given sample rate is enabled.
            </summary>
            <param name="rate">Desired sample rate</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAacCodecSettings">
            <summary>
            Represents the Bluetooth AAC Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAacCodecSettings.VariableBitRate">
            <summary>
            Gets or sets the variable bit rate.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAacCodecSettings.EnableMpegVersion(AudioPrecision.API.BluetoothAacMpegVersion,System.Boolean)">
            <summary>
            Enable a specific sample rate.
            </summary>
            <param name="mpeg">Desired MPEG version</param>
            <param name="enabled">Enabled or disabled</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAacCodecSettings.IsMpegVersionEnabled(AudioPrecision.API.BluetoothAacMpegVersion)">
            <summary>
            Determine if a given MPEG version is enabled.
            </summary>
            <param name="mpeg">Desired MPEG version</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothCodecSettings">
            <summary>
            Represents the Bluetooth Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.Sbc">
            <summary>
            Gets the Bluetooth SBC Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.Aptx">
            <summary>
            Gets the Bluetooth APTX Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.AptxLowLatency">
            <summary>
            Gets the Bluetooth APTX Low Latency Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.AptxHd">
            <summary>
            Gets the Bluetooth APTX HD Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.Aac">
            <summary>
            Gets the Bluetooth AAC Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.Count">
            <summary>
            Gets the count of Bluetooth Codecs
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothCodecSettings.Item(System.Int32)">
            <summary>
            Gets a Bluetooth Codec by index.
            </summary>
            <param name="index">Index of desired Codec setting</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothDeviceInfo">
            <summary>
            Represents the Bluetooth Device Info.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfo.Address">
            <summary>
            Gets the address (BD_ADDR) of the device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfo.FriendlyName">
            <summary>
            Gets the name presented to APx during the inquiry.  This may be an empty string if the
            device paired with APx and was not discovered during inquiry, or if the device did not respond
            to name requests.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfo.DeviceClass">
            <summary>
            Gets the device class.  This may be an empty string if the
            device paired with APx and was not discovered during inquiry
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfo.Notes">
            <summary>
            Gets or sets a user defined note which describes the Bluetooth device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothDevice">
            <summary>
            Represents a Bluetooth device which has been discovered by the APx Bluetooth module.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothDevice.QueryFriendlyName">
            <summary>
            Sends a request to the device for its friendly name.  The name in the <see cref="P:AudioPrecision.API.IBluetoothDeviceInfo.FriendlyName">FriendlyName</see> property
            will be updated if a response is received by APx.
            </summary>
            <returns>The friendly name if the device responded, or a blank string if there was no response.</returns>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDevice.LinkKey">
            <summary>
            Gets the link key used when pairing APx with this device.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDevice.IsPaired">
            <summary>
            Gets whether or not this device is paired with this APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDevice.IsConnected">
            <summary>
            Gets whether or not this device is currently connected to this APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDevice.Status">
            <summary>
            Gets the status of this Bluetooth device.  If APx has not recently discovered or connected with
            this device, the status will be Unknown.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDevice.IsEmpty">
            <summary>
            If the <see cref="P:AudioPrecision.API.IBluetoothSettings.IsConnected">BluetoothSettings.IsConnected</see> property returns false, 
            the <see cref="P:AudioPrecision.API.IBluetoothSettings.ConnectedDevice">BluetoothSettings.ConnectedDevice</see> property returns an
            object which represents a device which does not exist.  This device will have a blank address and name.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothDevice.IsAvrcpEventSupported(AudioPrecision.API.BluetoothAvrcpEvent)">
            <summary>
            Gets whether or not the device implements AVRCP specific events. Supported events are discovered at AVRCP connection time.
            </summary>
            <param name="eventType">AVRCP Event</param>
            <returns>This property returns false if the device is not connected. Supported events are discovered at AVRCP connection time.</returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothDeviceCollection">
            <summary>
            Represents a collection of Bluetooth devices
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceCollection.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">Index of the item</param>
            <returns>The requested item</returns>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothDeviceInfoCollection">
            <summary>
            Represents a collection of Bluetooth devices
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfoCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothDeviceInfoCollection.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">Index of the item</param>
            <returns>The requested item</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothDeviceInfoCollection.Clear">
            <summary>
            Removes all devices from the known device list.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothDeviceInfoCollection.Remove(System.Int32)">
            <summary>
            Removes the device at the specfied index from the known device list.
            </summary>
            <param name="index">0-based index of the item.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothDeviceInfoCollection.Remove(System.String)">
            <summary>
            Removes the device which matches the specified address from the known device list.
            </summary>
            <param name="address">Address of device to remove</param>
        </member>
        <member name="T:AudioPrecision.API.ILevelRatioSettlingParametersCollection">
            <summary>
            Represents the settling parameters for the Level Ratio measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelRatioSettlingParametersCollection.LevelRatio">
            <summary>
            Gets the settling parameters for measuring level ratio phase.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevelRatioMeasurement">
            <summary>
            Represents the settings for the Level Ratio measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelRatioMeasurement.Ratio">
            <summary>
            Gets the level ratio meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelRatioMeasurement.ReferenceChannel">
            <summary>
            Gets or sets the channel used when measuring phase .
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelRatioMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelRatioMeasurement.Generator">
            <summary>
            Gets the settings for the sine wave generator for the DC Level measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevelRatioGenerator">
            <summary>
            Represents the settings for the sine wave generator for the Level Ratio measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.INestedSweepSettings">
            <summary>
            Represents the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INestedSweepSettings.Source">
            <summary>
            Gets or sets the parameter which will be modified on each step of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INestedSweepSettings.Sources">
            <summary>
            Gets the list of available parameters to sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INestedSweepSettings.SourceParameters">
            <summary>
            Gets the start and stop parameters for most sweep types.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INestedSweepSettings.SwitcherSweep">
            <summary>
            Gets the settings for the sweep when the <see cref="P:AudioPrecision.API.INestedSweepSettings.Source">Source</see> property is set to <see cref="F:AudioPrecision.API.NestedSweepParameterType.Switcher">Switcher</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INestedSweepSettings.DcxSweep">
            <summary>
            Gets the settings for the sweep when the <see cref="P:AudioPrecision.API.INestedSweepSettings.Source">Source</see> property is set to <see cref="F:AudioPrecision.API.NestedSweepParameterType.Dcx">Dcx</see>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISwitcherSweepSettings">
            <summary>
            Represents the settings for sweeping switcher channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.SwitcherType">
            <summary>
            Gets or sets which switcher or switchers will be addressed by the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.Channel">
            <summary>
            Gets or sets which channel or channels will be swept.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.ChannelOffset">
            <summary>
            Gets or sets the offset between channels.  To move channel A and channel B so no channels are repeated, use an offset of 2.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.StartAddress">
            <summary>
            Gets or sets the starting point for the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.StopAddress">
            <summary>
            Gets or sets the stopping point for the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.StepSize">
            <summary>
            Gets or sets the size of each sweep step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISwitcherSweepSettings.ResetState">
            <summary>
            Gets or sets whether or not the initial switcher settings are retained before starting the sweep.  By default, the switcher 
            settings are replaced with the settings from the sweep. However, there are cases where some switchers may need a constant setting
            while the other switchers move their channels. In this case, set the value to false.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDcxSweepSettings">
            <summary>
            Represents the settings for sweeping DCX output port values.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDcxSweepSettings.GetPortEnable(AudioPrecision.API.DcxPort)">
            <summary>
            Check to see if the given DCX Port is enabled for the sweep.
            </summary>
            <param name="port">Which port to check</param>
            <returns>True if enabled</returns>
        </member>
        <member name="M:AudioPrecision.API.IDcxSweepSettings.SetPortEnable(AudioPrecision.API.DcxPort,System.Boolean)">
            <summary>
            Enable a port to be unsed in the DCX Port sweep.
            </summary>
            <param name="port">Which port to enable</param>
            <param name="state">Set to true to enable</param>
        </member>
        <member name="M:AudioPrecision.API.IDcxSweepSettings.GetPortEntry(AudioPrecision.API.DcxPort,System.Int32)">
            <summary>
            Retreive the value that is used for a given port and step.
            </summary>
            <param name="port">Which port to check</param>
            <param name="index">Which step in the table to obtain</param>
            <returns>Current value for that step</returns>
        </member>
        <member name="M:AudioPrecision.API.IDcxSweepSettings.SetPortEntry(AudioPrecision.API.DcxPort,System.Int32,System.Byte)">
            <summary>
            Set a value for a given port and step.
            </summary>
            <param name="port">Which port to set</param>
            <param name="index">Which step to set</param>
            <param name="value">Desired value to use</param>
        </member>
        <member name="P:AudioPrecision.API.IDcxSweepSettings.PortTable">
            <summary>
            Set or get the table used for the DCX Port sweep. The table
            is returned as a one dimentsion byte array, but each step in the 
            sweep is comprised of 4 consectutive locations. All entries for PortA
            are at i*4, PortB at i*4+1,... The array lenght should be a multple of 4.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITargetChannelRegulationSettings">
            <summary>
            Represents the settings for making a regulated measurement where one parameters is modified while measuring the input to find a target value on a 
            specific channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetType">
            <summary>
            Gets or sets which meter is observed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">
            <summary>
            Gets or sets the target regulation value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.AdjustSource">
            <summary>
            Gets or sets which parameter the regulation engine will modify to achieve the requested target value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue">
            <summary>
            The starting value for the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.AdjustSource"/> parameter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue">
            <summary>
            The stopping value for the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.AdjustSource"/> parameter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel">
            <summary>
            Gets or sets the channel where distortion level will be measured. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITargetChannelRegulationSettings.InitialSteps">
            <summary>
            Gets or sets the number of initial steps between the start and stop source values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRegulationSettings">
            <summary>
            Represents the settings for making a regulated measurement where one parameters is modified while measuring the input to find a target value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulationSettings.SourceMinValue">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> and <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulationSettings.SourceMaxValue">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> and <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulationSettings.TargetChannelType">
            <summary>
            Determines which channel the regulation algorithm uses to determine if it has found
            the target value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulationSettings.TargetValueType">
            <summary>
            Gets or sets how the regulation determines if the target value is within the expected range.
            When the property is <see cref="F:AudioPrecision.API.RegulationTargetValueType.Target"/>, the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue"/> property applies.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalyzerRegulationSettings">
            <summary>
            Represents the settings for the Bench Mode regulation feature.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalyzerRegulationSettings.Start">
            <summary>
            Runs the specified regulation <see cref="P:AudioPrecision.API.IRegulationSettings.TargetValueType">algorithm</see>, modifying the
            <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.AdjustSource">Source</see> setting until the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetType">Target</see> value
            is found.  If the target value cannot be found, and exception is thrown.
            </summary>
            <returns>Returns the value of the source variable which was used to find the target value or Double.NaN if the operation was cancelled.</returns>
        </member>
        <member name="T:AudioPrecision.API.FirstSoftwareEnum">
            <summary>
             This attribute is used to mark which APxOption is the first software option.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LastSoftwareEnum">
            <summary>
             This attribute is used to mark which APxOption is the last software option.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DiscontinuedSoftwareEnum">
            <summary>
             This attribute is used to mark which APxOption is the first software option.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SignalAnalyzerBandwidthType">
            <summary>
            Specifies the bandwidth/sample rate of the measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw3k">
            <summary>
            2.75 kHz (6 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw3p5k">
            <summary>
            3.5 kHz (8 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw5k">
            <summary>
            5.5 kHz (12 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw7k">
            <summary>
            7 kHz (16 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw10k">
            <summary>
            11 kHz (24 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw20k44kHz">
            <summary>
            20 kHz (44.1 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw20k">
            <summary>
            22.4 kHz (48 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw40k88kHz">
            <summary>
            40 kHz (88.2 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw40k">
            <summary>
            45 kHz (96 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw80k176kHz">
            <summary>
            80 kHz (176.4 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw80k">
            <summary>
            90 kHz (192 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw250k">
            <summary>
            250 kHz (0.624 MHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw500k">
            <summary>
            500 kHz (1.248 MHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.Bw1M">
            <summary>
            1 MHz (2.496 MHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalAnalyzerBandwidthType.TrackSetup">
            <summary>
            Use Signal Path
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementRecorderBitDepthType">
            <summary>
            Specifies the Measurement Recorder output file bit depth for analog inputs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderBitDepthType.BitDepth16">
            <summary>
            16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderBitDepthType.BitDepth24">
            <summary>
            24
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputConnectorType">
            <summary>
            Specifies the output connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.AnalogUnbalanced">
            <summary>
            Analog Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.AnalogBalanced">
            <summary>
            Analog Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.AnalogBalancedAdcTest">
            <summary>
            Analog Balanced (ADC Test)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.DigitalUnbalanced">
            <summary>
            Digital Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.DigitalBalanced">
            <summary>
            Digital Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.DigitalOptical">
            <summary>
            Digital Optical
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.DigitalHdmi">
            <summary>
            HDMI Source
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.HdmiArc">
            <summary>
            HDMI ARC Tx
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.Bluetooth">
            <summary>
            Bluetooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.DigitalSerial">
            <summary>
            Digital Serial
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.PDM">
            <summary>
            PDM
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.ASIO">
            <summary>
            ASIO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.TransducerInterface">
            <summary>
            Transducer Interface
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.Speaker">
            <summary>
            Speaker
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.Telecoil">
            <summary>
            Telecoil
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputConnectorType.None">
            <summary>
            None (External)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.InputConnectorType">
            <summary>
            Specifies the input connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.AnalogUnbalanced">
            <summary>
            Analog Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.AnalogBalanced">
            <summary>
            Analog Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.Analog">
            <summary>
            Analog Custom
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalUnbalanced">
            <summary>
            Digital Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalBalanced">
            <summary>
            Digital Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalOptical">
            <summary>
            Digital Optical
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalHdmi">
            <summary>
            HDMI Sink
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.HdmiArc">
            <summary>
            HDMI ARC Rx
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.Bluetooth">
            <summary>
            Bluetooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalSerial">
            <summary>
            Digital Serial
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.PDM">
            <summary>
            PDM
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.ASIO">
            <summary>
            ASIO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.TransducerInterface">
            <summary>
            Transducer Interface
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.Microphone">
            <summary>
            Microphone
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.BatteryVoltage">
            <summary>
            Battery Voltage
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.BatteryCurrent">
            <summary>
            Battery Current
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.SpeakerVoltage">
            <summary>
            Speaker Voltage
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.TelecoilCurrent">
            <summary>
            Telecoil Current
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.MicBiasVoltage">
            <summary>
            Mic Bias Voltage
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.AnalogFile">
            <summary>
            File (Analog Units)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputConnectorType.DigitalFile">
            <summary>
            File (Digital Units)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AxisDataType">
            <summary>
            Specifies the type of data for result axis.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ThdLevel">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ThdRatio">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Gain">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Linearity">
            <summary>
            Relative Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SinadRatio">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Level">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.RmsLevelAcPlusDc">
            <summary>
            RMS Level (AC+DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PeakLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CrestFactor">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ThdNLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ThdNRatio">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Crosstalk">
            <summary>
            Crosstalk
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.GroupDelay">
            <summary>
            Group Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DistortionProductLevel">
            <summary>
            Distortion Product Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DistortionProductRatio">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.InstantaneousLevel">
            <summary>
            Instantaneous Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.InstantaneousOutputLevel">
            <summary>
            Instantaneous Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.RelativeLevel">
            <summary>
            Relative Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.GeneratorLevel">
            <summary>
            Generator Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.GeneratorOffset">
            <summary>
            Generator Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.MeasuredLevel">
            <summary>
            Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ScopeTime">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.WaveformTime">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DistortionProductFrequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.FftFrequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.FftLevel">
            <summary>
            Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SignalToNoiseRatio">
            <summary>
            Signal to Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DcLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.AverageJitterLevel">
            <summary>
            Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImdRatio">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DfdRatio">
            <summary>
            DFD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SmpteRatio">
            <summary>
            SMPTE Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ModRatio">
            <summary>
            MOD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CcifRatio">
            <summary>
            CCIF Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SmpteDinRatio">
            <summary>
            SMPTE/DIN Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SmpteModAxisFrequency1">
            <summary>
            Frequency 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SmpteModAxisFrequency2">
            <summary>
            Frequency 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CcifDfdAxisFrequency1">
            <summary>
            Mean Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CcifDfdAxisFrequency2">
            <summary>
            Diff Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Deviation">
            <summary>
            Deviation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Cmrr">
            <summary>
            CMRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ErrorRate">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DynamicRange">
            <summary>
            Dynamic Range - AES17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DimRatio">
            <summary>
            DIM Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Delay">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.FrequencyShift">
            <summary>
            Frequency Shift
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.HarmonicSumRatio">
            <summary>
            Harmonic Sum Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.HarmonicSumLevel">
            <summary>
            Harmonic Sum Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Enob">
            <summary>
            ENOB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.BandpassLevel">
            <summary>
            Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.QpeakLevel">
            <summary>
            Q-peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Psr">
            <summary>
            PSR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PsrPlusN">
            <summary>
            PSR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Psrr">
            <summary>
            PSRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PsrrPlusN">
            <summary>
            PSRR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Pesq">
            <summary>
            PESQ
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Polqa">
            <summary>
            POLQA G.107
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PolqaTable">
            <summary>
            POLQA
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Mos">
            <summary>
            MOS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.MosAverage">
            <summary>
            MOS Average
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.RubAndBuzzCrestFactor">
            <summary>
            Rub and Buzz Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.RubAndBuzzPeakRatio">
            <summary>
            Rub and Buzz Peak Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ModulatedNoiseRatio">
            <summary>
            Modulated Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ThieleSmall">
            <summary>
            Thiele-Small
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DcxVolts">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DcxOhms">
            <summary>
            Resistance
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DcxDcv1Level">
            <summary>
            DCX DCV1 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DcxDcv2Level">
            <summary>
            DCX DCV2 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Frames">
            <summary>
            Frames
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CustomX">
            <summary>
            X
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CustomY">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.FileNumber">
            <summary>
            File Number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Energy">
            <summary>
            Energy
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpulseResponse">
            <summary>
            Impulse Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.NoiseDensity">
            <summary>
            Noise Density
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.TdPlusNLevel">
            <summary>
            Total Distortion + Noise
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.TdPlusNRatio">
            <summary>
            Total Distortion + Noise
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.AmplitudeSpectralDensity">
            <summary>
            Amplitude Spectral Density
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PowerSpectralDensity">
            <summary>
            Power Spectral Density
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.TransitionTime">
            <summary>
            Transition Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Bitstream">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Derived">
            <summary>
            Derived
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.PassFail">
            <summary>
            Pass/Fail
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpedanceMagnitude">
            <summary>
            Impedance Magnitude
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpedancePhase">
            <summary>
            Impedance Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpedanceReal">
            <summary>
            Impedance Real
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpedanceImaginary">
            <summary>
            Impedance Imaginary
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.NoiseLevel">
            <summary>
            Noise Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.NoiseRatio">
            <summary>
            Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DigitalInterfaceLevel">
            <summary>
            Volts
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.JitterLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.JitterLevelUi">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.JitterLevelSec">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.OutputSampleRate">
            <summary>
            Output Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.InputSampleRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.RefSyncOutputRate">
            <summary>
            Ref/Sync Output Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.LevelRatio">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SampleRate">
            <summary>
            Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Statistics">
            <summary>
            Min/Max/Statistics
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Compare">
            <summary>
            Compare
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.DataDistribution">
            <summary>
            Data Distribution
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SpecifyXYSingleDataPoint">
            <summary>
            Specify Data Point
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Smooth">
            <summary>
            Smooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SmoothTimeDomain">
            <summary>
            Smooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Normalize">
            <summary>
            Normalize/Invert
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.SpecifyXYDataPoints">
            <summary>
            Specify Data Points
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CustomProcessing">
            <summary>
            Custom Processing
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.TabularData">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.ImpulseResponseWindow">
            <summary>
            Window
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.TedsTabularData">
            <summary>
            TEDS Tabular Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.CrossCorrelation">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.VBiasLevel">
            <summary>
            VBias
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisDataType.Eq">
            <summary>
            EQ
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SettlingMode">
            <summary>
            Specifies the settling mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMode.AC">
            <summary>
            AC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMode.DC">
            <summary>
            DC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMode.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SettlingAlgorithm">
            <summary>
            Specifies the settling algorithm.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingAlgorithm.Flat">
            <summary>
            Flat
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingAlgorithm.Average">
            <summary>
            Average
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LogoAlignment">
            <summary>
            Specifies the alignment of the custom logo on the report page.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LogoAlignment.TopLeft">
            <summary>
            Top Left
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LogoAlignment.TopCenter">
            <summary>
            Top Center
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LogoAlignment.TopRight">
            <summary>
            Top Right
            </summary>
        </member>
        <member name="T:AudioPrecision.API.WeightingFilterType">
            <summary>
            Specifies the bandwidth filter value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.SignalPath">
            <summary>
            Signal Path
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_A">
            <summary>
            A-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_B">
            <summary>
            B-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_C">
            <summary>
            C-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Ccir">
            <summary>
            CCIR-1k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Dolby2k">
            <summary>
            CCIR-2k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Ccitt">
            <summary>
            CCITT
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_CMessage">
            <summary>
            C-Message
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Deemph50us">
            <summary>
            50 us de-emph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Deemph75us">
            <summary>
            75 us de-emph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Deemph50usA">
            <summary>
            50 us de-emph. + A-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WeightingFilterType.wt_Deemph75usA">
            <summary>
            75 us de-emph. + A-wt.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.WindowType">
            <summary>
            Specifies the FFT window type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.Equiripple">
            <summary>
            AP-Equiripple
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.BlackmanHarris">
            <summary>
            Blackman-Harris 3-term
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.BlackmanHarris4">
            <summary>
            Blackman-Harris 4-term
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.Dolph150">
            <summary>
            Dolph-Chebyshev 150 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.Dolph200">
            <summary>
            Dolph-Chebyshev 200 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.Dolph250">
            <summary>
            Dolph-Chebyshev 250 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.FlatTop">
            <summary>
            Flat Top
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.Hann">
            <summary>
            Hann
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WindowType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TaperType">
            <summary>
            Specifies the taper type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.Equiripple">
            <summary>
            AP-Equiripple
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.BlackmanHarris">
            <summary>
            Blackman-Harris 3-term
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.BlackmanHarris4">
            <summary>
            Blackman-Harris 4-term
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.Dolph150">
            <summary>
            Dolph-Chebyshev 150 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.Dolph200">
            <summary>
            Dolph-Chebyshev 200 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.Dolph250">
            <summary>
            Dolph-Chebyshev 250 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.FlatTop">
            <summary>
            Flat Top
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.Hann">
            <summary>
            Hann
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TaperType.None">
            <summary>
            None (Rectangular)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DimMode">
            <summary>
            Specifies the DIM IMD measurement mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimMode.U1U9">
            <summary>
            U1...U9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimMode.U4U5">
            <summary>
            U4+U5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimMode.Emulation">
            <summary>
            Emulation
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementGroup">
            <summary>
            For internal use only.
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Basic">
            <summary>
            Basic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Meters">
            <summary>
            Meters
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Sweeps">
            <summary>
            Sweeps
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Distortion">
            <summary>
            Distortion
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Crosstalk">
            <summary>
            Crosstalk
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Perceptual">
            <summary>
            Perceptual
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.Acoustic">
            <summary>
            Acoustic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementGroup.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementType">
            <summary>
            Specifies the measurement of interest.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SignalPathSetup">
            <summary>
            Signal Path Setup
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ReferenceLevels">
            <summary>
            Reference Levels
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.LevelAndGain">
            <summary>
            Level and Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ThdN">
            <summary>
            THD+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.FrequencyResponse">
            <summary>
            Frequency Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SignalToNoiseRatio">
            <summary>
            Signal to Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkOneChannelDriven">
            <summary>
            Crosstalk, One Channel Driven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkOneChannelUndriven">
            <summary>
            Crosstalk, One Channel Undriven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkCustom">
            <summary>
            Crosstalk, Custom
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.InterchannelPhase">
            <summary>
            Interchannel Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DCLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ContinuousSweep">
            <summary>
            Continuous Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.BandpassFrequencySweep">
            <summary>
            Bandpass Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SteppedFrequencySweep">
            <summary>
            Stepped Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SteppedLevelSweep">
            <summary>
            Stepped Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.BandpassLevelSweep">
            <summary>
            Bandpass Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SignalAnalyzer">
            <summary>
            Signal Analyzer
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.MeasurementRecorder">
            <summary>
            Measurement Recorder
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.MetadataRecorder">
            <summary>
            Metadata Recorder
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.MultitoneAnalyzer">
            <summary>
            Multitone Analyzer
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.RegulatedFrequencySweep">
            <summary>
            Regulated Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.MaxOutput">
            <summary>
            Maximum Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.MaxOutputBurst">
            <summary>
            Maximum Output (CEA-2006)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Cmrr">
            <summary>
            CMRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CmrrIec">
            <summary>
            CMRR IEC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Noise">
            <summary>
            Noise (RMS)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DigitalErrorRate">
            <summary>
            Digital Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DynamicRange">
            <summary>
            Dynamic Range - AES17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.AcousticResponse">
            <summary>
            Acoustic Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DimImd">
            <summary>
            DIM
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Imd">
            <summary>
            IMD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ImdLevelSweep">
            <summary>
            IMD Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DimLevelSweep">
            <summary>
            DIM Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.BandpassLevel">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.PassFail">
            <summary>
            Pass/Fail
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Sinad">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.QpeakNoise">
            <summary>
            Noise (Q-peak per ITU-R BS.468-4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.NoiseRecorder">
            <summary>
            Noise Recorder (RMS)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ImdFrequencySweep">
            <summary>
            IMD Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkFrequencySweepOneChannelUndriven">
            <summary>
            Crosstalk Sweep, One Channel Undriven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkFrequencySweepOneChannelDriven">
            <summary>
            Crosstalk Sweep, One Channel Driven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CrosstalkFrequencySweepCustom">
            <summary>
            Crosstalk Sweep, Custom
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Psr">
            <summary>
            PSR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.PsrSweep">
            <summary>
            PSR Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Pesq">
            <summary>
            PESQ
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.PesqAverage">
            <summary>
            PESQ (Averaged)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.Polqa">
            <summary>
            POLQA
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.PolqaAverage">
            <summary>
            POLQA (Averaged)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.CompareEncodedBitstream">
            <summary>
            Compare Encoded Bitstream to Reference
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DcLevelSweep">
            <summary>
            DC Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.VddRamp">
            <summary>
            Vdd Ramp
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ModulatedNoise">
            <summary>
            Modulated Noise
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ImpedanceThieleSmall">
            <summary>
            Impedance/Thiele-Small
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.LoudspeakerProductionTest">
            <summary>
            Loudspeaker Production Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DcLevelDcx">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.ResistanceDcx">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.JitterFrequencySweep">
            <summary>
            Jitter Frequency Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.JitterLevelSweep">
            <summary>
            Jitter Level Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.LevelRatio">
            <summary>
            Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SampleRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.TedsData">
            <summary>
            TEDS Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.SignalAcquisition">
            <summary>
            Signal Acquisition
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DutDelay">
            <summary>
            DUT Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DelayCalibration">
            <summary>
            Delay Calibration
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.MeasurementType.DelayChirpCalibration">
            <summary>
            Delay Chirp Calibration
            </summary>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.NumberOfGraphPoints">
            <summary>
            Specifies the number of points to display or copy.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPointsAllPoints">
            <summary>
            All Points
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPointsSameAsGraph">
            <summary>
            Same as Graph
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints10">
            <summary>
            10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints20">
            <summary>
            20
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints30">
            <summary>
            30
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints40">
            <summary>
            40
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints50">
            <summary>
            50
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints100">
            <summary>
            100
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints200">
            <summary>
            200
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NumberOfGraphPoints.GraphPoints500">
            <summary>
            500
            </summary>
        </member>
        <member name="T:AudioPrecision.API.GraphImageType">
            <summary>
            Specifies the format of the graph image file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphImageType.BMP">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphImageType.JPG">
            <summary>
            JPG
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphImageType.EMF">
            <summary>
            Enhanced Metafile
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphImageType.PNG">
            <summary>
            PNG
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphImageType.PDF">
            <summary>
            Portable Document Format
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PhaseMode">
            <summary>
            Specifies the method used to compute phase.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMode.Difference">
            <summary>
            Relative to Ch1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMode.Absolute">
            <summary>
            Input-to-output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMode.AbsWrapped">
            <summary>
            Input-to-output, wrapped
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMode.Excess">
            <summary>
            Input-to-output, excess
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TriggerType">
            <summary>
            Specifies the type of trigger.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerType.FreeRun">
            <summary>
            Free Run
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerType.PositiveZeroCrossing">
            <summary>
            +0 Crossing
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerType.Generator">
            <summary>
            Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerType.External">
            <summary>
            External
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MultitoneTriggerType">
            <summary>
            Specifies the type of multitone trigger.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneTriggerType.Signal">
            <summary>
            Signal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneTriggerType.Generator">
            <summary>
            Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneTriggerType.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneTriggerType.FreeRun">
            <summary>
            Free Run
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MultitoneLevelRatioType">
            <summary>
            Specifies the type of ratio to compute for a Multitone ratio meter.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneLevelRatioType.RmsLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneLevelRatioType.MaxLevel">
            <summary>
            Max Level
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementRecorderReadingRate">
            <summary>
            Specifies the reading rate of the Measurement Recorder.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.TwentyPerSec">
            <summary>
            20/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.TenPerSec">
            <summary>
            10/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.FivePerSec">
            <summary>
            5/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.ThreePerSec">
            <summary>
            3/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.TwoPerSec">
            <summary>
            2/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.OnePerSec">
            <summary>
            1/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.EveryTwoSec">
            <summary>
            0.5/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.EveryFiveSec">
            <summary>
            0.2/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementRecorderReadingRate.EveryTenSec">
            <summary>
            0.1/sec
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AutoGeneratorLevelMode">
            <summary>
            Specifies the algorithm the regulation engine will use to determine the desired generator level.
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.AutoGeneratorLevelMode.TargetDistortion">
            <summary>
            Target Distortion
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoGeneratorLevelMode.MinimumDistortion">
            <summary>
            Minimum Distortion
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoGeneratorLevelMode.MeasuredLevel">
            <summary>
            Measured Level
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BurstSignalType">
            <summary>
            Specifies the shape of the burst waveform.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BurstSignalType.Burst1kHz_20dB">
            <summary>
            1 kHz CEA-2006/490A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BurstSignalType.Burst50Hz_20dB">
            <summary>
            50 Hz CEA-2006
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AllSwitcherChannelSelection">
            <summary>
            Values for a switcher ChA or ChB configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.None">
            <summary>
            (none)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch1">
            <summary>
            Port 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch2">
            <summary>
            Port 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch3">
            <summary>
            Port 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch4">
            <summary>
            Port 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch5">
            <summary>
            Port 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch6">
            <summary>
            Port 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch7">
            <summary>
            Port 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch8">
            <summary>
            Port 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch9">
            <summary>
            Port 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch10">
            <summary>
            Port 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch11">
            <summary>
            Port 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.Ch12">
            <summary>
            Port 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AllSwitcherChannelSelection.AllButChA">
            <summary>
            All But ChA
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputSwitcherChannelBSelection">
            <summary>
            Values for a switcher ChA or ChB configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.None">
            <summary>
            (none)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch1">
            <summary>
            Port 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch2">
            <summary>
            Port 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch3">
            <summary>
            Port 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch4">
            <summary>
            Port 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch5">
            <summary>
            Port 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch6">
            <summary>
            Port 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch7">
            <summary>
            Port 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch8">
            <summary>
            Port 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch9">
            <summary>
            Port 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch10">
            <summary>
            Port 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch11">
            <summary>
            Port 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.Ch12">
            <summary>
            Port 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputSwitcherChannelBSelection.AllButChA">
            <summary>
            All But ChA
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ReportExportFormat">
            <summary>
            File formats for saving a report.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Pdf">
            <summary>
            Portable Document Format (*.pdf)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Html">
            <summary>
            HTML (*.html)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Rtf">
            <summary>
            Rich Text Format (*.rtf)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Xlsx">
            <summary>
            Excel Workbook (*.xlsx)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Xls">
            <summary>
            Excel 97-2003 Workbook (*.xls)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Text">
            <summary>
            Text (*.csv)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportExportFormat.Matlab">
            <summary>
            Matlab (*.mat)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ReportType">
            <summary>
            Styles of APx reports.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportType.APxDefault">
            <summary>
            APx Default Layout
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportType.MsWord">
            <summary>
            Microsoft Word
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdmiAudioFormat">
            <summary>
            Audio Formats for HDMI output.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiAudioFormat.Linear2Channel">
            <summary>
            Linear 2Ch Layout0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiAudioFormat.Linear8Channel">
            <summary>
            Linear 8Ch Layout1
            </summary>
        </member>
        <member name="T:AudioPrecision.API.GeneratorType">
            <summary>
            Generator types for measurements with more than one type
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImdGeneratorType">
            <summary>
            Generator types for IMD measurements
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorType.Imd">
            <summary>
            IMD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PsrGeneratorType">
            <summary>
            Generator types for PSR measurements
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Square">
            <summary>
            Square (217 Hz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse125">
            <summary>
            Pulse (217 Hz, 1/8 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse250">
            <summary>
            Pulse (217 Hz, 1/4 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse375">
            <summary>
            Pulse (217 Hz, 3/8 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse625">
            <summary>
            Pulse (217 Hz, 5/8 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse750">
            <summary>
            Pulse (217 Hz, 3/4 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Pulse875">
            <summary>
            Pulse (217 Hz, 7/8 duty cycle)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PsrGeneratorType.Noise">
            <summary>
            Noise (TPDF)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputChannelAssignment">
            <summary>
            The channel from a stereo waveform.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:AudioPrecision.API.WaveMultiChannelAssignment">
            <summary>
            The channel from a multi-channel waveform.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch4">
            <summary>
            4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch5">
            <summary>
            5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch6">
            <summary>
            6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch7">
            <summary>
            7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch10">
            <summary>
            10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch11">
            <summary>
            11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch12">
            <summary>
            12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch13">
            <summary>
            13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch14">
            <summary>
            14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch15">
            <summary>
            15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveMultiChannelAssignment.Ch16">
            <summary>
            16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MultitoneGeneratorType">
            <summary>
            The signal generation specification for the Multitone Analyzer measurement
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneGeneratorType.Multitone_32">
            <summary>
            Multitone
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FrequencySweepSignalType">
            <summary>
            Specifies the waveform expected by the measurement algorithm when in external generator mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_11">
            <summary>
            20Hz-20kHz 1/1 oct. (11pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_11_3sec">
            <summary>
            20Hz-20kHz 1/1 oct. (11pt, slow)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_31">
            <summary>
            20Hz-20kHz 1/3 oct. (31pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_31_3sec">
            <summary>
            20Hz-20kHz 1/3 oct. (31pt, slow)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_61">
            <summary>
            20Hz-20kHz 1/6 oct. (61pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_61_3sec">
            <summary>
            20Hz-20kHz 1/6 oct. (61pt, slow)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_62">
            <summary>
            20Hz-22kHz 1/6 oct. (62pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_12">
            <summary>
            20Hz-40kHz 1/1 oct. (12pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_34">
            <summary>
            20Hz-40kHz 1/3 oct. (34pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_68">
            <summary>
            20Hz-45kHz 1/6 oct. (68pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_13">
            <summary>
            20Hz-80kHz 1/1 oct. (13pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_37">
            <summary>
            20Hz-80kHz 1/3 oct. (37pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Freq_sweep_74">
            <summary>
            20Hz-90kHz 1/6 oct. (74pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyDigital_ThdnVsFrequencySweep">
            <summary>
            Dolby 1/6 Oct sweep (Autotest 2.0) 20 Hz - 20 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyDigital_ThdnVsFrequencySweep_HighToLow">
            <summary>
            Dolby 1/6 Oct sweep 20 kHz - 20 Hz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_48K_Freqs">
            <summary>
            Dolby TrueHD 20Hz-24kHz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_48K_Freqs_HighToLow">
            <summary>
            Dolby TrueHD 24kHz-20Hz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_96K_Freqs">
            <summary>
            Dolby TrueHD 20Hz-48kHz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_96K_Freqs_HighToLow">
            <summary>
            Dolby TrueHD 48kHz-20Hz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_192K_Freqs">
            <summary>
            Dolby TrueHD 20Hz-96kHz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyTrueHD_BD_FREQRES_192K_Freqs_HighToLow">
            <summary>
            Dolby TrueHD 96kHz-20Hz (60pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyDigital_ThdnVsFrequencySweep_DVD_1_5">
            <summary>
            Dolby 1/6 Oct sweep (Test DVD 1.5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DolbyDigital_LFE_DVD_1_5">
            <summary>
            Dolby 1/6 Oct LFE(20-120 Hz) sweep (Test DVD 1.5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DtsFreqResponseMain">
            <summary>
            DTS 20Hz-20kHz@-20dBFS (30pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.DtsFreqResponseCLFE">
            <summary>
            DTS 20Hz-300Hz@-20dBFS (15pt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Dts_20_40kHz_freq_sweep">
            <summary>
            DTS 20Hz-40kHz (31pt.)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.Unknown">
            <summary>
            Unknown Signal
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.FrequencySweepSignalType.UserDefined">
            <summary>
            User Defined
            </summary>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.MultitoneSignalType">
            <summary>
            Specifies the waveform expected by the measurement algorithm when in external generator mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_32">
            <summary>
            APx 32-tone
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.DolbyDigital_BassManagement">
            <summary>
            DD Bass Management
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_1">
            <summary>
            3-tone, 44.1k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_2">
            <summary>
            5-tone, 44.1k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_3">
            <summary>
            7-tone, 44.1k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_4">
            <summary>
            3-tone, 44.1k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_5">
            <summary>
            5-tone, 44.1k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_6">
            <summary>
            7-tone, 44.1k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_7">
            <summary>
            3-tone, 44.1k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_8">
            <summary>
            5-tone, 44.1k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_9">
            <summary>
            7-tone, 44.1k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_10">
            <summary>
            3-tone, 48k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_11">
            <summary>
            5-tone, 48k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_12">
            <summary>
            7-tone, 48k, 8k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_13">
            <summary>
            3-tone, 48k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_14">
            <summary>
            5-tone, 48k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_15">
            <summary>
            7-tone, 48k, 16k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_16">
            <summary>
            3-tone, 48k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_17">
            <summary>
            5-tone, 48k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Multitone_18">
            <summary>
            7-tone, 48k, 20k BW
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.Unknown">
            <summary>
            Unknown Signal
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.MultitoneSignalType.UserDefined">
            <summary>
            User Defined
            </summary>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.HdmiInputLayout">
            <summary>
            Specifies the layout of audio received from an HDMI input.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiInputLayout.Layout0">
            <summary>
            Layout 0: 2ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiInputLayout.Layout1">
            <summary>
            Layout 1: 8ch
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MasterClockSource">
            <summary>
            Specifies the whether the master clock the digital serial input module is generated by APx or by the DUT.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MasterClockSource.Internal">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MasterClockSource.External">
            <summary>
            External
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ClockDirection">
            <summary>
            Specifies the direction of the bit and frame clocks on the digital serial input module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ClockDirection.In">
            <summary>
            In
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ClockDirection.Out">
            <summary>
            Out
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SerialFormat">
            <summary>
            Specifies the timing and clock alignment of data transmitted over the serial digital interface.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialFormat.I2S">
            <summary>
            I2S
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialFormat.DSP">
            <summary>
            DSP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialFormat.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.EdgeSync">
            <summary>
            The bit clock edge on which serial data is sampled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdgeSync.RisingEdge">
            <summary>
            Rising
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdgeSync.FallingEdge">
            <summary>
            Falling
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmDataEdge">
            <summary>
            The bit clock edge on which PDM data is sampled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDataEdge.BothLR">
            <summary>
            Both (Stereo, LR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDataEdge.BothRL">
            <summary>
            Both (Stereo, RL)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDataEdge.Rising">
            <summary>
            Rising
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDataEdge.Falling">
            <summary>
            Falling
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmSignalSource">
            <summary>
            Selects decimated or undecimated PDM analysis in Signal Analyzer.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmSignalSource.DecimatedAudio">
            <summary>
            Decimated Audio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmSignalSource.PdmBitstream">
            <summary>
            PDM Bitstream
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmInterpolationRatio">
            <summary>
            The interpolation ratio at the PDM output.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X16">
            <summary>
            x16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X17">
            <summary>
            x16.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X21">
            <summary>
            x21.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X24">
            <summary>
            x24
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X25">
            <summary>
            x25
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X32">
            <summary>
            x32
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X33">
            <summary>
            x33.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X37">
            <summary>
            x37.5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X42">
            <summary>
            x42.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X48">
            <summary>
            x48
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X50">
            <summary>
            x50
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X62">
            <summary>
            x62.5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X64">
            <summary>
            x64
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X66">
            <summary>
            x66.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X75">
            <summary>
            x75
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X85">
            <summary>
            x85.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X96">
            <summary>
            x96
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X100">
            <summary>
            x100
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X125">
            <summary>
            x125
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X128">
            <summary>
            x128
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X150">
            <summary>
            x150
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X192">
            <summary>
            x192
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X200">
            <summary>
            x200
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X250">
            <summary>
            x250
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X256">
            <summary>
            x256
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X300">
            <summary>
            x300
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X384">
            <summary>
            x384
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X400">
            <summary>
            x400
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X500">
            <summary>
            x500
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X512">
            <summary>
            x512
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X600">
            <summary>
            x600
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X768">
            <summary>
            x768
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmInterpolationRatio.X800">
            <summary>
            x800
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmDecimationRatio">
            <summary>
            The decimation ratio at the PDM input.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X1">
            <summary>
            x1 (Bitstream)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X3">
            <summary>
            x3.125
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X4">
            <summary>
            x4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X6">
            <summary>
            x6.25
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X8">
            <summary>
            x8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X8p33">
            <summary>
            x8.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X10">
            <summary>
            x10.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X12">
            <summary>
            x12.5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X15">
            <summary>
            x15.625
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X16">
            <summary>
            x16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X17">
            <summary>
            x16.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X19">
            <summary>
            x18.75
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X21">
            <summary>
            x21.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X24">
            <summary>
            x24
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X25">
            <summary>
            x25
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X31">
            <summary>
            x31.25
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X32">
            <summary>
            x32
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X33">
            <summary>
            x33.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X37">
            <summary>
            x37.5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X42">
            <summary>
            x42.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X46">
            <summary>
            x46.875
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X48">
            <summary>
            x48
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X50">
            <summary>
            x50
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X62">
            <summary>
            x62.5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X64">
            <summary>
            x64
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X66">
            <summary>
            x66.67
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X75">
            <summary>
            x75
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X85">
            <summary>
            x85.33
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X96">
            <summary>
            x96
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X100">
            <summary>
            x100
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X125">
            <summary>
            x125
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X128">
            <summary>
            x128
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X150">
            <summary>
            x150
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X192">
            <summary>
            x192
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X200">
            <summary>
            x200
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X250">
            <summary>
            x250
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X256">
            <summary>
            x256
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X300">
            <summary>
            x300
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X384">
            <summary>
            x384
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X400">
            <summary>
            x400
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X500">
            <summary>
            x500
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X512">
            <summary>
            x512
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X600">
            <summary>
            x600
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X768">
            <summary>
            x768
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmDecimationRatio.X800">
            <summary>
            x800
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmModulatorOrder">
            <summary>
            The order of the PDM modulator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOrder.Order4">
            <summary>
            4th Order
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOrder.Order5">
            <summary>
            5th Order
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmModulatorOsr">
            <summary>
            The designed oversampling ratio of the PDM modulator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOsr.OsrAuto">
            <summary>
            Auto OSR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOsr.Osr64">
            <summary>
            x64
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOsr.Osr128">
            <summary>
            x128
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOsr.Osr256">
            <summary>
            x256
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmModulatorOsr.Osr512">
            <summary>
            x512
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SweepStepType">
            <summary>
            Specifies the spacing of sweep steps.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepStepType.Log">
            <summary>
            Logarithmic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepStepType.Lin">
            <summary>
            Linear
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepStepType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DiagnosticsGeneratorType">
            <summary>
            Specifies the type of digital generator for the diagnostics measurement.
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.SineDual">
            <summary>
            Sine, Dual
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.SineVarPhase">
            <summary>
            Sine, Var Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.Noise">
            <summary>
            Noise
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.WalkingZeros">
            <summary>
            Walking Zeros
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.WalkingOnes">
            <summary>
            Walking Ones
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.ConstantValue">
            <summary>
            Constant Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.BittestRandom">
            <summary>
            Bit Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiagnosticsGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DigitalErrorGeneratorType">
            <summary>
            Specifies the type of digital generator for the Digital Error Rate measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DigitalErrorGeneratorType.BittestRandom">
            <summary>
            Bit Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DigitalErrorGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SquarewaveGeneratorType">
            <summary>
            Specifies the type of generator when the AG52 option is installed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.SineDual">
            <summary>
            Sine, Dual
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.SineDualImd">
            <summary>
            IMD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.SineVarPhase">
            <summary>
            Sine, Var Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Sinad_400Hz">
            <summary>
            Sine (400 Hz)
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Sinad_1kHz">
            <summary>
            Sine (1 kHz)
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.IMD">
            <summary>
            IMD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.WalkingZeros">
            <summary>
            Walking Zeros
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.WalkingOnes">
            <summary>
            Walking Ones
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.ConstantValue">
            <summary>
            Constant Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.BittestRandom">
            <summary>
            Bit Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Noise">
            <summary>
            Noise
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.SineBurst">
            <summary>
            Sine, Burst
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SquarewaveGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SplitSineWithFileGeneratorType">
            <summary>
            Specifies the type of sine wave to generate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineWithFileGeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineWithFileGeneratorType.SplitFrequency">
            <summary>
            Split Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineWithFileGeneratorType.SplitPhase">
            <summary>
            Split Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineWithFileGeneratorType.File">
            <summary>
            Browse for file...
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SplitSineGeneratorType">
            <summary>
            Specifies the type of sine wave to generate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineGeneratorType.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineGeneratorType.SplitFrequency">
            <summary>
            Split Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SplitSineGeneratorType.SplitPhase">
            <summary>
            Split Phase
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ActiveDataBitsType">
            <summary>
            Sepcifies whether or the Signal Path Diagnostics measurement observes the most recent input sample (DataBits), or whether it observes all samples looking for bits that have changed (ActiveBits).
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ActiveDataBitsType.ActiveBits">
            <summary>
            Active Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ActiveDataBitsType.DataBits">
            <summary>
            Data Bits
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdmiSinkEdidType">
            <summary>
            Specifies which EDID APx will present to sink devices at the HDMI Source connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSinkEdidType.Default">
            <summary>
            Use APx Default EDID
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSinkEdidType.AuxOutMonitor">
            <summary>
            Use EDID from Aux Out (A/V Monitor)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSinkEdidType.Custom">
            <summary>
            Use Custom EDID
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CecCommandTypeEnum">
            <summary>
            Specifies a CEC command issued by APx to an HDMI device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.InitiateARC_0xC0">
            <summary>
            Initiate ARC (0xC0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.ReportARCInitiated_0xC1">
            <summary>
            Report ARC Initiated (0xC1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.ReportARCTerminated_0xC2">
            <summary>
            Report ARC Terminated (0xC2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.RequestARCInitiation_0xC3">
            <summary>
            Request ARC Initiation (0xC3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.RequestARCTermination_0xC4">
            <summary>
            Request ARC Termination (0xC4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.TerminateARC_0xC5">
            <summary>
            Terminate ARC (0xC5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecCommandTypeEnum.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="T:AudioPrecision.API.NoiseShape">
            <summary>
            Specifies the algorithm used to generate noise signals.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NoiseShape.White">
            <summary>
            White
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NoiseShape.Pink">
            <summary>
            Pink
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NoiseShape.Iec">
            <summary>
            IEC 60268-1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NoiseShape.Bs">
            <summary>
            BS EN 50332-1
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ArcPhysicalLayerMode">
            <summary>
            Specifies the ARC mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ArcPhysicalLayerMode.SingleMode">
            <summary>
            Single Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ArcPhysicalLayerMode.CommonMode">
            <summary>
            Common Mode
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ArcTransmitterNegotiation">
            <summary>
            Specifies how the ARC transmitter is initialized.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ArcTransmitterNegotiation.Negotiated">
            <summary>
            Negotiated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ArcTransmitterNegotiation.ForcedOn">
            <summary>
            Audio Forced On
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CecDeviceType">
            <summary>
            Specifies the type of CEC device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeTv">
            <summary>
            TV (0x0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeRec1">
            <summary>
            Recording Device 1 (0x1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeRec2">
            <summary>
            Recording Device 2 (0x2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeTune1">
            <summary>
            Tuner 1 (0x3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypePlay1">
            <summary>
            Playback Device 1 (0x4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeAudio">
            <summary>
            Audio System (0x5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeTune2">
            <summary>
            Tuner 2 (0x6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeTune3">
            <summary>
            Tuner 3 (0x7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypePlay2">
            <summary>
            Playback Device 2 (0x8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeRec3">
            <summary>
            Recording Device 3 (0x9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeTune4">
            <summary>
            Tuner 4 (0xA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypePlay3">
            <summary>
            Playback Device 3 (0xB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeRsvd1">
            <summary>
            Reserved (0xC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeRsvd2">
            <summary>
            Reserved (0xD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeSpec">
            <summary>
            Spec (0xE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecDeviceType.DeviceTypeBroadcast">
            <summary>
            Broadcast (0xF)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BitErrorAnalysisType">
            <summary>
            Specifies how digital error rates are computed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BitErrorAnalysisType.Instantaneous">
            <summary>
            Instantaneous
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BitErrorAnalysisType.Totalized">
            <summary>
            Totalized
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OctaveSmoothingType">
            <summary>
            Specifies the smoothing applied to the X,Y graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave24">
            <summary>
            1/24 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave12">
            <summary>
            1/12 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave9">
            <summary>
            1/9 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave6">
            <summary>
            1/6 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave3">
            <summary>
            1/3 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OctaveSmoothingType.Octave1">
            <summary>
            1/1 octave
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BandpassSelectivityType">
            <summary>
            Specifies the width of the filter in the Bandpass Level measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.WindowWidth">
            <summary>
            Window width
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave24">
            <summary>
            1/24 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave12">
            <summary>
            1/12 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave9">
            <summary>
            1/9 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave6">
            <summary>
            1/6 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave3">
            <summary>
            1/3 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.Octave1">
            <summary>
            1 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSelectivityType.RectangularBand">
            <summary>
            Rectangular band
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BandpassSweepSelectivityType">
            <summary>
            Specifies the width of the filter in the Bandpass Sweep measurements.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.WindowWidth">
            <summary>
            Window width
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave24">
            <summary>
            1/24 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave12">
            <summary>
            1/12 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave9">
            <summary>
            1/9 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave6">
            <summary>
            1/6 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave3">
            <summary>
            1/3 octave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BandpassSweepSelectivityType.Octave1">
            <summary>
            1 octave
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FilterTuningType">
            <summary>
            Specifies the filter tuning mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FilterTuningType.GeneratorFrequency">
            <summary>
            Generator Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FilterTuningType.JitterGeneratorFrequency">
            <summary>
            Jitter Generator Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FilterTuningType.MeasuredFrequency">
            <summary>
            Measured Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FilterTuningType.FixedFrequency">
            <summary>
            Fixed Frequency
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImdAnalysisType">
            <summary>
            Specifies the IMD measurement mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdAnalysisType.SmpteDin">
            <summary>
            SMPTE/DIN
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdAnalysisType.Dfd">
            <summary>
            DFD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdAnalysisType.Ccif">
            <summary>
            CCIF
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdAnalysisType.Dim">
            <summary>
            DIM
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FileAudioType">
            <summary>
            Specifies the audio type for saved file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAudioType.LinearPcmMono">
            <summary>
            Multiple Mono PCM (.wav)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAudioType.LinearPcm">
            <summary>
            Multi-channel PCM (.wav)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAudioType.LinearPcmMulti">
            <summary>
            Extensible Multi-channel PCM (.wav)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RecordedAudioType">
            <summary>
            Specifies the audio type for recording.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.LinearPcmMono">
            <summary>
            Multiple Mono PCM (.wav)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.LinearPcm">
            <summary>
            Multi-channel PCM (.wav)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.LinearPcmMulti">
            <summary>
            Extensible Multi-channel PCM (.wav)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.DolbyDigital">
            <summary>
            Dolby Digital (.ac3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.DolbyDigitalPlus">
            <summary>
            Dolby Digital+ (.ec3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.DtsCompact">
            <summary>
            DTS 5.1 Compact (.cpt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.Dts">
            <summary>
            DTS 5.1 (.dts)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.DtsHD">
            <summary>
            DTS-HD (.cpt)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.Mlp">
            <summary>
            Dolby TrueHD (.mlp)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.AutoEncoded">
            <summary>
            Auto Detect Encoded
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecordedAudioType.RawEncodedBitStream">
            <summary>
            Raw Encoded Bitstream (.bin)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DtsTransmitRate">
            <summary>
            Specifies the transmission rate of a DTS waveform when carried over the Digital HDMI or Digital Serial interfaces.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DtsTransmitRate.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DtsTransmitRate.FourX">
            <summary>
            4x
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DtsXPackMode">
            <summary>
            Specifies the packing mode for DTS:X bitstreams when carried over the Digital HDMI or Digital Serial interfaces.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DtsXPackMode.FourX_24Mbps">
            <summary>
            4x, 24Mbps Max
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DtsXPackMode.FourX_6Mbps">
            <summary>
            4x, 6Mbps Max
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DtsXPackMode.OneX_1Mbps">
            <summary>
            1x, 1.5Mbps Max
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulatedFrequencySweepMode">
            <summary>
            Specifies the type of measurement to make when running a Regulated Frequency Sweep measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulatedFrequencySweepMode.RegulateDistortion">
            <summary>
            Regulate THD+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulatedFrequencySweepMode.RegulateLevel">
            <summary>
            Regulate Measured Level
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasureJitterInputSignal">
            <summary>
            Specifies the type of input signal when selecting an input connector that supports Jitter
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasureJitterInputSignal.Audio">
            <summary>
            Audio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasureJitterInputSignal.JitterUI">
            <summary>
            Jitter (UI)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasureJitterInputSignal.JitterSec">
            <summary>
            Jitter (sec)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.JitterGeneratorOutputSignal">
            <summary>
            Specifies the type of output signal in input Jitter generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterGeneratorOutputSignal.JitterSec">
            <summary>
            Sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterGeneratorOutputSignal.JitterUI">
            <summary>
            UI
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RefSyncUI">
            <summary>
            Specifies which of the rear panel outputs will be used to calculate Jitter UI
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RefSyncUI.RefOut">
            <summary>
            Reference Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RefSyncUI.SyncOut">
            <summary>
            Sync Output
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudibleMonitorSignalType">
            <summary>
            Specifies the type of input signal to monitor.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorSignalType.FullInputSignal">
            <summary>
            Full Input Signal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorSignalType.ThdNResidual">
            <summary>
            THD+N Residual
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudibleMonitorChannelMix">
            <summary>
            Specifies whether or not the audio is mixed into the Windows Audio device, and on which channels the mix occurs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorChannelMix.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorChannelMix.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorChannelMix.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorChannelMix.LeftAndRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudibleMonitorGain">
            <summary>
            Sets the audible signal monitor gain (including automatic gain control).
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.Auto">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x1">
            <summary>
            x1 (0 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x3">
            <summary>
            x3 (10 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x10">
            <summary>
            x10 (20 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x30">
            <summary>
            x30 (30 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x100">
            <summary>
            x100 (40 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x300">
            <summary>
            x300 (50 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x1K">
            <summary>
            x1K (60 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x3K">
            <summary>
            x3K (70 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x10K">
            <summary>
            x10K (80 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x30K">
            <summary>
            x30K (90 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudibleMonitorGain.x100K">
            <summary>
            x100K (100 dB)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.XYStatisticsFunctionType">
            <summary>
            Specifies the mathematical computation for a Min/Max/Statistics XY derived result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.Min">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.Max">
            <summary>
            Maximum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.GeometricMean">
            <summary>
            Geometric Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.ArithmeticMean">
            <summary>
            Arithmetic Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.Rms">
            <summary>
            RMS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.StdDev">
            <summary>
            Standard Deviation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYStatisticsFunctionType.PowerAverage">
            <summary>
            Power Average
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeterStatisticsFunctionType">
            <summary>
            Specifies the mathematical computation for a Min/Max/Statistics single value derived result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.Min">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.Max">
            <summary>
            Maximum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.GeometricMean">
            <summary>
            Geometric Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.ArithmeticMean">
            <summary>
            Arithmetic Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.Rms">
            <summary>
            RMS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.StdDev">
            <summary>
            Standard Deviation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.MaxDiffFromGeometricMean">
            <summary>
            Max Difference from Geometric Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.MaxDiffFromArithmeticMean">
            <summary>
            Max Difference from Arithmetic Mean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterStatisticsFunctionType.PowerAverage">
            <summary>
            Power Average
            </summary>
        </member>
        <member name="T:AudioPrecision.API.NormalizationMode">
            <summary>
            Specifies the computation for a Normalize derived result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NormalizationMode.Normalize">
            <summary>
            Normalize
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NormalizationMode.Invert">
            <summary>
            Invert
            </summary>
        </member>
        <member name="T:AudioPrecision.API.XYDataSetType">
            <summary>
            Specifies which source input data is used in a derived result computation.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYDataSetType.All">
            <summary>
            All Data Sets
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYDataSetType.MostRecent">
            <summary>
            Most Recent Data Set
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XYDataSetType.Specific">
            <summary>
            Data Set {0}
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeterDataSetType">
            <summary>
            Specifies which source input data is used in a derived result computation.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterDataSetType.MostRecent">
            <summary>
            Most Recent Data Set
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeterDataSetType.Specific">
            <summary>
            Data Set {0}
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CompareMeterReference">
            <summary>
            Specifies whether a Compare meter derived result compares input values to a constant, or to data on a specific input channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Constant">
            <summary>
            Constant
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch1">
            <summary>
            Ch1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch2">
            <summary>
            Ch2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch3">
            <summary>
            Ch3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch4">
            <summary>
            Ch4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch5">
            <summary>
            Ch5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch6">
            <summary>
            Ch6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch7">
            <summary>
            Ch7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch8">
            <summary>
            Ch8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch9">
            <summary>
            Ch9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch10">
            <summary>
            Ch10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch11">
            <summary>
            Ch11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch12">
            <summary>
            Ch12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch13">
            <summary>
            Ch13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch14">
            <summary>
            Ch14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch15">
            <summary>
            Ch15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CompareMeterReference.Ch16">
            <summary>
            Ch16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.APxOption">
            <summary>
            Represents the optional hardware or software modules for the APx500 product family.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.HdmiModule">
            <summary>
            The HDMI interface module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.DigitalSerialIOModule">
            <summary>
            The Digital Serial interface module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.DigitalIOModule">
            <summary>
            The Digital I/O module with at least Digital Unbalanced and Digital Optical connectors
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.DigitalBalancedIOModule">
            <summary>
            The Digital I/O module with Digital Balanced, Digital Unbalanced, and Digital Optical connectors
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.AG52AnalogGeneratorModule">
            <summary>
            The AG52 Advanced sine wave generator module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.BW52AnalogAnalyzerModule">
            <summary>
            The BW52 High Bandwidth Analog Analyzer module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.BluetoothModule">
            <summary>
            The Bluetooth interface module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.PdmModule">
            <summary>
            The PDM interface module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.BluetoothWidebandSpeech">
            <summary>
            Wideband Speech (HFP 1.6) for Bluetooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.HdmiArcModule">
            <summary>
            The HDMI interface module with Audio Return Channel (ARC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.AnalogInputModule">
            <summary>
            The Analog input module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.AnalogOutputModule">
            <summary>
            The Analog output module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.HdmiCecMessage">
            <summary>
            The HDMI interface module with CEC send message capabilities.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.RefSyncModule">
            <summary>
            The Sync and Ref module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.DCX">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.BenchMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.AdvancedDigitalModule">
            <summary>
            Advanced digital input and output module with jitter analysis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.DigitalSerialJitterAnalysis">
            <summary>
            Jitter analysis option for the Digital Serial I/O module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.JitterGenerator">
            <summary>
            Jitter generator option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.PdmJitter">
            <summary>
            PDM module supports Jitter.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.PdmLowVoltage">
            <summary>
            PDM module supports Low Voltage.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.PdmExtendedVdd">
            <summary>
            PDM module supports extended Vdd.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.APx1701">
            <summary>
            APx1701 supported.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.BluetoothDuoModule">
            <summary>
            The 2nd generation Bluetooth interface module
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.EAG">
            <summary>
            The Enhanced Analog Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_AdvancedMeasurementLibrary">
            <summary>
            SW-AML Advanced Measurement Library 3.0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_HighSpeedTest">
            <summary>
            SW-HST High Speed Test 3.0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_AcousticPackage">
            <summary>
            SW-ACR Acoustic Response Measurements 3.0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_PESQ">
            <summary>
            SW-PESQ Perceptual Evaluation of Speech Quality Measurement
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_POLQA">
            <summary>
            SW-POLQA Perceptual Objective Listening Quality Assessment Measurement
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_ASIO">
            <summary>
            SW-ASIO Audio Stream Input/Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_AML">
            <summary>
            SW-AML Advanced Measurement Library 3.1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_HST">
            <summary>
            SW-HST High Speed Test 3.1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_SPKRD">
            <summary>
            SW-SPK-RD Speaker R&amp;D
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_SPKPT">
            <summary>
            SW-SPK-PT Loudspeaker Production Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_CAPI">
            <summary>
            SW-CAPI C++ API Library
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_ACR">
            <summary>
            SW-ACR Acoustic Response Measurements 3.1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_BEN">
            <summary>
            SW-BEN Bench Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_TTH">
            <summary>
            SW-TTH Headphone Test (Korean Standard)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_TTS">
            <summary>
            SW-TTS Loudspeaker Test (Korean Standard)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_STI">
            <summary>
            SW-STI Speech Transmission Index
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_ABC">
            <summary>
            SW-ABC-MRT Speech Intelligibility
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_ADCTEST">
            <summary>
            SW-ADCTEST A/D Test
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_101">
            <summary>
            Software Option 101
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_102">
            <summary>
            Software Option 102
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_103">
            <summary>
            Software Option 103
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_104">
            <summary>
            Software Option 104
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOption.SW_105">
            <summary>
            Software Option 105
            </summary>
        </member>
        <member name="T:AudioPrecision.API.EQType">
            <summary>
            Specifices the type of EQ table to apply to the generator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EQType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EQType.Relative">
            <summary>
            Relative
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EQType.Absolute">
            <summary>
            Absolute
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DistortionProductSelection">
            <summary>
            Specifies which harmonics are displayed in a Distortion Product Ratio or Distortion Product Level result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionProductSelection.SingleHarmonic">
            <summary>
            Single Harmonic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionProductSelection.SumOfHarmonics">
            <summary>
            Sum of Harmonics
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasuredInputChannelIndex">
            <summary>
            Specifies the channel or channels which will be included in a measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.All">
            <summary>
            All Channels
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch1">
            <summary>
            Ch1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch2">
            <summary>
            Ch2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch3">
            <summary>
            Ch3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch4">
            <summary>
            Ch4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch5">
            <summary>
            Ch5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch6">
            <summary>
            Ch6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch7">
            <summary>
            Ch7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch8">
            <summary>
            Ch8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch9">
            <summary>
            Ch9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch10">
            <summary>
            Ch10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch11">
            <summary>
            Ch11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch12">
            <summary>
            Ch12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch13">
            <summary>
            Ch13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch14">
            <summary>
            Ch14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch15">
            <summary>
            Ch15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasuredInputChannelIndex.Ch16">
            <summary>
            Ch16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ScaleDigitalOutputFreqBy">
            <summary>
            How the generator frequency is scaled relative to the sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.OutputRate">
            <summary>
            Output SR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.FixedRate">
            <summary>
            Fixed Rate
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ScaleSerialOutputFreqBy">
            <summary>
            This type is obsolete. Use ScaleDigitalOutputFreqBy instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScaleSerialOutputFreqBy.FixedRate">
            <summary>
            Fixed Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScaleSerialOutputFreqBy.MeasuredRate">
            <summary>
            Measured Rate
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ScalePdmOutputFreqBy">
            <summary>
            How the generator frequency is scaled when the output is configured for PDM slave mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScalePdmOutputFreqBy.FixedRate">
            <summary>
            Fixed Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ScalePdmOutputFreqBy.DecimatedRate">
            <summary>
            Decimated Rate
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AveragingType">
            <summary>
            Specifies the type of averaging used.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AveragingType.Power">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AveragingType.Synchronous">
            <summary>
            Synchronous
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AveragingType.MaxHold">
            <summary>
            Max Hold
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AveragingType.MinHold">
            <summary>
            Min Hold
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AcqLengthType">
            <summary>
            Indicates how the acquisition length is specifed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AcqLengthType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AcqLengthType.Generator">
            <summary>
            Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AcqLengthType.Seconds">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AcqLengthType.Samples">
            <summary>
            Samples
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothDeviceStatus">
            <summary>
            Specifies the status of a Bluetooth device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceStatus.Found">
            <summary>
            Found
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceStatus.Connected">
            <summary>
            Connected
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothProfileSet">
            <summary>
            Specifies the set of profiles enabled for the Bluetooth interface module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfileSet.None">
            <summary>
            Select Profiles
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfileSet.A2dpSourceHfpGatewayAvrcp">
            <summary>
            A2DP Source, HFP Audio Gateway, AVRCP Target
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfileSet.A2dpSourceHspGatewayAvrcp">
            <summary>
            A2DP Source, HSP Audio Gateway, AVRCP Target
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfileSet.A2dpSinkHfpHandsFreeAvrcp">
            <summary>
            A2DP Sink, HFP Hands-Free, AVRCP Controller
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfileSet.A2dpSinkHspHeadsetAvrcp">
            <summary>
            A2DP Sink, HSP Headset, AVRCP Controller
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothProfile">
            <summary>
            Specifies the set of supported Bluetooth profiles.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.A2DPSource">
            <summary>
            A2DP Source
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.A2DPSink">
            <summary>
            A2DP Sink
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.HFPAudioGateway">
            <summary>
            HFP Audio Gateway
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.HFPHandsFree">
            <summary>
            HFP Hands-Free
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.HSPAudioGateway">
            <summary>
            HSP Audio Gateway
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.HSPHeadset">
            <summary>
            HSP Headset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.AvrcpController">
            <summary>
            AVRCP Controller
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothProfile.AvrcpTarget">
            <summary>
            AVRCP Target
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAudioProfile">
            <summary>
            Specifies the set of supported Bluetooth profiles.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioProfile.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioProfile.A2DP">
            <summary>
            A2DP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioProfile.HFP">
            <summary>
            HFP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioProfile.HSP">
            <summary>
            HSP
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothA2dpStreamStatus">
            <summary>
            Specifies the status of the A2DP audio streaming.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpStreamStatus.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpStreamStatus.Stopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHfpHspScoStatus">
            <summary>
            Specifies the status of the HFP/HSP SCO channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspScoStatus.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspScoStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAudioRouting">
            <summary>
            Specifies how audio is routed over the Bluetooth interface.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioRouting.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioRouting.A2dp">
            <summary>
            A2DP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAudioRouting.Sco">
            <summary>
            SCO
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHfpHspCallStatus">
            <summary>
            Specifies the call status of the HFP/HSP connection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.CallInProgress">
            <summary>
            Call in Progress
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.Ringing">
            <summary>
            Ringing
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.NoCall">
            <summary>
            No Call
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.Dialing">
            <summary>
            Dialing
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.CallHeld">
            <summary>
            Holding
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.CallHeldAndActiveCall">
            <summary>
            Holding and Call in Progress
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHspCallStatus.CallHeldAndRinging">
            <summary>
            Holding and Incoming Call
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothDiscoverAndConnectMode">
            <summary>
            Specifies whether APx is discoverable and whether or not pairing and connection are allowed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDiscoverAndConnectMode.Auto">
            <summary>
            Auto Discoverable/Pair/Connect
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDiscoverAndConnectMode.NotDiscoverableNoConnect">
            <summary>
            Not Discoverable, No Pair/Connect
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothConnectProfile">
            <summary>
            Specifies which Bluetooth profiles will be connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothConnectProfile.All">
            <summary>
            All Profiles
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothConnectProfile.A2DP">
            <summary>
            A2DP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothConnectProfile.AVRCP">
            <summary>
            AVRCP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothConnectProfile.HFP">
            <summary>
            HFP
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothConnectProfile.HSP">
            <summary>
            HSP
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothTransmitPower">
            <summary>
            Specifies which Bluetooth power level to use.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Minus20">
            <summary>
            -20 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Minus16">
            <summary>
            -16 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Minus12">
            <summary>
            -12 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Minus8">
            <summary>
            -8 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Minus4">
            <summary>
            -4 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Zero">
            <summary>
            0 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Plus4">
            <summary>
            4 dBm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothTransmitPower.Plus8">
            <summary>
            8 dBm
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpVersion">
            <summary>
            Specifies the Bluetooth AVRCP version.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpVersion.Version1_0">
            <summary>
            1.0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpVersion.Version1_4">
            <summary>
            1.4
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpPlaybackStatus">
            <summary>
            Specifies the Bluetooth AVRCP Play status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusAuto">
            <summary>
            (Auto)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusStopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusPlaying">
            <summary>
            Playing
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusPaused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusFwdSeek">
            <summary>
            Fwd Seek
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusRevSeek">
            <summary>
            Rev Seek
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpPlaybackStatus.AvrcpPlayStatusError">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpEvent">
            <summary>
            Specifies the Bluetooth AVRCP Event status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventPlaybackStatusChanged">
            <summary>
            Playback Status Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventTrackChanged">
            <summary>
            Track Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventTrackReachedEnd">
            <summary>
            Track Reached End
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventTrackReachedStart">
            <summary>
            Track Reached Start
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventPlaybackPosChanged">
            <summary>
            Playback Pos Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventBattStatusChanged">
            <summary>
            Batt Status Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventSystemStatusChanged">
            <summary>
            System Status Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventPlayerAppSettingChanged">
            <summary>
            Player App Setting Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventNowPlayingContentChanged">
            <summary>
            Now Playing Content Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventAvailablePlayersChanged">
            <summary>
            Available Players Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventAddressedPlayerChanged">
            <summary>
            Addressed Player Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventUidsChanged">
            <summary>
            UIDs Changed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpEvent.AvrcpEventVolumeChanged">
            <summary>
            Volume Changed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothClockRecovery">
            <summary>
            Specifies the clock recovery strategy used by the Bluetooth module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothClockRecovery.Auto">
            <summary>
            (Auto)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothClockRecovery.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvSyncReporting">
            <summary>
            Specifies the Bluetooth AVRCP Reporting status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvSyncReporting.Auto">
            <summary>
            (Auto)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvSyncReporting.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAtCommandInfoType">
            <summary>
            Describes the originator of an AT command. Sent indicates the command was sent by APx, Rceived indicates the command came from the remote device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAtCommandInfoType.Sent">
            <summary>
            Sent
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAtCommandInfoType.Received">
            <summary>
            Received
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpCommandInfoFilter">
            <summary>
            Describes what type of AVRCP information is displayed in the AVRCP log.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommandInfoFilter.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommandInfoFilter.Commands">
            <summary>
            Commands
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommandInfoFilter.EventsAndStatus">
            <summary>
            Events and Status
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAvrcpCommandInfoDisplayType">
            <summary>
            Describes what type of AVRCP information is displayed in the AVRCP log.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommandInfoDisplayType.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAvrcpCommandInfoDisplayType.EventStatus">
            <summary>
            Event/Status
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAtCommandWait">
            <summary>
            Describes how APx determines if it should wait for an OK or ERROR response from an AT command.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAtCommandWait.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAtCommandWait.WaitForResponse">
            <summary>
            Wait For Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAtCommandWait.DoNotWait">
            <summary>
            Do Not Wait
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothDeviceAutoConnectType">
            <summary>
            Determines how APx identifies the device to connect to in a sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromScan">
            <summary>
            Select Device From Scan
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromPrompt">
            <summary>
            Prompt User for Device Address
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromDeviceAddress">
            <summary>
            Use Specific Address
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromLastConnectedDeviceAddress">
            <summary>
            Use Last Connected Device
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromVariable">
            <summary>
            Select Device from System Variable
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothDeviceListType">
            <summary>
            Determines which devices to include in the device list.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceListType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceListType.PairedDevices">
            <summary>
            Paired Devices
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothDeviceListType.UnpairedDevices">
            <summary>
            Unpaired Devices
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SequenceStepType">
            <summary>
            Represents the type of a sequence sub-step.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.Prompt">
            <summary>
            Prompt
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.Input">
            <summary>
            Input
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.Measurement">
            <summary>
            Measurement
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.AppendedMeasurement">
            <summary>
            Appended Measurement
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.Delay">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetAuxControlOutput">
            <summary>
            Set Aux Control Out
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.EnableGenerator">
            <summary>
            Enable Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ConnectBluetoothDevice">
            <summary>
            Connect Bluetooth Device
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.DisconnectBluetoothDevice">
            <summary>
            Disconnect Bluetooth Device
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.A2dpSource">
            <summary>
            A2DP Source
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HfpAudioGateway">
            <summary>
            HFP Audio Gateway
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HspAudioGateway">
            <summary>
            HSP Audio Gateway
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.A2dpSink">
            <summary>
            AVRCP Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HfpHandsFree">
            <summary>
            AT Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HfpHandsFreeCommand">
            <summary>
            HFP Hands-Free Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HspHeadset">
            <summary>
            HSP Headset Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HspHsAtCommand">
            <summary>
            AT Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HfpAgAtCommand">
            <summary>
            AT Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HspAgAtCommand">
            <summary>
            AT Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ExportResultData">
            <summary>
            Export Result Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ImportResultData">
            <summary>
            Import Result Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SendPdmControlCodes">
            <summary>
            Send PDM Control Codes
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SendPdmControlCodeIndefinitely">
            <summary>
            Send PDM Control Code Indefinitely
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.StopSendingPdmControlCode">
            <summary>
            Stop Sending PDM Control Code
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetSwitcherConfiguration">
            <summary>
            Set Switcher Configuration
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.BluetoothEnableWidebandSpeech">
            <summary>
            Enable Wideband Speech
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.LoadCustomData">
            <summary>
            Refresh Defined Result(s)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.HdmiSendCecCommand">
            <summary>
            Send CEC Command
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ImportOutputEqCurve">
            <summary>
            Import Output EQ Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetVddOutput">
            <summary>
            Set Vdd Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ImportAmplifierCorrectionCurve">
            <summary>
            Import Amplifier Correction Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetDcxControlOutput">
            <summary>
            Set DCX Aux Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetDcxDcvOutput">
            <summary>
            Set DCX DC Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.UserEvaluationOfResultStep">
            <summary>
            User Evaluation of Result
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.DigitalSyncDelay">
            <summary>
            Digital Sync Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.StartAnalogSineWaveGenerator">
            <summary>
            Start Analog Sine Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.StopAnalogSineWaveGenerator">
            <summary>
            Stop Analog Sine Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.MakeResultVisible">
            <summary>
            Make Result Visible
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ImportLimitsData">
            <summary>
            Import Limits Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetTransducerInput">
            <summary>
            Set Transducer Interface Input
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetTransducerOutput">
            <summary>
            Set Transducer Interface Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.CalibrateFromTeds">
            <summary>
            Calibrate From TEDS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.CalibrateFromTedsAcoustic">
            <summary>
            Calibrate From TEDS Acoustic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetBluetoothTransmitPower">
            <summary>
            Set Transmit Power
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.AvrcpSetAbsoluteVolume">
            <summary>
            AVRCP Set Absolute Volume
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SetDeviceDelay">
            <summary>
            Measure and Set DUT Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ClearVariableValue">
            <summary>
            Clear Variable Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.EnableVBias">
            <summary>
            Enable VBias
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SelectInputEqCurve">
            <summary>
            Select Input EQ Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.ImportGeneratorEqCurve">
            <summary>
            Import Generator EQ Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStepType.SaveGeneratorWaveform">
            <summary>
            Save Generator Waveform
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHfpAgCommand">
            <summary>
            Specifies a phone calling command when APx is configured as an HFP Audio Gateway.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpAgCommand.Dial">
            <summary>
            Dial
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpAgCommand.Ring">
            <summary>
            Ring
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpAgCommand.OpenSco">
            <summary>
            Open SCO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpAgCommand.Hangup">
            <summary>
            Hangup
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpAgCommand.CloseSco">
            <summary>
            Close SCO
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHspAgCommand">
            <summary>
            Specifies a SCO command when APx is configured as an HSP Audio Gateway.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspAgCommand.OpenSco">
            <summary>
            Open SCO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspAgCommand.CloseSco">
            <summary>
            Close SCO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspAgCommand.Ring">
            <summary>
            Ring
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHfpHfCommand">
            <summary>
            Specifies a phone calling command when APx is configured as an HFP Hands-Free device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHfCommand.Answer">
            <summary>
            Answer
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHfCommand.Hangup">
            <summary>
            Hangup
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHfCommand.Reject">
            <summary>
            Reject
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHfCommand.OpenSco">
            <summary>
            Open SCO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHfpHfCommand.CloseSco">
            <summary>
            Close SCO
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothHspHsCommand">
            <summary>
            Specifies a phone calling command when APx is configured as an HSP Headset device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspHsCommand.Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspHsCommand.OpenSco">
            <summary>
            Open SCO
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothHspHsCommand.CloseSco">
            <summary>
            Close SCO
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothSspPairingMode">
            <summary>
            Specifies the SSP pairing mode and device capabilities
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSspPairingMode.JustWorks">
            <summary>
            Just Works
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSspPairingMode.NumericComparisonDisplayOnly">
            <summary>
            Numeric Comparison, Display Only
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSspPairingMode.NumericComparisonDisplayWithButtons">
            <summary>
            Numeric Comparison, Display+Buttons
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSspPairingMode.NumericComparisonKeyboard">
            <summary>
            Numeric Comparison, Keyboard
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImdFrequencySweepType">
            <summary>
            Specifies which frequency is the swept frequency for an IMD Frequency Sweep measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdFrequencySweepType.Frequency1">
            <summary>
            Frequency 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdFrequencySweepType.Frequency2">
            <summary>
            Frequency 2
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ChirpCrosstalkType">
            <summary>
             Specifies which algorithm, if any, to use when computing crosstalk in a chirp based measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChirpCrosstalkType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChirpCrosstalkType.HighSpeed">
            <summary>
            High speed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChirpCrosstalkType.HighAccuracyOneChannelDriven">
            <summary>
            High accuracy, one channel driven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChirpCrosstalkType.HighAccuracyOneChannelUndriven">
            <summary>
            High accuracy, one channel undriven
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SourceDataType">
            <summary>
            Specifies the data set type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SourceDataType.Measured">
            <summary>
            Measured
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SourceDataType.Imported">
            <summary>
            Imported
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SourceDataType.CustomData">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RelativeDataMode">
            <summary>
            Specifies how the data is displayed on a graph such as Relative Level or Linearity.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RelativeDataMode.Normalized">
            <summary>
            Normalized at Reference
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RelativeDataMode.CenterLimits">
            <summary>
            Auto-Centered in Limits
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TrackInputChannelIndex">
            <summary>
            Specifies the channel which will be tracked for a measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch1">
            <summary>
            Ch1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch2">
            <summary>
            Ch2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch3">
            <summary>
            Ch3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch4">
            <summary>
            Ch4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch5">
            <summary>
            Ch5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch6">
            <summary>
            Ch6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch7">
            <summary>
            Ch7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch8">
            <summary>
            Ch8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch9">
            <summary>
            Ch9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch10">
            <summary>
            Ch10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch11">
            <summary>
            Ch11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch12">
            <summary>
            Ch12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch13">
            <summary>
            Ch13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch14">
            <summary>
            Ch14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch15">
            <summary>
            Ch15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TrackInputChannelIndex.Ch16">
            <summary>
            Ch16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ProgramStepWaitBehavior">
            <summary>
            Specifies the behavior of APx when the user runs a program from an APx sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProgramStepWaitBehavior.DoNotWait">
            <summary>
            Do Not Wait for Program to Exit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProgramStepWaitBehavior.WaitForExitIgnoreResponse">
            <summary>
            Wait for Program to Exit, Ignore Program Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProgramStepWaitBehavior.WaitForExitValidateResponse">
            <summary>
            Wait for Program to Exit, Validate Program Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProgramStepWaitBehavior.WaitForExitStoreOutputInVariable">
            <summary>
            Wait for Program to Exit, Store Program Output in a Variable
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PesqAnalysisMode">
            <summary>
            Specifies the PESQ analysis mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PesqAnalysisMode.Narrowband">
            <summary>
            Narrowband (P.862)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PesqAnalysisMode.Wideband">
            <summary>
            Wideband (P.862.2)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PesqAnalysisRegion">
            <summary>
            Specifies the portion of the acquired audio to analyze for a PESQ measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PesqAnalysisRegion.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PesqAnalysisRegion.ActiveSpeech">
            <summary>
            Active Speech
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PesqAnalysisRegion.Silence">
            <summary>
            Silence
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PolqaAnalysisMode">
            <summary>
            Specifies the POLQA analysis mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PolqaAnalysisMode.Narrowband">
            <summary>
            Narrowband (P.863)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PolqaAnalysisMode.Wideband">
            <summary>
            Wideband (P.863)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PolqaAnalysisMode.SuperWideband">
            <summary>
            SuperWide (P.863)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PolqaItuVersion">
            <summary>
            Specifies the POLQA analysis version.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PolqaItuVersion.Polqa_1_1">
            <summary>
            POLQA v1.1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PolqaItuVersion.Polqa_2_4">
            <summary>
            POLQA v2.4
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DataDistributionType">
            <summary>
            Specifies the function used for calculating the deviation from mean.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DataDistributionType.StdDev">
            <summary>
            Standard Deviation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DataDistributionType.NinetyFivePercentConfidenceInterval">
            <summary>
            95% Confidence Interval
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SerialCustomDataJustification">
            <summary>
            Specifies the alignment of the data within the digital serial frame.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialCustomDataJustification.LeftJustified">
            <summary>
            Left Justified
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialCustomDataJustification.RightJustified">
            <summary>
            Right Justified
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FrameClockPulseWidth">
            <summary>
            Specifies the width of the frame clock pulse within a digital serial frame.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrameClockPulseWidth.OneBitClock">
            <summary>
            One Bit Clock
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrameClockPulseWidth.OneSubframe">
            <summary>
            One Subframe
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FrameClockPulseWidth.FiftyPercentDutyCycle">
            <summary>
            50% Duty Cycle
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CursorShape">
            <summary>
            Specifies the shape of the graph cursor point.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.Plus">
            <summary>
            Plus
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorShape.Asterisk">
            <summary>
            Asterisk
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothRetransmissionEffort">
            <summary>
            Specifies how the APx Bluetooth device attempts to retry transmission of error packets.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothRetransmissionEffort.NoRetransmission">
            <summary>
            No Retransmission
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothRetransmissionEffort.PowerSavingOptimized">
            <summary>
            Power Saving Optimized
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothRetransmissionEffort.LinkQualityOptimized">
            <summary>
            Link Quality Optimized
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothRetransmissionEffort.NoPreference">
            <summary>
            No Preference
            </summary>
        </member>
        <member name="T:AudioPrecision.API.Graticule">
            <summary>
            Specifies the display type for X,Y graph cursors.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Graticule.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Graticule.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Graticule.Full">
            <summary>
            Full
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ResidualDisplay">
            <summary>
            Gain of the residual on graphs which display both signal and residual levels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.None">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x1">
            <summary>
            x1 (0 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x10">
            <summary>
            x10 (20 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x100">
            <summary>
            x100 (40 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x1K">
            <summary>
            x1K (60 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x10K">
            <summary>
            x10K (80 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ResidualDisplay.x100K">
            <summary>
            x100K (100 dB)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmControlCodeSendType">
            <summary>
            Specifies how PDM control codes are sent.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmControlCodeSendType.Series">
            <summary>
            Defined Series
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmControlCodeSendType.SingleCodeIndefinitely">
            <summary>
            Single Code Indefinitely
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PdmControlCodeEdge">
            <summary>
            Specifies which clock edge the PDM control codes are sent on.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmControlCodeEdge.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmControlCodeEdge.Rising">
            <summary>
            Rising
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PdmControlCodeEdge.Falling">
            <summary>
            Falling
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TriggerEdge">
            <summary>
            Specifies which edge trigger is sent on.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerEdge.Rising">
            <summary>
            Rising
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerEdge.Falling">
            <summary>
            Falling
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TriggerSource">
            <summary>
            Specifies the source for output trigger.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerSource.Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerSource.AudioGenerator">
            <summary>
            Audio Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerSource.AnalogSinGenerator">
            <summary>
            Analog Sine Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TriggerSource.JitterGenerator">
            <summary>
            Jitter Generator
            </summary>
        </member>
        <member name="T:AudioPrecision.API.JitterSource">
            <summary>
            Specifies the source for output jitter.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterSource.Sine">
            <summary>
            Sine
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterSource.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterSource.Noise">
            <summary>
            Noise
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PassFailRunMode">
            <summary>
            Specifies the action for the Pass/Fail measurement type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PassFailRunMode.ShowPrompt">
            <summary>
            Show Prompt
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PassFailRunMode.RunProgram">
            <summary>
            Run Program
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PassFailRunMode.ReadFile">
            <summary>
            Read Text File
            </summary>
        </member>
        <member name="T:AudioPrecision.API.APxOperatingMode">
            <summary>
            Specifies the mode of operation of the APx software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOperatingMode.BenchMode">
            <summary>
            Bench Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APxOperatingMode.SequenceMode">
            <summary>
            Sequence Mode
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BenchTestFunction">
            <summary>
            Specifies a measurement type for Bench Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchTestFunction.Sweep">
            <summary>
            Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchTestFunction.FFT">
            <summary>
            FFT
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchTestFunction.Recorder">
            <summary>
            Recorder
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchTestFunction.ContinuousSweep">
            <summary>
            Continuous Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchTestFunction.AcousticResponse">
            <summary>
            Acoustic Response
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SweepSourceParameterType">
            <summary>
            Specifies parameters which APx can modify on each step of a sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.ExternalFrequency">
            <summary>
            Ext Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.GeneratorFrequency">
            <summary>
            Gen Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DualSineFrequencyA">
            <summary>
            Gen Freq A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DualSineFrequencyB">
            <summary>
            Gen Freq B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.ImdFrequency1">
            <summary>
            IMD Freq 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.ImdFrequency2">
            <summary>
            IMD Freq 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DfdMeanFrequency">
            <summary>
            Mean Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DfdDiffFrequency">
            <summary>
            Diff Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.GeneratorPhase">
            <summary>
            Gen Phase B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.GeneratorLevel">
            <summary>
            Gen Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.GeneratorOffset">
            <summary>
            Gen Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.OutputSampleRate">
            <summary>
            Output Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.RefSyncOutputRate">
            <summary>
            Ref/Sync Output Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.JitterFrequency">
            <summary>
            Jitter Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.JitterLevelUi">
            <summary>
            Jitter Level (UI)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.JitterLevelSec">
            <summary>
            Jitter Level (sec)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DcxDcv1Level">
            <summary>
            DCX DCV1 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.DcxDcv2Level">
            <summary>
            DCX DCV2 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepSourceParameterType.VBias">
            <summary>
            VBias
            </summary>
        </member>
        <member name="T:AudioPrecision.API.NestedSweepParameterType">
            <summary>
            Specifies parameters which APx can modify on each step of a nested sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.GeneratorFrequency">
            <summary>
            Gen Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DualSineFrequencyA">
            <summary>
            Gen Freq A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DualSineFrequencyB">
            <summary>
            Gen Freq B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.ImdFrequency1">
            <summary>
            IMD Freq 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.ImdFrequency2">
            <summary>
            IMD Freq 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DfdMeanFrequency">
            <summary>
            Mean Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DfdDiffFrequency">
            <summary>
            Diff Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.GeneratorPhase">
            <summary>
            Gen Phase B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.GeneratorLevel">
            <summary>
            Gen Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.GeneratorOffset">
            <summary>
            Gen Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.OutputSampleRate">
            <summary>
            Output Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.RefSyncOutputRate">
            <summary>
            Ref/Sync Output Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.Switcher">
            <summary>
            Switcher
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DcxDcv1">
            <summary>
            DCX DCV 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.DcxDcv2">
            <summary>
            DCX DCV 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.Dcx">
            <summary>
            DCX Ports
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.JitterFrequency">
            <summary>
            Jitter Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.JitterLevelUi">
            <summary>
            Jitter Level (UI)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.JitterLevelSec">
            <summary>
            Jitter Level (Sec)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.BluetoothAbsoluteVolume">
            <summary>
            Absolute Volume
            </summary>
        </member>
        <member name="F:AudioPrecision.API.NestedSweepParameterType.VBias">
            <summary>
            VBias
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TimeSweepRunMode">
            <summary>
            Specifies how the Recorder determines when to stop.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeSweepRunMode.Fixed">
            <summary>
            Fixed Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeSweepRunMode.RunUntilStop">
            <summary>
            Run Until Stop
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SwitcherSweepType">
            <summary>
            Specifies which type of switcher is operated upon by the sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepType.Output">
            <summary>
            Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepType.Input">
            <summary>
            Input
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepType.InputOutput">
            <summary>
            Input and Output
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SwitcherSweepChannelType">
            <summary>
            Specifies which switcher channels are operated on by the sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepChannelType.A">
            <summary>
            A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepChannelType.B">
            <summary>
            B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherSweepChannelType.AB">
            <summary>
            A and B
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FileAnalysisSampleRateMode">
            <summary>
            Specifies how APx analyzes files in file input mode if one or more files has a different sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAnalysisSampleRateMode.UseRatesFromFiles">
            <summary>
            Use rates from files, if equal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAnalysisSampleRateMode.UseRateFromFirstFile">
            <summary>
            Use rate from first file
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FileAnalysisSampleRateMode.UseFixedRate">
            <summary>
            Use fixed rate
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AutoRetryMeasurementFailureBehavior">
            <summary>
            Specifies how the APx sequencer responds when a measurement fails and the maximum number of retry attempts has been reached.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoRetryMeasurementFailureBehavior.ContinueSequence">
            <summary>
            Continue
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoRetryMeasurementFailureBehavior.CancelSequence">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogConnectorType">
            <summary>
            Specifies the physical input connector type for each analog input channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogConnectorType.Unbalanced">
            <summary>
            Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogConnectorType.Balanced">
            <summary>
            Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogConnectorType.Loopback">
            <summary>
            Loopback
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ReportUpdateBehavior">
            <summary>
            Specifies how APx responds when a report file already exists on disk.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportUpdateBehavior.MakeNew">
            <summary>
            Make a new file
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportUpdateBehavior.Replace">
            <summary>
            Replace
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportUpdateBehavior.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ReportUpdateBehavior.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FailureConditionType">
            <summary>
            Defines how limits are evaluated when an X,Y graph has both a left and right axis.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FailureConditionType.LeftOrRight">
            <summary>
            Left Or Right
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FailureConditionType.LeftAndRight">
            <summary>
            Left And Right
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LineRejectionType">
            <summary>
            Specifies the comb filter behavior for removing line frequencies and their associated harmonics.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LineRejectionType.LineNone">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LineRejectionType.Line50">
            <summary>
            50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LineRejectionType.Line60">
            <summary>
            60 Hz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AxisType">
            <summary>
            specifies the axis of interest.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisType.X">
            <summary>
            X Axis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisType.Left">
            <summary>
            Left Axis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AxisType.Right">
            <summary>
            Right Axis
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LimitType">
            <summary>
            Specifies the limit of interest.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LimitType.Upper">
            <summary>
            Upper Limit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LimitType.Lower">
            <summary>
            Lower Limit
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImportLimitType">
            <summary>
            Specifies the limit for import.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImportLimitType.Upper">
            <summary>
            Upper Limit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImportLimitType.Lower">
            <summary>
            Lower Limit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImportLimitType.Both">
            <summary>
            Both Limits
            </summary>
        </member>
        <member name="T:AudioPrecision.API.VerticalAxis">
            <summary>
            Specifies the vertical axis of interest.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VerticalAxis.Left">
            <summary>
            Left Axis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VerticalAxis.Right">
            <summary>
            Right Axis
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LevelAndDistortionDataSelection">
            <summary>
            Specifies how data is selected for meter results derived from Level and Distortion results in the Acoustic Response measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LevelAndDistortionDataSelection.AllTracesOneChannel">
            <summary>
            All Traces, One Channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LevelAndDistortionDataSelection.AllChannelsOneTrace">
            <summary>
            All Channels, One Trace
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DataNoteType">
            <summary>
            Specifies how data notes are applied to a specific measurement in a sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DataNoteType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DataNoteType.Prompt">
            <summary>
            Prompt User
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DataNoteType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SettlingAlgorithmEx">
            <summary>
            Specifies the settling algorithm.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingAlgorithmEx.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingAlgorithmEx.Flat">
            <summary>
            Flat
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingAlgorithmEx.Average">
            <summary>
            Average
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementLowpassFilterType">
            <summary>
            Specifies the low-pass filter shape and behavior for sequence mode measurements.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">
            <summary>
            Signal Path
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementLowpassFilterType.Butterworth">
            <summary>
            Butterworth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementLowpassFilterType.Elliptic">
            <summary>
            Elliptic
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeasurementHighpassFilterType">
            <summary>
            Specifies the high-pass filter shape and behavior for sequence mode measurements.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">
            <summary>
            Signal Path
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementHighpassFilterType.Butterworth">
            <summary>
            Butterworth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementHighpassFilterType.Elliptic">
            <summary>
            Elliptic
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HighpassFilterMode">
            <summary>
            Specifies the high-pass filter type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HighpassFilterMode.DC">
            <summary>
            DC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HighpassFilterMode.AC">
            <summary>
            AC (&lt;10 Hz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HighpassFilterMode.Butterworth">
            <summary>
            Butterworth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HighpassFilterMode.Elliptic">
            <summary>
            Elliptic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HighpassFilterMode.JitterAes3">
            <summary>
            700 Hz (AES3)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LowpassFilterModeAnalog">
            <summary>
            Specifies the low-pass filter type for analog input.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeAnalog.AdcPassband">
            <summary>
            ADC passband
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeAnalog.LpAes17_20k">
            <summary>
            AES17 (20 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeAnalog.LpAes17_40k">
            <summary>
            AES17 (40 kHz)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeAnalog.Butterworth">
            <summary>
            Butterworth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeAnalog.Elliptic">
            <summary>
            Elliptic
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AdcBandwidth">
            <summary>
            Specifies the analog input bandwidth and ADC sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw20k">
            <summary>
            22.4k (48 kHz SR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw45k">
            <summary>
            45k (96 kHz SR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw90k">
            <summary>
            90k (192 kHz SR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw250k">
            <summary>
            250k (624 kHz SR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw500k">
            <summary>
            500k (1.248 MHz SR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AdcBandwidth.bw1M">
            <summary>
            1M (2.496 MHz SR)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LowpassFilterModeDigital">
            <summary>
            Specifies the low-pass filter type for digital input.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeDigital.LpFsOver2">
            <summary>
            Fs/2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeDigital.Butterworth">
            <summary>
            Butterworth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LowpassFilterModeDigital.Elliptic">
            <summary>
            Elliptic
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SignalPathWeightingFilterType">
            <summary>
            Specifies the weighting filter type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_A">
            <summary>
            A-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_B">
            <summary>
            B-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_C">
            <summary>
            C-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Ccir">
            <summary>
            CCIR-1k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Dolby2k">
            <summary>
            CCIR-2k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Ccitt">
            <summary>
            CCITT
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_CMessage">
            <summary>
            C-Message
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Deemph50us">
            <summary>
            50 us de-emph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Deemph75us">
            <summary>
            75 us de-emph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Deemph50usA">
            <summary>
            50 us de-emph. + A-wt.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathWeightingFilterType.wt_Deemph75usA">
            <summary>
            75 us de-emph. + A-wt.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogSineGeneratorMode">
            <summary>
            Specifies the sine generator mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogSineGeneratorMode.HighPerformanceSineGenerator">
            <summary>
            High Performance Sine Generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogSineGeneratorMode.DacGenerator">
            <summary>
            DAC Generator
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImpedanceConfiguration">
            <summary>
            Specifies the resistor configuration when measuring speaker impedance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImpedanceConfiguration.Internal">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImpedanceConfiguration.External2Ch">
            <summary>
            External (2 Ch)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImpedanceConfiguration.External1Ch">
            <summary>
            External (1 Ch)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LoudspeakerTestConfiguration">
            <summary>
            Specifies the resistor configuration when measuring speaker impedance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LoudspeakerTestConfiguration.External2Ch">
            <summary>
            External (2 Ch)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LoudspeakerTestConfiguration.External1Ch">
            <summary>
            External (1 Ch)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ThieleSmallMeasurementMode">
            <summary>
            Specifies the type of measurement made to determine Thiele-Small parameters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallMeasurementMode.AddedMass">
            <summary>
            Added Mass
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallMeasurementMode.KnownVolume">
            <summary>
            Known Volume
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallMeasurementMode.KnownMmd">
            <summary>
            Known Mmd
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ThieleSmallParameter">
            <summary>
            Specifies characteristics of a loudspeaker.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Fs">
            <summary>
            Resonant frequency of the driver
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Qes">
            <summary>
            Electrical Q at Fs
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Qms">
            <summary>
            Mechanical Q at Fs
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Qts">
            <summary>
            Total Q at Fs
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Vas">
            <summary>
            Acoustic volume with equivalent compliance as suspension
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Cms">
            <summary>
            Mechanical compliance of the suspension
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Mms">
            <summary>
            Mechanical moving mass of the cone
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Rms">
            <summary>
            Mechanical resistance of the suspension
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Re">
            <summary>
            DC resistance of the voice coil
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Res">
            <summary>
            Electrical resistance due to driver suspension losses
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Le">
            <summary>
            Series inductance of the voice coil
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.R2">
            <summary>
            Parallel resistance of the voice coil (LR-2 model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.L2">
            <summary>
            Parallel inductance of the voice coil (LR-2 model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Erm">
            <summary>
            Motor resistance exponent (Wright model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Krm">
            <summary>
            Motor resistance coefficient (Wright model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Exm">
            <summary>
            Motor reactance exponent (Wright model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Kxm">
            <summary>
            Motor reactance coefficient (Wright model)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Sd">
            <summary>
            Effective surface area of the cone
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Bl">
            <summary>
            Magnetic motor strength
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallParameter.Eta0">
            <summary>
            Reference efficiency
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ThieleSmallModelFit">
            <summary>
            Specifies the model APx uses to fit to the measured impedance data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallModelFit.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallModelFit.LR2">
            <summary>
            LR-2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallModelFit.Wright">
            <summary>
            Wright
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ThieleSmallReType">
            <summary>
            Specifies how APx determines the Re of the driver.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallReType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallReType.Fixed">
            <summary>
            Fixed (DCR)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ThieleSmallPlottedDataType">
            <summary>
            Specifies whether the processed or unprocessed data represents the measured impedance on the corresponding plots.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallPlottedDataType.Processed">
            <summary>
            Processed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ThieleSmallPlottedDataType.Unprocessed">
            <summary>
            Unprocessed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CecMessageSendFrom">
            <summary>
            Specifies they physical APx connector from which APx will send a CEC command to another device on the HDMI bus.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendFrom.Source">
            <summary>
            HDMI Source
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendFrom.ArcTx">
            <summary>
            HDMI ARC Tx
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendFrom.Sink">
            <summary>
            HDMI Sink
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendFrom.ArcRx">
            <summary>
            HDMI ARC Rx
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CecMessageSendType">
            <summary>
            Specifies the type of CEC message.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendType.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecMessageSendType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CecSendResult">
            <summary>
            Specifies the response to a CEC message from the target HDMI device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.Ack">
            <summary>
            ACK
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.CecOff">
            <summary>
            CEC is off
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.BadReq">
            <summary>
            Bad request
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.NoLineAccess">
            <summary>
            Can't access CEC line
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.ArbitrationError">
            <summary>
            Arbitration error
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.TimingBitError">
            <summary>
            Timing bit error
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.Nak">
            <summary>
            NACK
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.DataByteNak">
            <summary>
            Data byte NACK
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.SendError">
            <summary>
            Message not sent
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CecSendResult.Unknown">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="T:AudioPrecision.API.EdidStatus">
            <summary>
            Specifies whether or APx was able to successfully read the EDID of a connected sink device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdidStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdidStatus.Read">
            <summary>
            Read successful
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdidStatus.ReceiverNotConnected">
            <summary>
            HDMI receiver is not connected
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EdidStatus.DdcError">
            <summary>
            DDC error
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SyncOutPolarityMode">
            <summary>
            Specifies if the sync out is normal or inverted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SyncOutPolarityMode.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SyncOutPolarityMode.Inverted">
            <summary>
            Inverted
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TimebaseReferenceType">
            <summary>
            Selects the reference input source.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimebaseReferenceType.Internal">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimebaseReferenceType.XLR">
            <summary>
            Ext. AES11 DARS IN (XLR)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimebaseReferenceType.BNC">
            <summary>
            Ext. Sync IN (BNC)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DarsInputTermination">
            <summary>
            Specifies the termination of the DARS Reference input.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DarsInputTermination.TermHigh">
            <summary>
            High Impedance
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DarsInputTermination.Term110">
            <summary>
            110 Ohms
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxDmmMode">
            <summary>
            Specifies the mode of the DCX DMM.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDmmMode.None">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDmmMode.Ohms">
            <summary>
            Resistance
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDmmMode.Volts">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxDcvChannel">
            <summary>
            Specifies the DCV to address.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDcvChannel.Dcv1">
            <summary>
            DCV 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDcvChannel.Dcv2">
            <summary>
            DCV 2
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxPort">
            <summary>
            Specifies the port to address.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxPort.PortA">
            <summary>
            Port A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxPort.PortB">
            <summary>
            Port B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxPort.PortC">
            <summary>
            Port C
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxPort.PortD">
            <summary>
            Port D
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxOhmRange">
            <summary>
            Specifies the DMM range while in Ohms mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Ohm2M">
            <summary>
            2 Mohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Ohm200K">
            <summary>
            200 kohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Ohm20K">
            <summary>
            20 kohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Ohm2K">
            <summary>
            2 kohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxOhmRange.Ohm200">
            <summary>
            200 ohm
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxVoltRange">
            <summary>
            Specifies the DMM range while in DCV mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Volt500">
            <summary>
            500 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Volt200">
            <summary>
            200 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Volt20">
            <summary>
            20 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Volt2">
            <summary>
            2 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxVoltRange.Volt200m">
            <summary>
            200 mV
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxDmmRate">
            <summary>
            Specifies the DMM conversion rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDmmRate.Slow">
            <summary>
            6/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxDmmRate.Fast">
            <summary>
            25/sec
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DcxSweepParameter">
            <summary>
            Specifies parameter of the DCX to modify during a stepped sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxSweepParameter.Dcv1">
            <summary>
            DCV 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxSweepParameter.Dcv2">
            <summary>
            DCV 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DcxSweepParameter.AllPorts">
            <summary>
            All Ports
            </summary>
        </member>
        <member name="T:AudioPrecision.API.JitterSweepParameter">
            <summary>
            Specificies the Jitter parameter to modify during a stepped sweep.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterSweepParameter.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterSweepParameter.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ImdGeneratorSignalType">
            <summary>
            Specificies the IMD signal type used by the IMD generator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.Smpte10To1">
            <summary>
            SMPTE 10:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.Smpte4To1">
            <summary>
            SMPTE 4:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.Smpte1To1">
            <summary>
            SMPTE 1:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.Din">
            <summary>
            DIN
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.Dfd">
            <summary>
            DFD/CCIF
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.DIM_30">
            <summary>
            DIM 30
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.DIM_100">
            <summary>
            DIM 100
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.DIM_B">
            <summary>
            DIM B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ImdGeneratorSignalType.DIM_B8">
            <summary>
            DIM B8
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ValidityBitType">
            <summary>
            Specifies how the validity bits are computed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ValidityBitType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ValidityBitType.Valid">
            <summary>
            Valid
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ValidityBitType.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ValidityBitSide">
            <summary>
            Specifies which sub frame of the digital signal the validty bit settings apply to.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ValidityBitSide.A">
            <summary>
            Subframe A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ValidityBitSide.B">
            <summary>
            Subframe B
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RiseTimeType">
            <summary>
            Specifies the Rise Time Mode for the Advanced Digital I/O module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RiseTimeType.Minimum">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RiseTimeType.CableSim">
            <summary>
            Cable Simulation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RiseTimeType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputLevelType">
            <summary>
            Specifies the Output Level Mode for the Advanced Digital I/O module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputLevelType.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputLevelType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulationTargetValueType">
            <summary>
            Specifies the method the regulation will use to determine if the target value is within the desired range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetValueType.Target">
            <summary>
            Target Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetValueType.Maximum">
            <summary>
            Maximum Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetValueType.Minimum">
            <summary>
            Minimum Value
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulationTargetChannel">
            <summary>
            Specifies which channel the regulation uses to evaluate the target value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetChannel.HighestMeasuredValue">
            <summary>
            Channel with highest value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetChannel.LowestMeasuredValue">
            <summary>
            Channel with lowest value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTargetChannel.SpecificChannel">
            <summary>
            Specific channel
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulationToleranceType">
            <summary>
            Specifies how the regulation engine determines tolerance values when searching for the regulation target value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationToleranceType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationToleranceType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SettlerState">
            <summary>
            Specifies the settling state for a reading on a single channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlerState.NotSettled">
            <summary>
            Not Settled
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlerState.Settled">
            <summary>
            Settled
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlerState.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlerState.NotMeasured">
            <summary>
            Not Measured
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SingleInputChannelIndex">
            <summary>
            Specifies which channel will be observed in single analog input channel mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch1">
            <summary>
            Ch1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch2">
            <summary>
            Ch2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch3">
            <summary>
            Ch3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch4">
            <summary>
            Ch4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch5">
            <summary>
            Ch5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch6">
            <summary>
            Ch6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch7">
            <summary>
            Ch7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SingleInputChannelIndex.Ch8">
            <summary>
            Ch8
            </summary>
        </member>
        <member name="T:AudioPrecision.API.JitterApplication">
            <summary>
            Specifies which clock will be jittered when the jitter generation capability is enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterApplication.DigitalOutput">
            <summary>
            Digital Output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterApplication.RefSync">
            <summary>
            Reference/Sync
            </summary>
        </member>
        <member name="F:AudioPrecision.API.JitterApplication.DigitalInput">
            <summary>
            Digital Input
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RefSyncOutputRate">
            <summary>
            Specifies the output sample rate of the Reference clock.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RefSyncOutputRate.TrackOutputSampleRate">
            <summary>
            Track Output SR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RefSyncOutputRate.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.InputFrequencyScalingType">
            <summary>
            Specifies how the digital input sample rate is determined for measurements and input filters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputFrequencyScalingType.InputRate">
            <summary>
            Input SR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputFrequencyScalingType.OutputSampleRate">
            <summary>
            Output SR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputFrequencyScalingType.FixedRate">
            <summary>
            Fixed Rate
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SineBurstLengthType">
            <summary>
            Specifies the unit used for the sine burst signal length.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SineBurstLengthType.Cycles">
            <summary>
            Cycles
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SineBurstLengthType.Seconds">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ShowIndicatorsType">
            <summary>
            Specifies if and where indicators like settling timeouts or regulation failures are shown.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ShowIndicatorsType.Never">
            <summary>
            Never
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ShowIndicatorsType.Top">
            <summary>
            Top Axis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ShowIndicatorsType.OnTraces">
            <summary>
            On Traces
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ShowIndicatorsType.Bottom">
            <summary>
            Bottom Axis
            </summary>
        </member>
        <member name="T:AudioPrecision.API.GraphRangeType">
            <summary>
            Specifies how a graph axis displays its data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphRangeType.Autoscale">
            <summary>
            Autoscale
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphRangeType.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphRangeType.Scrolling">
            <summary>
            Scrolling
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LimitStatus">
            <summary>
            Specifies the limit status
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LimitStatus.Passed">
            <summary>
            Passed
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LimitStatus.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LimitStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SequenceStatisticType">
            <summary>
            Describes statistics monitored by the sequencer in a Production Test project
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.CycleCount">
            <summary>
            Cycle Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.PassedCount">
            <summary>
            Passed Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.FailedCount">
            <summary>
            Failed Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.FailedDeviceCount">
            <summary>
            Failed Device Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.PassedOnFirstCycleCount">
            <summary>
            Passed On First Cycle Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.DevicesTested">
            <summary>
            Devices Tested
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.FirstPassYield">
            <summary>
            First Pass Yield
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.Yield">
            <summary>
            Yield
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.DeviceRetryCount">
            <summary>
            Device Retry Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.TotalRetryCount">
            <summary>
            Total Retry Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.ErrorCount">
            <summary>
            Error Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.TotalRunTime">
            <summary>
            Total Run Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.MinRunTime">
            <summary>
            Min Run Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.MaxRunTime">
            <summary>
            Max Run Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceStatisticType.AvgRunTime">
            <summary>
            Average Run Time
            </summary>
        </member>
        <member name="T:AudioPrecision.API.XyDataRange">
            <summary>
            Specifies the data range for X,Y data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XyDataRange.AllPointsInRange">
            <summary>
            All Points in Range
            </summary>
        </member>
        <member name="F:AudioPrecision.API.XyDataRange.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TimeWindowType">
            <summary>
            Specifies how the taper widths are applied to the window
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeWindowType.TrackPeak">
            <summary>
            Track Peak
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeWindowType.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TransducerMic1">
            <summary>
            Specifies which mic input to connect to Transducer Interface Mic 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic1.Mic1Balanced">
            <summary>
            Mic 1 Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic1.Mic2Balanced">
            <summary>
            Mic 2 Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic1.Mic1Unbalanced">
            <summary>
            Mic 1 Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic1.Mic2Unbalanced">
            <summary>
            Mic 2 Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic1.Mic1UnabalancedCcpSelftest">
            <summary>
            Mic 1 CCP Self-test
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TransducerMic2">
            <summary>
            Specifies which mic input to connect to Transducer Interface Mic 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic2.Mic2Balanced">
            <summary>
            Mic 2 Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic2.Mic2Unbalanced">
            <summary>
            Mic 2 Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerMic2.Mic2UnabalancedCcpSelftest">
            <summary>
            Mic 2 CCP Self-test
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CurrentSense">
            <summary>
            Specifies which power amp to connect to Transducer Interface Current Sense
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CurrentSense.AmplifierOutput1">
            <summary>
            Amplifier Output 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CurrentSense.AmplifierOutput2">
            <summary>
            Amplifier Output 2
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TransducerTedsChannel">
            <summary>
            Specifies which channel to read TEDS from
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerTedsChannel.Mic1Unbalanced">
            <summary>
            Mic 1 Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerTedsChannel.Mic2Unbalanced">
            <summary>
            Mic 2 Unbalanced
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TransducerFault">
            <summary>
            Specifies the action to take during a current limit fault
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerFault.AbortMeasurement">
            <summary>
            Abort Measurement On Current Limit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TransducerFault.ContinueMeasurement">
            <summary>
            Continue Measurement On Current Limit
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CurveFitRangeType">
            <summary>
            Specifies the range type for the Impedance Fit Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CurveFitRangeType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CurveFitRangeType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DelayStimulusType">
            <summary>
            Specifies stimulus type for delay signal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusType.PRS">
            <summary>
            Pseudo Random Sequence
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusType.MLS">
            <summary>
            Maximum Length Sequence
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DelayStimulusSequenceLength">
            <summary>
            Specifies the sequence length for the delay stimulus signal
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusSequenceLength.L16">
            <summary>
            16 k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusSequenceLength.L32">
            <summary>
            32 k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusSequenceLength.L64">
            <summary>
            64 k
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DelayStimulusSequenceLength.L128">
            <summary>
            128 k
            </summary>
        </member>
        <member name="T:AudioPrecision.API.EqStepSelection">
            <summary>
            Specifies whether an EQ file is selected from a file on disk for from an existing project item
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EqStepSelection.FromProject">
            <summary>
            From Project
            </summary>
        </member>
        <member name="F:AudioPrecision.API.EqStepSelection.FromFile">
            <summary>
            From File
            </summary>
        </member>
        <member name="T:AudioPrecision.API.GenerateBitDepthType">
            <summary>
            Specifies the bit depth for saving a generator wavefile
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GenerateBitDepthType.BitDepth8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GenerateBitDepthType.BitDepth16">
            <summary>
            16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GenerateBitDepthType.BitDepth24">
            <summary>
            24
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GenerateBitDepthType.BitDepth32">
            <summary>
            32
            </summary>
        </member>
        <member name="T:AudioPrecision.API.APWarning">
            <summary>
            Specifies a general warning condition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APWarning.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APWarning.StimulusParametersChanged">
            <summary>
            One or more stimulus signal settings has changed since the waveform was last saved. For correct analysis, save and deploy a new waveform with the current settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.InputBandwidthType">
            <summary>
            Specifies the system bandwidth.
            </summary>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw20k">
            <summary>
            22 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw40k">
            <summary>
            45 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw80k">
            <summary>
            90 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw250k">
            <summary>
            250 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw500k">
            <summary>
            500 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputBandwidthType.Bw1M">
            <summary>
            1 MHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SmpteGeneratorLevelRatio">
            <summary>
            Specifies the SMPTE generator amplitude ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SmpteGeneratorLevelRatio.OneToOne">
            <summary>
            1:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SmpteGeneratorLevelRatio.FourToOne">
            <summary>
            4:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SmpteGeneratorLevelRatio.TenToOne">
            <summary>
            10:1
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMDType">
            <summary>
            Specifies the IMD measurement type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDType.SMPTE">
            <summary>
            SMPTE
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDType.DFD">
            <summary>
            DFD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDType.CCIF">
            <summary>
            CCIF
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDType.MOD">
            <summary>
            MOD
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMDMode">
            <summary>
            Specifies the IMD measurement mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDMode.d2">
            <summary>
            d2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDMode.d3">
            <summary>
            d3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDMode.d23">
            <summary>
            d2+d3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.IMDMode.d25">
            <summary>
            d2...d5
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DimWaveform">
            <summary>
            Specifies the type of DIM generator waveform.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimWaveform.DIM_30">
            <summary>
            DIM 30
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimWaveform.DIM_100">
            <summary>
            DIM 100
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimWaveform.DIM_B">
            <summary>
            DIM B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DimWaveform.DIM_B8">
            <summary>
            DIM B8
            </summary>
        </member>
        <member name="T:AudioPrecision.API.FFTLength">
            <summary>
            Specifies the length of the FFT.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_256">
            <summary>
            256
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_512">
            <summary>
            512
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_1024">
            <summary>
            1K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_2048">
            <summary>
            2K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_4096">
            <summary>
            4K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_8192">
            <summary>
            8K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_12000">
            <summary>
            12K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_16384">
            <summary>
            16K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_24000">
            <summary>
            24K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_32768">
            <summary>
            32K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_48000">
            <summary>
            48K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_65536">
            <summary>
            64K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_96000">
            <summary>
            96K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_131072">
            <summary>
            128K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_192000">
            <summary>
            192K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_262144">
            <summary>
            256K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_312000">
            <summary>
            300K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_524288">
            <summary>
            512K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_624000">
            <summary>
            600K
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_1048576">
            <summary>
            1M
            </summary>
        </member>
        <member name="F:AudioPrecision.API.FFTLength.FFT_1248000">
            <summary>
            1.2M
            </summary>
        </member>
        <member name="T:AudioPrecision.API.WavExportBitDepth">
            <summary>
            Specifies the bit depth of a saved .WAV file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WavExportBitDepth.BitDepth16">
            <summary>
            16-bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WavExportBitDepth.BitDepth24">
            <summary>
            24-bit
            </summary>
        </member>
        <member name="T:AudioPrecision.API.PhaseMeterRange">
            <summary>
            Specifies the range of output values of the phase meter.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMeterRange.ZeroTo360">
            <summary>
            0 -> 360 deg
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMeterRange.Minus90To270">
            <summary>
            -90 -> 270 deg
            </summary>
        </member>
        <member name="F:AudioPrecision.API.PhaseMeterRange.Minus180To180">
            <summary>
            -180 -> 180 deg
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HwModel">
            <summary>
            Specifies the model number of the attached APx instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx585">
            <summary>
            APx585
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx586">
            <summary>
            APx586
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx525">
            <summary>
            APx525
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx526">
            <summary>
            APx526
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx515">
            <summary>
            APx515
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx582">
            <summary>
            APx582
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx511">
            <summary>
            APx511
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.APx555">
            <summary>
            APx555
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HwModel.Unrecognized">
            <summary>
            Unrecognized
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogUnbalancedSourceImpedance">
            <summary>
            Specifies the source impedance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogUnbalancedSourceImpedance.SourceImpedance_20">
            <summary>
            20 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogUnbalancedSourceImpedance.SourceImpedance_50">
            <summary>
            50 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogUnbalancedSourceImpedance.SourceImpedance_75">
            <summary>
            75 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogUnbalancedSourceImpedance.SourceImpedance_100">
            <summary>
            100 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogUnbalancedSourceImpedance.SourceImpedance_600">
            <summary>
            600 ohm
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogBalancedSourceImpedance">
            <summary>
            Specifies the source impedance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedSourceImpedance.SourceImpedance_40">
            <summary>
            40 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedSourceImpedance.SourceImpedance_100">
            <summary>
            100 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedSourceImpedance.SourceImpedance_150">
            <summary>
            150 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedSourceImpedance.SourceImpedance_200">
            <summary>
            200 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedSourceImpedance.SourceImpedance_600">
            <summary>
            600 ohm
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SwitcherChannelSelection">
            <summary>
            Values for a switcher ChA or ChB configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.None">
            <summary>
            (none)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch1">
            <summary>
            Port 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch2">
            <summary>
            Port 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch3">
            <summary>
            Port 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch4">
            <summary>
            Port 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch5">
            <summary>
            Port 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch6">
            <summary>
            Port 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch7">
            <summary>
            Port 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch8">
            <summary>
            Port 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch9">
            <summary>
            Port 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch10">
            <summary>
            Port 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch11">
            <summary>
            Port 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherChannelSelection.Ch12">
            <summary>
            Port 12
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdmiVideoFormat">
            <summary>
            Video formats for HDMI output.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode640x480p_60Hz">
            <summary>
            640x480p @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x240p_60Hz">
            <summary>
            720x240p @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x288p_50Hz">
            <summary>
            720x288p @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x480i_60Hz">
            <summary>
            720x480i @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x480p_60Hz">
            <summary>
            720x480p @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x576i_50Hz">
            <summary>
            720x576i @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode720x576p_50Hz">
            <summary>
            720x576p @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1280x720p_60Hz">
            <summary>
            1280x720p @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1280x720p_50Hz">
            <summary>
            1280x720p @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1920x1080i_60Hz">
            <summary>
            1920x1080i @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1920x1080i_50Hz">
            <summary>
            1920x1080i @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1920x1080p_60Hz">
            <summary>
            1920x1080p @ 60 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1920x1080p_50Hz">
            <summary>
            1920x1080p @ 50 Hz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiVideoFormat.Mode1920x1080p_24Hz">
            <summary>
            1920x1080p @ 24 Hz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdmiColorDepth">
            <summary>
            Specifies the color depth of the generated video signal. HDMI 1.3 supports 8, 10, 12, and 16-bit colors. APx supports up to 12-bit color.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiColorDepth.ColorDepth_8Bit">
            <summary>
            8 Bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiColorDepth.ColorDepth_10Bit">
            <summary>
            10 Bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiColorDepth.ColorDepth_12Bit">
            <summary>
            12 Bit
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdmiSpeakerAllocation">
            <summary>
            Speaker allocation for HDMI output.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker00">
            <summary>
            FL|FR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker01">
            <summary>
            FL|FR|LFE
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker02">
            <summary>
            FL|FR|---|FC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker03">
            <summary>
            FL|FR|LFE|FC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker04">
            <summary>
            FL|FR|---|--|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker05">
            <summary>
            FL|FR|LFE|--|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker06">
            <summary>
            FL|FR|---|FC|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker07">
            <summary>
            FL|FR|LFE|FC|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker08">
            <summary>
            FL|FR|---|--|RL|RR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker09">
            <summary>
            FL|FR|LFE|--|RL|RR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0A">
            <summary>
            FL|FR|---|FC|RL|RR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0B">
            <summary>
            FL|FR|LFE|FC|RL|RR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0C">
            <summary>
            FL|FR|---|--|RL|RR|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0D">
            <summary>
            FL|FR|LFE|--|RL|RR|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0E">
            <summary>
            FL|FR|---|FC|RL|RR|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker0F">
            <summary>
            FL|FR|LFE|FC|RL|RR|RC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker10">
            <summary>
            FL|FR|---|--|RL|RR|RLC|RRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker11">
            <summary>
            FL|FR|LFE|--|RL|RR|RLC|RRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker12">
            <summary>
            FL|FR|---|FC|RL|RR|RLC|RRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker13">
            <summary>
            FL|FR|LFE|FC|RL|RR|RLC|RRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker14">
            <summary>
            FL|FR|---|--|--|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker15">
            <summary>
            FL|FR|LFE|--|--|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker16">
            <summary>
            FL|FR|---|FC|--|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker17">
            <summary>
            FL|FR|LFE|FC|--|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker18">
            <summary>
            FL|FR|---|--|RC|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker19">
            <summary>
            FL|FR|LFE|--|RC|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1A">
            <summary>
            FL|FR|---|FC|RC|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1B">
            <summary>
            FL|FR|LFE|FC|RC|--|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1C">
            <summary>
            FL|FR|---|--|RL|RR|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1D">
            <summary>
            FL|FR|LFE|--|RL|RR|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1E">
            <summary>
            FL|FR|---|FC|RL|RR|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker1F">
            <summary>
            FL|FR|LFE|FC|RL|RR|FLC|FRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker20">
            <summary>
            Reserved (20)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker21">
            <summary>
            Reserved (21)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker22">
            <summary>
            Reserved (22)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker23">
            <summary>
            Reserved (23)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker24">
            <summary>
            Reserved (24)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker25">
            <summary>
            Reserved (25)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker26">
            <summary>
            Reserved (26)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker27">
            <summary>
            Reserved (27)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker28">
            <summary>
            Reserved (28)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker29">
            <summary>
            Reserved (29)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2A">
            <summary>
            Reserved (2A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2B">
            <summary>
            Reserved (2B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2C">
            <summary>
            Reserved (2C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2D">
            <summary>
            Reserved (2D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2E">
            <summary>
            Reserved (2E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker2F">
            <summary>
            Reserved (2F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker30">
            <summary>
            Reserved (30)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker31">
            <summary>
            Reserved (31)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker32">
            <summary>
            Reserved (32)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker33">
            <summary>
            Reserved (33)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker34">
            <summary>
            Reserved (34)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker35">
            <summary>
            Reserved (35)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker36">
            <summary>
            Reserved (36)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker37">
            <summary>
            Reserved (37)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker38">
            <summary>
            Reserved (38)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker39">
            <summary>
            Reserved (39)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3A">
            <summary>
            Reserved (3A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3B">
            <summary>
            Reserved (3B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3C">
            <summary>
            Reserved (3C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3D">
            <summary>
            Reserved (3D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3E">
            <summary>
            Reserved (3E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker3F">
            <summary>
            Reserved (3F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker40">
            <summary>
            Reserved (40)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker41">
            <summary>
            Reserved (41)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker42">
            <summary>
            Reserved (42)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker43">
            <summary>
            Reserved (43)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker44">
            <summary>
            Reserved (44)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker45">
            <summary>
            Reserved (45)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker46">
            <summary>
            Reserved (46)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker47">
            <summary>
            Reserved (47)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker48">
            <summary>
            Reserved (48)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker49">
            <summary>
            Reserved (49)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4A">
            <summary>
            Reserved (4A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4B">
            <summary>
            Reserved (4B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4C">
            <summary>
            Reserved (4C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4D">
            <summary>
            Reserved (4D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4E">
            <summary>
            Reserved (4E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker4F">
            <summary>
            Reserved (4F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker50">
            <summary>
            Reserved (50)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker51">
            <summary>
            Reserved (51)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker52">
            <summary>
            Reserved (52)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker53">
            <summary>
            Reserved (53)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker54">
            <summary>
            Reserved (54)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker55">
            <summary>
            Reserved (55)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker56">
            <summary>
            Reserved (56)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker57">
            <summary>
            Reserved (57)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker58">
            <summary>
            Reserved (58)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker59">
            <summary>
            Reserved (59)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5A">
            <summary>
            Reserved (5A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5B">
            <summary>
            Reserved (5B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5C">
            <summary>
            Reserved (5C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5D">
            <summary>
            Reserved (5D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5E">
            <summary>
            Reserved (5E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker5F">
            <summary>
            Reserved (5F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker60">
            <summary>
            Reserved (60)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker61">
            <summary>
            Reserved (61)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker62">
            <summary>
            Reserved (62)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker63">
            <summary>
            Reserved (63)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker64">
            <summary>
            Reserved (64)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker65">
            <summary>
            Reserved (65)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker66">
            <summary>
            Reserved (66)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker67">
            <summary>
            Reserved (67)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker68">
            <summary>
            Reserved (68)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker69">
            <summary>
            Reserved (69)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6A">
            <summary>
            Reserved (6A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6B">
            <summary>
            Reserved (6B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6C">
            <summary>
            Reserved (6C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6D">
            <summary>
            Reserved (6D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6E">
            <summary>
            Reserved (6E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker6F">
            <summary>
            Reserved (6F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker70">
            <summary>
            Reserved (70)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker71">
            <summary>
            Reserved (71)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker72">
            <summary>
            Reserved (72)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker73">
            <summary>
            Reserved (73)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker74">
            <summary>
            Reserved (74)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker75">
            <summary>
            Reserved (75)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker76">
            <summary>
            Reserved (76)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker77">
            <summary>
            Reserved (77)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker78">
            <summary>
            Reserved (78)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker79">
            <summary>
            Reserved (79)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7A">
            <summary>
            Reserved (7A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7B">
            <summary>
            Reserved (7B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7C">
            <summary>
            Reserved (7C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7D">
            <summary>
            Reserved (7D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7E">
            <summary>
            Reserved (7E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker7F">
            <summary>
            Reserved (7F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker80">
            <summary>
            Reserved (80)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker81">
            <summary>
            Reserved (81)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker82">
            <summary>
            Reserved (82)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker83">
            <summary>
            Reserved (83)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker84">
            <summary>
            Reserved (84)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker85">
            <summary>
            Reserved (85)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker86">
            <summary>
            Reserved (86)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker87">
            <summary>
            Reserved (87)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker88">
            <summary>
            Reserved (88)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker89">
            <summary>
            Reserved (89)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8A">
            <summary>
            Reserved (8A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8B">
            <summary>
            Reserved (8B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8C">
            <summary>
            Reserved (8C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8D">
            <summary>
            Reserved (8D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8E">
            <summary>
            Reserved (8E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker8F">
            <summary>
            Reserved (8F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker90">
            <summary>
            Reserved (90)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker91">
            <summary>
            Reserved (91)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker92">
            <summary>
            Reserved (92)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker93">
            <summary>
            Reserved (93)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker94">
            <summary>
            Reserved (94)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker95">
            <summary>
            Reserved (95)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker96">
            <summary>
            Reserved (96)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker97">
            <summary>
            Reserved (97)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker98">
            <summary>
            Reserved (98)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker99">
            <summary>
            Reserved (99)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9A">
            <summary>
            Reserved (9A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9B">
            <summary>
            Reserved (9B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9C">
            <summary>
            Reserved (9C)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9D">
            <summary>
            Reserved (9D)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9E">
            <summary>
            Reserved (9E)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.Speaker9F">
            <summary>
            Reserved (9F)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA0">
            <summary>
            Reserved (A0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA1">
            <summary>
            Reserved (A1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA2">
            <summary>
            Reserved (A2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA3">
            <summary>
            Reserved (A3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA4">
            <summary>
            Reserved (A4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA5">
            <summary>
            Reserved (A5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA6">
            <summary>
            Reserved (A6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA7">
            <summary>
            Reserved (A7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA8">
            <summary>
            Reserved (A8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerA9">
            <summary>
            Reserved (A9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAA">
            <summary>
            Reserved (AA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAB">
            <summary>
            Reserved (AB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAC">
            <summary>
            Reserved (AC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAD">
            <summary>
            Reserved (AD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAE">
            <summary>
            Reserved (AE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerAF">
            <summary>
            Reserved (AF)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB0">
            <summary>
            Reserved (B0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB1">
            <summary>
            Reserved (B1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB2">
            <summary>
            Reserved (B2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB3">
            <summary>
            Reserved (B3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB4">
            <summary>
            Reserved (B4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB5">
            <summary>
            Reserved (B5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB6">
            <summary>
            Reserved (B6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB7">
            <summary>
            Reserved (B7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB8">
            <summary>
            Reserved (B8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerB9">
            <summary>
            Reserved (B9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBA">
            <summary>
            Reserved (BA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBB">
            <summary>
            Reserved (BB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBC">
            <summary>
            Reserved (BC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBD">
            <summary>
            Reserved (BD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBE">
            <summary>
            Reserved (BE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerBF">
            <summary>
            Reserved (BF)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC0">
            <summary>
            Reserved (C0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC1">
            <summary>
            Reserved (C1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC2">
            <summary>
            Reserved (C2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC3">
            <summary>
            Reserved (C3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC4">
            <summary>
            Reserved (C4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC5">
            <summary>
            Reserved (C5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC6">
            <summary>
            Reserved (C6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC7">
            <summary>
            Reserved (C7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC8">
            <summary>
            Reserved (C8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerC9">
            <summary>
            Reserved (C9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCA">
            <summary>
            Reserved (CA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCB">
            <summary>
            Reserved (CB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCC">
            <summary>
            Reserved (CC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCD">
            <summary>
            Reserved (CD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCE">
            <summary>
            Reserved (CE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerCF">
            <summary>
            Reserved (CF)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD0">
            <summary>
            Reserved (D0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD1">
            <summary>
            Reserved (D1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD2">
            <summary>
            Reserved (D2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD3">
            <summary>
            Reserved (D3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD4">
            <summary>
            Reserved (D4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD5">
            <summary>
            Reserved (D5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD6">
            <summary>
            Reserved (D6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD7">
            <summary>
            Reserved (D7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD8">
            <summary>
            Reserved (D8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerD9">
            <summary>
            Reserved (D9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDA">
            <summary>
            Reserved (DA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDB">
            <summary>
            Reserved (DB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDC">
            <summary>
            Reserved (DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDD">
            <summary>
            Reserved (DD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDE">
            <summary>
            Reserved (DE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerDF">
            <summary>
            Reserved (DF)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE0">
            <summary>
            Reserved (E0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE1">
            <summary>
            Reserved (E1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE2">
            <summary>
            Reserved (E2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE3">
            <summary>
            Reserved (E3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE4">
            <summary>
            Reserved (E4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE5">
            <summary>
            Reserved (E5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE6">
            <summary>
            Reserved (E6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE7">
            <summary>
            Reserved (E7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE8">
            <summary>
            Reserved (E8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerE9">
            <summary>
            Reserved (E9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerEA">
            <summary>
            Reserved (EA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerEB">
            <summary>
            Reserved (EB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerEC">
            <summary>
            Reserved (EC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerED">
            <summary>
            Reserved (ED)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerEE">
            <summary>
            Reserved (EE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerEF">
            <summary>
            Reserved (EF)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF0">
            <summary>
            Reserved (F0)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF1">
            <summary>
            Reserved (F1)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF2">
            <summary>
            Reserved (F2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF3">
            <summary>
            Reserved (F3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF4">
            <summary>
            Reserved (F4)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF5">
            <summary>
            Reserved (F5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF6">
            <summary>
            Reserved (F6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF7">
            <summary>
            Reserved (F7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF8">
            <summary>
            Reserved (F8)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerF9">
            <summary>
            Reserved (F9)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFA">
            <summary>
            Reserved (FA)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFB">
            <summary>
            Reserved (FB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFC">
            <summary>
            Reserved (FC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFD">
            <summary>
            Reserved (FD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFE">
            <summary>
            Reserved (FE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdmiSpeakerAllocation.SpeakerFF">
            <summary>
            Reserved (FF)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogBalancedOutputConfigurationType">
            <summary>
            The common mode signal generation setting
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedOutputConfigurationType.Normal">
            <summary>
            Normal (Differential)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedOutputConfigurationType.CMTST">
            <summary>
            CMTST
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedOutputConfigurationType.CMTST_Pin2">
            <summary>
            CMTST (IEC Pin 2)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedOutputConfigurationType.CMTST_Pin3">
            <summary>
            CMTST (IEC Pin 3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogBalancedOutputConfigurationType.SingleEnded">
            <summary>
            Single-Ended
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SerialChannels">
            <summary>
            Specifies the number of channels for a serial digital interface.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.One">
            <summary>
            1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.Two">
            <summary>
            2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.Four">
            <summary>
            4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.Six">
            <summary>
            6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.Eight">
            <summary>
            8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialChannels.Sixteen">
            <summary>
            16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SerialLogicLevel">
            <summary>
            Specifies the serial digital interface voltage.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialLogicLevel.V1p8">
            <summary>
            1.8 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialLogicLevel.V2p5">
            <summary>
            2.5 V
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialLogicLevel.V3p3">
            <summary>
            3.3 V
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsApplication">
            <summary>
            Specifies how the status bits (C-Bits) are interpreted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsApplication.Consumer">
            <summary>
            Consumer
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsApplication.Professional">
            <summary>
            Professional
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsWordLength">
            <summary>
            Specfies the maximum length of the audio word.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength.Bits20">
            <summary>
            20 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength.Bits24">
            <summary>
            24 Bits
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsAudioMode">
            <summary>
            Used in status bits (C-Bits) to declare whether the payload is audio or non-audio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAudioMode.Audio">
            <summary>
            Audio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAudioMode.NonAudio">
            <summary>
            Non-Audio
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsCopyright">
            <summary>
            Specifies whether copyright is asserted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCopyright.Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCopyright.NonCopyright">
            <summary>
            Non-Copyright
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsEmphasisConsumerAudio">
            <summary>
            Specifies pre-emphasis levels for consumer audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisConsumerAudio.NoPreEmphasis">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisConsumerAudio.Pre_50_15us">
            <summary>
            50us/15us pre-emphasis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisConsumerAudio.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsEmphasisConsumerNonAudio">
            <summary>
            Specifies pre-emphasis for consumer audio applications when the payload is non-audio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisConsumerNonAudio.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsChannelStatusMode">
            <summary>
            Specfies the channel status mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelStatusMode.Mode0">
            <summary>
            Mode 0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelStatusMode.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsCategoryCode">
            <summary>
            Specifies the type of the device which generated the digital audio signal.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.General">
            <summary>
            General
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.LaserOptical">
            <summary>
            Laser-Optical
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.DDConverter">
            <summary>
            D/D Converter
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.Magnetic">
            <summary>
            Magnetic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.DigitalBroadcast">
            <summary>
            Digital Broadcast
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.MusicalInstrument">
            <summary>
            Musical Instrument
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.DVD">
            <summary>
            DVD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.PresentADConverter">
            <summary>
            Present A/D Converter
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.FutureADConverter">
            <summary>
            Future A/D Converter
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.SolidStateMemory">
            <summary>
            Solid State Memory
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.Experimental">
            <summary>
            Experimental
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCategoryCode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsSourceNumber">
            <summary>
            Specfies the source number.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.DontCare">
            <summary>
            Don't Care
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number4">
            <summary>
            4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number5">
            <summary>
            5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number6">
            <summary>
            6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number7">
            <summary>
            7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number10">
            <summary>
            10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number11">
            <summary>
            11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number12">
            <summary>
            12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number13">
            <summary>
            13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number14">
            <summary>
            14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSourceNumber.Number15">
            <summary>
            15
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsChannelNumber">
            <summary>
            Specifies the channel number.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.DontCare">
            <summary>
            Don't Care
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number1">
            <summary>
            1 (Left)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number2">
            <summary>
            2 (Right)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number4">
            <summary>
            4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number5">
            <summary>
            5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number6">
            <summary>
            6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number7">
            <summary>
            7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number10">
            <summary>
            10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number11">
            <summary>
            11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number12">
            <summary>
            12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number13">
            <summary>
            13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number14">
            <summary>
            14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelNumber.Number15">
            <summary>
            15
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer">
            <summary>
            Specifies the audio sampling frequency for consumer audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency22k">
            <summary>
            22.05 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency88k">
            <summary>
            88.2 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency176k">
            <summary>
            176.4 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency24k">
            <summary>
            24 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency96k">
            <summary>
            96 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency192k">
            <summary>
            192 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Frequency768k">
            <summary>
            768 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyConsumer.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsClockAccuracy">
            <summary>
            Specifies the clock accuracy.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsClockAccuracy.Level1">
            <summary>
            Level I
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsClockAccuracy.Level2">
            <summary>
            Level II
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsClockAccuracy.Level3">
            <summary>
            Level III
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsClockAccuracy.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsWordLength20Bits">
            <summary>
            Specifies the actual length of the audio word when the maximum length is 20 bits.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Bits16">
            <summary>
            16 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Bits18">
            <summary>
            18 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Bits19">
            <summary>
            19 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Bits20">
            <summary>
            20 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Bits17">
            <summary>
            17 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength20Bits.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsWordLength24Bits">
            <summary>
            Specifies the actual length of the audio word when the maximum length is 24 bits.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Bits20">
            <summary>
            20 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Bits22">
            <summary>
            22 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Bits23">
            <summary>
            23 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Bits24">
            <summary>
            24 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Bits21">
            <summary>
            21 Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsWordLength24Bits.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsOriginalSamplingFrequency">
            <summary>
            Specifies the original audio sampling frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency88k">
            <summary>
            88.2 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency22k">
            <summary>
            22.05 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency176k">
            <summary>
            176.4 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency96k">
            <summary>
            96 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency24k">
            <summary>
            24 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency192k">
            <summary>
            192 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Reserved15">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency8k">
            <summary>
            8 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency11k">
            <summary>
            11.025 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency12k">
            <summary>
            12 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Reserved4">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.Frequency16k">
            <summary>
            16 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsOriginalSamplingFrequency.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsCgmsA">
            <summary>
            Specifies the copy protection level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCgmsA.CopyPermitted">
            <summary>
            Copy Permitted
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCgmsA.Unused">
            <summary>
            Unused
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCgmsA.OneCopyPermitted">
            <summary>
            One Copy Permitted
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsCgmsA.CopyNotPermitted">
            <summary>
            Copy Not Permitted
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsEmphasisProfessional">
            <summary>
            Specifies the pre-emphasis level for professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisProfessional.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisProfessional.NoEmphasis">
            <summary>
            No Emphasis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisProfessional.Pre_50_15us">
            <summary>
            50us/15us pre-emphasis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisProfessional.J17">
            <summary>
            J.17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsEmphasisProfessional.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsLock">
            <summary>
            Specifies the lock status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsLock.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsLock.Unlocked">
            <summary>
            Unlocked
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional">
            <summary>
            Specifies the audio sample frequency for professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency24k">
            <summary>
            24 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency96k">
            <summary>
            96 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency192k">
            <summary>
            192 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency384k">
            <summary>
            384 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Reserved5">
            <summary>
            Reserved (0x5)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Reserved6">
            <summary>
            Reserved (0x6)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Reserved7">
            <summary>
            Reserved (0x7)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.ReservedForVectoring">
            <summary>
            Reserved for Vectoring
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency22k">
            <summary>
            22.05 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency88k">
            <summary>
            88.2 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency176k">
            <summary>
            176.4 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.Frequency352k">
            <summary>
            352.8 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.ReservedD">
            <summary>
            Reserved (0xD)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.ReservedE">
            <summary>
            Reserved (0xE)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSamplingFrequencyProfessional.UserDefined">
            <summary>
            User Defined
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsChannelMode">
            <summary>
            Specifies the channel mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.TwoChannel">
            <summary>
            Two Channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.SingleChannel">
            <summary>
            Single Channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.PrimarySecondary">
            <summary>
            Primary-Secondary
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.Stereophonic">
            <summary>
            Stereophonic
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.UserReserved">
            <summary>
            User Reserved
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.SCDSRByte3">
            <summary>
            SCDSR (Byte 3)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.SCDSRLeft">
            <summary>
            SCDSR (Left)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.SCDSRRight">
            <summary>
            SCDSR (Right)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.Multichannel">
            <summary>
            Multichannel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsChannelMode.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsUserBitsManagement">
            <summary>
            Specifies how the remaining bits in the block are used.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.Block192">
            <summary>
            192-bit Block
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.ReservedAes18">
            <summary>
            Reserved (AES 18)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.UserDefined">
            <summary>
            User Defined
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.PerIec60958">
            <summary>
            Per IEC 60958-3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.ReservedMetadata">
            <summary>
            Reserved (Metadata)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsUserBitsManagement.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsAuxSampleBit">
            <summary>
            Specifies the maximum audio sample word length, and the use of the auxilary sample bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAuxSampleBit.NotDefined">
            <summary>
            Not Defined (20 bits)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAuxSampleBit.MainAudio">
            <summary>
            Main Audio (24 bits)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAuxSampleBit.Coord">
            <summary>
            Coord Signal (20 bits)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAuxSampleBit.UserDefined">
            <summary>
            User Defined
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAuxSampleBit.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsAlignmentLevel">
            <summary>
            Specifies the alignment level in professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAlignmentLevel.NotIndicated">
            <summary>
            Not Indicated
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAlignmentLevel.SmpteRP155">
            <summary>
            SMPTE RP155 (-20 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAlignmentLevel.EbuR68">
            <summary>
            EBU R68 (-18.06 dB)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsAlignmentLevel.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsMultichannelMode">
            <summary>
            Specifies the multi-channel mode for professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Mode0">
            <summary>
            Mode 0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Mode1">
            <summary>
            Mode 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Mode2">
            <summary>
            Mode 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Mode3">
            <summary>
            Mode 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.UserDefined">
            <summary>
            User Defined
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsMultichannelMode.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsSampleFrequencyScaling">
            <summary>
            Specifies how the audio sample frequency is scaled for professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSampleFrequencyScaling.NoScaling">
            <summary>
            No Scaling
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsSampleFrequencyScaling.Scaling">
            <summary>
            Scaled by 1/1.001
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsDars">
            <summary>
            Specifies the digital audio reference signal for professional audio applications.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsDars.NotReference">
            <summary>
            Not A Reference
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsDars.Grade1">
            <summary>
            Grade 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsDars.Grade2">
            <summary>
            Grade 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsDars.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.StatusBitsReliability">
            <summary>
            Specifies whether or not the audio signal is relaiable.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsReliability.Reliable">
            <summary>
            Reliable
            </summary>
        </member>
        <member name="F:AudioPrecision.API.StatusBitsReliability.Unreliable">
            <summary>
            Unreliable
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ChannelStatusValidity">
            <summary>
            Specifies whether or not the channel status V-bit indicates the channel is valid or invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChannelStatusValidity.Valid">
            <summary>
            Valid
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ChannelStatusValidity.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameCodingType">
            <summary>
            Specifies the audio type carried by the HDMI interface.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.ReferToHeader">
            <summary>
            Refer to Stream Header
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.IEC60958">
            <summary>
            IEC 60958
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.AC3">
            <summary>
            AC-3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.MPEG1">
            <summary>
            MPEG1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.MP3">
            <summary>
            MP3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.MPEG2">
            <summary>
            MPEG2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.AAC">
            <summary>
            AAC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.DTS">
            <summary>
            DTS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.ATRAC">
            <summary>
            ATRAC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.OneBitAudio">
            <summary>
            One Bit Audio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.DolbyDigital">
            <summary>
            Dolby Digital+
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.DTSHD">
            <summary>
            DTS-HD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.MAT">
            <summary>
            MAT(MLP)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.DST">
            <summary>
            DST
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.WMAPro">
            <summary>
            WMA Pro
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameCodingType.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameChannelCount">
            <summary>
            Specifies the number of channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.ReferToHeader">
            <summary>
            Refer to Stream Header
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.TwoChannel">
            <summary>
            2ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.ThreeChannel">
            <summary>
            3ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.FourChannel">
            <summary>
            4ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.FiveChannel">
            <summary>
            5ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.SixChannel">
            <summary>
            6ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.SevenChannel">
            <summary>
            7ch
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameChannelCount.EightChannel">
            <summary>
            8ch
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameSamplingFrequency">
            <summary>
            Specifies the audio sample frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.ReferToHeader">
            <summary>
            Refer to Stream Header
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency88k">
            <summary>
            88.2 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency96k">
            <summary>
            96 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency176k">
            <summary>
            176.4 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSamplingFrequency.Frequency192k">
            <summary>
            192 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameSampleSize">
            <summary>
            Specifies the audio sample size.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSampleSize.ReferToHeader">
            <summary>
            Refer to Stream Header
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSampleSize.BitSize16">
            <summary>
            16 bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSampleSize.BitSize20">
            <summary>
            20 bit
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameSampleSize.BitSize24">
            <summary>
            24 bit
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameLevelShiftValue">
            <summary>
            Specifies the level shift value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level0">
            <summary>
            0 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level1">
            <summary>
            1 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level2">
            <summary>
            2 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level3">
            <summary>
            3 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level4">
            <summary>
            4 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level5">
            <summary>
            5 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level6">
            <summary>
            6 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level7">
            <summary>
            7 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level8">
            <summary>
            8 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level9">
            <summary>
            9 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level10">
            <summary>
            10 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level11">
            <summary>
            11 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level12">
            <summary>
            12 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level13">
            <summary>
            13 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level14">
            <summary>
            14 dB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameLevelShiftValue.Level15">
            <summary>
            15 dB
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AudioInfoFrameInhibitDownmixFlag">
            <summary>
            Specifies whether or not downmix is permitted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameInhibitDownmixFlag.Permitted">
            <summary>
            Permitted
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AudioInfoFrameInhibitDownmixFlag.Prohibited">
            <summary>
            Prohibited
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LockStatusValue">
            <summary>
            Specifies the lock status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LockStatusValue.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="F:AudioPrecision.API.LockStatusValue.Unlocked">
            <summary>
            Unlocked
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MetadataField">
            <summary>
            Specifies the metadata fields which can be recorded.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.LockStatus">
            <summary>
            Lock Status
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.MeasuredSampleRate">
            <summary>
            Measured Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.Iec61937DataType">
            <summary>
            IEC61937 data-type
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.EncodedAudioMode">
            <summary>
            acmod/AMODE
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.EncodedDialogNormalization">
            <summary>
            dialnorm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.EncodedAudioBitRate">
            <summary>
            Audio Bit Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Application">
            <summary>
            Application
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_AudioMode">
            <summary>
            Audio Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Emphasis">
            <summary>
            Emphasis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ChannelStatusMode">
            <summary>
            Channel Status Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_CategoryCode">
            <summary>
            Category Code
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_SourceNumber">
            <summary>
            Source Number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ChannelNumber">
            <summary>
            Channel Number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_SamplingFrequency">
            <summary>
            Sampling Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ClockAccuracy">
            <summary>
            Clock Accuracy
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_WordLength">
            <summary>
            Word Length
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_SampleWordLength">
            <summary>
            Sample Word Length
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_OriginalSamplingFrequency">
            <summary>
            Orig Sample Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_CGMSA">
            <summary>
            CGMS-A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Lock">
            <summary>
            Lock
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ChannelMode">
            <summary>
            Channel Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_UserBitsManagement">
            <summary>
            User Bits Management
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_AuxBits">
            <summary>
            Aux Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_SourceWordlength">
            <summary>
            Source Wordlength
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_AlignmentLevel">
            <summary>
            Alignment Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_MultichannelMode">
            <summary>
            Multichannel Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_SampleFrequencyScaling">
            <summary>
            Scaling
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_DARS">
            <summary>
            DARS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ChannelOrigin">
            <summary>
            Channel Origin
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_ChannelDest">
            <summary>
            Channel Dest
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_LocalAddress">
            <summary>
            Local Address
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_TimeOfDay">
            <summary>
            Time Of Day
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Reliability0_5">
            <summary>
            Reliability 0-5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Reliability6_13">
            <summary>
            Reliability 6-13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Reliability14_17">
            <summary>
            Reliability 14-17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Reliability18_21">
            <summary>
            Reliability 18-21
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsA_Validity">
            <summary>
            Validity (A)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Application">
            <summary>
            Application
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_AudioMode">
            <summary>
            Audio Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Emphasis">
            <summary>
            Emphasis
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ChannelStatusMode">
            <summary>
            Channel Status Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_CategoryCode">
            <summary>
            Category Code
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_SourceNumber">
            <summary>
            Source Number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ChannelNumber">
            <summary>
            Channel Number
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_SamplingFrequency">
            <summary>
            Sampling Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ClockAccuracy">
            <summary>
            Clock Accuracy
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_WordLength">
            <summary>
            Word Length
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_SampleWordLength">
            <summary>
            Sample Word Length
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_OriginalSamplingFrequency">
            <summary>
            Orig Sample Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_CGMSA">
            <summary>
            CGMS-A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Lock">
            <summary>
            Lock
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ChannelMode">
            <summary>
            Channel Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_UserBitsManagement">
            <summary>
            User Bits Management
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_AuxBits">
            <summary>
            Aux Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_SourceWordlength">
            <summary>
            Source Wordlength
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_AlignmentLevel">
            <summary>
            Alignment Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_MultichannelMode">
            <summary>
            Multichannel Mode
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_SampleFrequencyScaling">
            <summary>
            Scaling
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_DARS">
            <summary>
            DARS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ChannelOrigin">
            <summary>
            Channel Origin
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_ChannelDest">
            <summary>
            Channel Dest
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_LocalAddress">
            <summary>
            Local Address
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_TimeOfDay">
            <summary>
            Time Of Day
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Reliability0_5">
            <summary>
            Reliability 0-5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Reliability6_13">
            <summary>
            Reliability 6-13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Reliability14_17">
            <summary>
            Reliability 14-17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Reliability18_21">
            <summary>
            Reliability 18-21
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CsB_Validity">
            <summary>
            Validity (B)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.CRC">
            <summary>
            CRC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifCodingType">
            <summary>
            Coding Type
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifChannelCount">
            <summary>
            Channel Count
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifSamplingFrequency">
            <summary>
            Sampling Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifSampleSize">
            <summary>
            Sample Size
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifSpeakerAllocation">
            <summary>
            Speaker Allocation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifLevelShift">
            <summary>
            Level Shift Value
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAifDownmix">
            <summary>
            Downmix
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiN">
            <summary>
            N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiCts">
            <summary>
            CTS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAvMute">
            <summary>
            A/V Mute
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiHbr">
            <summary>
            High Bit Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiAudioLayout">
            <summary>
            Audio Layout
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiHdcpAuth">
            <summary>
            HDCP Authentication
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.HdmiHdcpDecrypting">
            <summary>
            HDCP Decrypting
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DtsSyncword">
            <summary>
            DTS Sync
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DtsBitstream">
            <summary>
            DTS Bitstream
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DtsFsize">
            <summary>
            DTS Fsize
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DtsSfreq">
            <summary>
            DTS Sfreq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DtsLfe">
            <summary>
            DTS Lfe
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.Pa">
            <summary>
            Pa
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.Pb">
            <summary>
            Pb
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.Pc">
            <summary>
            Pc
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.Pd">
            <summary>
            Pd
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.NumActiveBits">
            <summary>
            Num Active Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyBsid">
            <summary>
            Dolby BSID
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyLFE">
            <summary>
            Dolby LFEon
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyCmixLev">
            <summary>
            Dolby CMixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbySurMixLev">
            <summary>
            Dolby SurMixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbySurMode">
            <summary>
            Dolby DSurMod
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyMixMode">
            <summary>
            Dolby DMixMod
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyLtRtCmixLev">
            <summary>
            Dolby LtRtCmixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyLoRoCmixLev">
            <summary>
            Dolby LoRoCmixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyLtRtSurMixLev">
            <summary>
            Dolby LtRtSurMixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyLoRoSurMixLev">
            <summary>
            Dolby LoRoSurMixLev
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyPgmScl">
            <summary>
            Dolby PgmScl
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MetadataField.DolbyCompr">
            <summary>
            Dolby Compr
            </summary>
        </member>
        <member name="T:AudioPrecision.API.HdcpState">
            <summary>
            Specifies the current state of HDCP authentication.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdcpState.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:AudioPrecision.API.HdcpState.Authenticating">
            <summary>
            Authenticating
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DistortionHarmonicIndex">
            <summary>
            Specifies the harmonic index of interest for Level and Distortion graphs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionHarmonicIndex.Fundamental">
            <summary>
            F
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionHarmonicIndex.H2">
            <summary>
            H2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionHarmonicIndex.H3">
            <summary>
            H3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DistortionHarmonicIndex.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TimeDomainSmoothingType">
            <summary>
            Specifies the degree of smoothing for time-based measurements.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth1ms">
            <summary>
            1 ms (1000 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth2ms">
            <summary>
            2 ms (500 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth5ms">
            <summary>
            5 ms (200 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth10ms">
            <summary>
            10 ms (100 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth20ms">
            <summary>
            20 ms (50 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth50ms">
            <summary>
            50 ms (20 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth100ms">
            <summary>
            100 ms (10 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth200ms">
            <summary>
            200 ms (5 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth500ms">
            <summary>
            500 ms (2 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth1000ms">
            <summary>
            1000 ms (1 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth2000ms">
            <summary>
            2000 ms (0.5 Hz BW)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TimeDomainSmoothingType.Smooth5000ms">
            <summary>
            5000 ms (0.2 Hz BW)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ModGeneratorLevelRatio">
            <summary>
            Specifies the MOD generator amplitude ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ModGeneratorLevelRatio.OneToOne">
            <summary>
            1:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ModGeneratorLevelRatio.FourToOne">
            <summary>
            4:1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ModGeneratorLevelRatio.TenToOne">
            <summary>
            10:1
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DiscreteHarmonicIndex">
            <summary>
            Specifies the harmonic index of interest for Discrete Distortion Product graphs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H2">
            <summary>
            H2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H3">
            <summary>
            H3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H4">
            <summary>
            H4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H5">
            <summary>
            H5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H6">
            <summary>
            H6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H7">
            <summary>
            H7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H8">
            <summary>
            H8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H9">
            <summary>
            H9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DiscreteHarmonicIndex.H10">
            <summary>
            H10
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothA2dpCodec">
            <summary>
            Specifes the codec used for A2DP audio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpCodec.SBC">
            <summary>
            SBC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpCodec.APTx">
            <summary>
            aptX
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpCodec.AptxLowLatency">
            <summary>
            aptX Low Latency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpCodec.AptxHd">
            <summary>
            aptX HD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpCodec.AAC">
            <summary>
            AAC
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothSbcSampleRate">
            <summary>
            Specifies the sample rate of the audio for the SBC codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcSampleRate.SampleRate_16k">
            <summary>
            16 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcSampleRate.SampleRate_32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcSampleRate.SampleRate_44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcSampleRate.SampleRate_48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothSbcChannelMode">
            <summary>
            Specifies the channel mode of the SBC encoder.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcChannelMode.JointStereo">
            <summary>
            Joint Stereo
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcChannelMode.Stereo">
            <summary>
            Stereo
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcChannelMode.DualChannel">
            <summary>
            Dual Channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothSbcChannelMode.Mono">
            <summary>
            Mono
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAptxSampleRate">
            <summary>
            Specifies the sample rate of the audio for the aptX classic codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxSampleRate.SampleRate_16k">
            <summary>
            16 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxSampleRate.SampleRate_32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxSampleRate.SampleRate_44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxSampleRate.SampleRate_48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAptxLowLatencySampleRate">
            <summary>
            Specifies the sample rate of the audio for the aptX Low Latency codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxLowLatencySampleRate.SampleRate_44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxLowLatencySampleRate.SampleRate_48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAptxHdSampleRate">
            <summary>
            Specifies the sample rate of the audio for the aptX-HD codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxHdSampleRate.SampleRate_44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAptxHdSampleRate.SampleRate_48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothA2dpSampleRate">
            <summary>
            Specifies the sample rate of the audio over the A2DP profile.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpSampleRate.SampleRate_16k">
            <summary>
            16 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpSampleRate.SampleRate_32k">
            <summary>
            32 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpSampleRate.SampleRate_44k">
            <summary>
            44.1 kHz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothA2dpSampleRate.SampleRate_48k">
            <summary>
            48 kHz
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothAacMpegVersion">
            <summary>
            Determines which MPEG version(s) to support when using the AAC codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAacMpegVersion.Mpeg2">
            <summary>
            MPEG-2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothAacMpegVersion.Mpeg4">
            <summary>
            MPEG-4
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothPacketType">
            <summary>
            Specifies the types of Bluetooth data packets.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.HV1">
            <summary>
            HV1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.HV2">
            <summary>
            HV2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.HV3">
            <summary>
            HV3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV1">
            <summary>
            EV1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV2">
            <summary>
            EV2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV3">
            <summary>
            EV3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV3_2">
            <summary>
            2-EV3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV3_3">
            <summary>
            3-EV3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV5_2">
            <summary>
            2-EV5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothPacketType.EV5_3">
            <summary>
            3-EV5
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AsioSampleType">
            <summary>
            Specifies data types for use with ASIO device drivers.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt16MSB">
            <summary>
            Int16MSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt24MSB">
            <summary>
            Int24MSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32MSB">
            <summary>
            Int32MSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTFloat32MSB">
            <summary>
             Float32MSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTFloat64MSB">
            <summary>
            Float64MSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32MSB16">
            <summary>
            Int32MSB16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32MSB18">
            <summary>
             Int32MSB18
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32MSB20">
            <summary>
            Int32MSB20
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32MSB24">
            <summary>
            Int32MSB24
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt16LSB">
            <summary>
            Int16LSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt24LSB">
            <summary>
            Int24LSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32LSB">
            <summary>
            Int32LSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTFloat32LSB">
            <summary>
            Float32LSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTFloat64LSB">
            <summary>
            Float64LSB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32LSB16">
            <summary>
            Int32LSB16
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32LSB18">
            <summary>
            Int32LSB18
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32LSB20">
            <summary>
            Int32LSB20
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTInt32LSB24">
            <summary>
            Int32LSB24
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTDSDInt8LSB1">
            <summary>
            DSDInt8LSB1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTDSDInt8MSB1">
            <summary>
            DSDInt8MSB1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AsioSampleType.ASIOSTDSDInt8NER8">
            <summary>
            DSDInt8NER8
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AnalogInputTermination">
            <summary>
            Specifies the input termination impedance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogInputTermination.InputTermination_300">
            <summary>
            300 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogInputTermination.InputTermination_600">
            <summary>
            600 ohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogInputTermination.InputTermination_Unbal_100k">
            <summary>
            100 kohm
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AnalogInputTermination.InputTermination_Bal_200k">
            <summary>
            200 kohm
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SweepReadingRate">
            <summary>
            The meter reading rate in Bench Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_1">
            <summary>
            1/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_2">
            <summary>
            2/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_4">
            <summary>
            4/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_8">
            <summary>
            8/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_16">
            <summary>
            16/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SweepReadingRate.ReadingRate_32">
            <summary>
            32/sec
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RecorderReadingRate">
            <summary>
            The meter reading rate in Bench Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_1">
            <summary>
            1/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_2">
            <summary>
            2/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_4">
            <summary>
            4/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_8">
            <summary>
            8/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_16">
            <summary>
            16/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_32">
            <summary>
            32/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_64">
            <summary>
            64/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_125">
            <summary>
            125/sec
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RecorderReadingRate.ReadingRate_250">
            <summary>
            250/sec
            </summary>
        </member>
        <member name="T:AudioPrecision.API.APError">
            <summary>
            Specifies the error condition encountered when the application throws an APException.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoError">
            <summary>
            
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorLoadingProject">
            <summary>
            The project file [{0}] could not be loaded. It may be missing or the file is no longer valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidFileFormat">
            <summary>
            Invalid file format.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorDuringExport">
            <summary>
            An error occurred while exporting the file. The file may be locked by another program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorRunningMeasurement">
            <summary>
            Data cannot be imported while a measurement is in progress.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportError">
            <summary>
            An error occurred while importing the file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorInvalidUnits">
            <summary>
            Cannot import this data file. The units are not compatible with this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorNoMatchingData">
            <summary>
            Cannot import this data file. Could not find a worksheet named [ {0} ].
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorFileRead">
            <summary>
            An error occurred while reading the file. The file may be locked by another program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorInvalidFile">
            <summary>
            Cannot import this data file. The file does not contain the expected data format.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorTrackFirstFailed">
            <summary>
            Cannot import data file because it does not have any data in the first channel. Turn off Track First Channel and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorValuesNotSequential">
            <summary>
            Cannot import data file because one or more X data values are not sequential.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidProjectFile">
            <summary>
            This is not a valid project file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OldVersionProjectFile">
            <summary>
            This file is not a current version project file, and could not be transformed to the current version.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnitError">
            <summary>
            Unit error.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BlobError">
            <summary>
            Blob handle error.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NonCompatibleUnitForReferencedValue">
            <summary>
            The unit is not compatible with the units for this referenced value. Referenced values must always be set in absolute units. Compatible units are [ {0} ].
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NonCompatibleUnitForExport">
            <summary>
            The X-axis unit in the export specification is not compatible with the units for this graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ValueError">
            <summary>
            This value is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorSavingProject">
            <summary>
            An error occurred when trying to save the project file. Make sure there is enough disk space.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorOverwritingProjectFile">
            <summary>
            Unable to overwrite existing project file. Make sure the file is not read-only.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotActivateInvalidSignalPathName">
            <summary>
            The signal path name is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ProjectItemNameNotUnique">
            <summary>
            Invalid item name. An item with that name already exists.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceReportEmpty">
            <summary>
            The report for this sequence is currently empty. Select one or more measurements and run the sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceEmptyError">
            <summary>
            Cannot run a sequence without any checked signal paths or measurement steps. Check one or more signal paths and/or measurement steps before running this sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceInProgressError">
            <summary>
            The requested operation cannot be completed while a sequence is in progress. Terminate the sequence and try the operation again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BenchModeInProgressError">
            <summary>
            The requested operation cannot be completed while a Bench Mode measurement is in progress. Stop the measurement and try the operation again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceContainsInvalidStepsError">
            <summary>
            Some measurements have results that can't be calculated in this configuration. Deselect these results before running the sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OffsetResultNegative">
            <summary>
            The result of an offset in this unit cannot be a negative value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportMarginsInvalid">
            <summary>
            The margins are invalid for the current paper size.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportGenerationFailed">
            <summary>
            An error occurred generating the report.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportOutOfMemory">
            <summary>
            An error occurred exporting the report. The report is probably too large. Uncheck some meausurements and try exporting again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ResourceNotFound">
            <summary>
            The resource was not found.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InternalError">
            <summary>
            An internal error has occurred. The system is no longer stable. The application will exit now.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InternalErrorCanContinue">
            <summary>
            An internal error has occurred. You may be able to continue working, but you may encounter further errors. You should save your work and restart the APx software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FatalError">
            <summary>
            An unrecoverable error has occurred. You may save your data before the application automatically exits.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SystemUnstableError">
            <summary>
            The system has encountered an error and cannot proceed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ValueOutOfRange">
            <summary>
            Value out of range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidIOConfiguration">
            <summary>
            Invalid I/O configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SerializationError">
            <summary>
            An error occurred when trying to serialize the file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.XMLValidationError">
            <summary>
            An error occurred when validating the project file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.XMLValidationFileNotFound">
            <summary>
            Could not find the validation file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PcUnresponsive">
            <summary>
            The analyzer could not acquire data for this measurement because your PC has become unresponsive to the Instrument. Please close unused programs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DigitalInputUnlocked">
            <summary>
            The analyzer could not acquire data for this measurement because the digital input is unlocked. Be sure it is connected and set up correctly for your DUT.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DigitalOutputUnlocked">
            <summary>
            The digital output rate is zero. Make sure the DUT is connected correctly.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReceivingNonPcm">
            <summary>
            Input is encoded. Measurement aborted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InstrumentConnectionLost">
            <summary>
            The connection to the instrument was lost.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateMismatch">
            <summary>
            This measurement requires the sample rate of the input and output to match.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StartupFailure">
            <summary>
            An error occurred when starting APx. Close the APx software and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MaximumSignalPathsExceeded">
            <summary>
            The project can contain a maximum of 4 signal paths.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CopyLimitPointsError">
            <summary>
            The requested number of points is invalid for this operation.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidHardwareConfiguration">
            <summary>
            Unsupported hardware configuration. Either there is a technical fault with your instrument, or you need to install a newer version of APx500 software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AmplOutOfRange">
            <summary>
            Amplitude out of range. Allowed amplitudes are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FirmwareRevTooNew">
            <summary>
            {0}: This hardware module's firmware revision is unsupported by this version of APx500 software. Please install a newer version of the APx500 software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FirmwareRevTooOld">
            <summary>
            {0}: This hardware module's firmware revision is unsupported by this version of APx500 software. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OperationNotValidForMenuOrToolbarItem">
            <summary>
            The requested operation is not valid on built-in menu/toolbar items.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMeasurementType">
            <summary>
            The measurement does not exist in the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMeasurementResultType">
            <summary>
            The measurement result does not exist in the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementResultTypeNameAlreadyExists">
            <summary>
            A MeasurementResultType already exists with the requested name but different data parameters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FirmwareUpdateRequired">
            <summary>
            The instrument firmware needs to be updated. Please restart the application and update the firmware before proceeding with this program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementNotValidInCurrentConfiguration">
            <summary>
            The requested measurement is not valid for the following reasons:
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StartupFailureInRemoting">
            <summary>
            The application was unable to start. Check Windows Task Manager to ensure a previous instance of the application is not already running or exit this application and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FaultyHardwareConfiguration">
            <summary>
            There is a technical fault with your Instrument. Please contact Audio Precision technical support.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetDigitalInterfaceLevelFailed">
            <summary>
            Unable to achieve the target digital interface level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetAverageJitterLevelFailed">
            <summary>
            Unable to achieve the target average jitter level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetBandpassLevelFailed">
            <summary>
            Unable to achieve the target bandpass level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetBitErrorFailed">
            <summary>
            Unable to achieve the target error rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetCrestFactorFailed">
            <summary>
            Unable to achieve the target crest factor.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetDcLevelFailed">
            <summary>
            Unable to achieve the target DC level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetFrequencyFailed">
            <summary>
            Unable to achieve the target frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetGainFailed">
            <summary>
            Unable to achieve the target gain.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetImdRatioFailed">
            <summary>
            Unable to achieve the target IMD ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetPeakLevelFailed">
            <summary>
            Unable to achieve the target peak level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetPhaseFailed">
            <summary>
            Unable to achieve the target phase.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetLevelFailed">
            <summary>
            Unable to achieve the target level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetLevelRatioFailed">
            <summary>
            Unable to achieve the target level ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetSinadFailed">
            <summary>
            Unable to achieve the target SINAD.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetTHDNFailed">
            <summary>
            Unable to achieve the target THD+N level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetTHDNRatioFailed">
            <summary>
            Unable to achieve the target THD+N ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetDcxVoltsFailed">
            <summary>
            Unable to achieve the target DCX Voltage.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetDcxOhmsFailed">
            <summary>
            Unable to achieve the target DCX Resistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForTargetSampleRateFailed">
            <summary>
            Unable to achieve the target sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxDigitalInterfaceLevelFailed">
            <summary>
            Unable to achieve the maximum digital interface level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxAverageJitterLevelFailed">
            <summary>
            Unable to achieve the maximum average jitter level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxBandpassLevelFailed">
            <summary>
            Unable to achieve the maximum bandpass level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxBitErrorFailed">
            <summary>
            Unable to achieve the maximum error rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxCrestFactorFailed">
            <summary>
            Unable to achieve the maximum crest factor.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxDcLevelFailed">
            <summary>
            Unable to achieve the maximum DC level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxFrequencyFailed">
            <summary>
            Unable to achieve the maximum frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxGainFailed">
            <summary>
            Unable to achieve the maximum gain.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxImdRatioFailed">
            <summary>
            Unable to achieve the maximum IMD ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxPeakLevelFailed">
            <summary>
            Unable to achieve the maximum peak level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxPhaseFailed">
            <summary>
            Unable to achieve the maximum phase.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxSinadFailed">
            <summary>
            Unable to achieve the maximum SINAD.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxLevelFailed">
            <summary>
            Unable to achieve the maximum level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxLevelRatioFailed">
            <summary>
            Unable to achieve the maximum level ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxTHDNFailed">
            <summary>
            Unable to achieve the maximum THD+N level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxTHDNRatioFailed">
            <summary>
            Unable to achieve the maximum THD+N ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxDcxVoltsFailed">
            <summary>
            Unable to achieve the maximum DCX Voltage.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxDcxOhmsFailed">
            <summary>
            Unable to achieve the maximum DCX Resistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMaxSampleRateFailed">
            <summary>
            Unable to achieve the maximum sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinDigitalInterfaceLevelFailed">
            <summary>
            Unable to achieve the minimum digital interface level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinAverageJitterLevelFailed">
            <summary>
            Unable to achieve the minimum average jitter level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinBandpassLevelFailed">
            <summary>
            Unable to achieve the minimum bandpass level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinBitErrorFailed">
            <summary>
            Unable to achieve the minimum error rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinCrestFactorFailed">
            <summary>
            Unable to achieve the minimum crest factor.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinDcLevelFailed">
            <summary>
            Unable to achieve the minimum DC level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinFrequencyFailed">
            <summary>
            Unable to achieve the minimum frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinGainFailed">
            <summary>
            Unable to achieve the minimum gain.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinImdRatioFailed">
            <summary>
            Unable to achieve the minimum IMD ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinPeakLevelFailed">
            <summary>
            Unable to achieve the minimum peak level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinPhaseFailed">
            <summary>
            Unable to achieve the minimum phase.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinLevelFailed">
            <summary>
            Unable to achieve the minimum level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinLevelRatioFailed">
            <summary>
            Unable to achieve the minimum level ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinSinadFailed">
            <summary>
            Unable to achieve the minimum SINAD.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinTHDNFailed">
            <summary>
            Unable to achieve the minimum THD+N level.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinTHDNRatioFailed">
            <summary>
            Unable to achieve the minimum THD+N ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinDcxVoltsFailed">
            <summary>
            Unable to achieve the minimum DCX Voltage.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinDcxOhmsFailed">
            <summary>
            Unable to achieve the minimum DCX Resistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SetGeneratorLevelForMinSampleRateFailed">
            <summary>
            Unable to achieve the minimum sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReachedMaxGeneratorLevel">
            <summary>
            Unable to regulate because the maximum generator level was reached.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InsufficientProgressInNelderMeadSolver">
            <summary>
            Progress stopped in the Nelder-Mead solver before achieving an acceptable solution.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReachedMaxIterationsForNelderMeadSolver">
            <summary>
            Reached maximum number of iterations in Nelder-Mead solver without achieving an acceptable solution.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TargetChannelInvalid">
            <summary>
            The target channel is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SettingOutOfRange">
            <summary>
            The value {0} is out of range. Allowed values are between {1} and {2}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SettingOutOfRangeNoValue">
            <summary>
            The value is out of range. Allowed values are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AutomationStartupError">
            <summary>
            API initialization error. The APx application was unable to start.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ComponentLibraryInitializationError">
            <summary>
            The components library has already been initialized.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LimitOffsetMismatch">
            <summary>
            The length of the offset array does not match the number of channels in the limit.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoDataToExportError">
            <summary>
            The object does not contain any data to export. Export operation aborted.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SaveError">
            <summary>
            An error occurred while saving the file. The name may be invalid, the file may be locked by another program, or the disk may be full.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CopyGraphDataFailed">
            <summary>
            Cannot copy data from the graph because it does not have any data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CopyGraphDataTrackFirstFailed">
            <summary>
            Cannot copy data from the graph because it does not have any data in the first channel. Turn off Track First Channel and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FftTooLarge">
            <summary>
            The maximum FFT size is 512k when there are more than 8 channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AnalogInputOutOfRange">
            <summary>
            The analog input range is too high for termination. Lower the input level or the input range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMeasurementKeyName">
            <summary>
            No measurement with that name exists in the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.IndexOutOfRange">
            <summary>
            The index is out of range of the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotDeleteLastItem">
            <summary>
            Cannot delete the last item in the collection. The collection must contain at least one item.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AnalogInputRanged">
            <summary>
            The analog input changed ranges during the measurement. Try fixing the range manually to one high enough to accommodate the peaks of the signal.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotAddMeasurement">
            <summary>
            The signal path can only contain one Signal Path Setup item.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotDeleteMeasurement">
            <summary>
            The signal path must contain exactly one Signal Path Setup item.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSignalPathName">
            <summary>
            The signal path name is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMeasurementName">
            <summary>
            The measurement name is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidStepName">
            <summary>
            The step name is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidCommandLine">
            <summary>
            The command line for this program step cannot be blank.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSwitcherConfiguration">
            <summary>
            The switcher configuration is invalid. A and B cannot be set to the same output channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSwitcherConfigurationName">
            <summary>
            The configuration name is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ItemNotFound">
            <summary>
            The item does not exist in the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ElementNotActive">
            <summary>
            The item cannot be modified because it is not active. Either it does not apply at this time, or the measurement is not currently visible.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileTooNew">
            <summary>
            The file was saved with a newer version of APx500. It cannot be opened by this version of the software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementStepEmptyError">
            <summary>
            Cannot run a measurement without any checked measurement results. Check one or more measurement results before running this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DataNotAvailable">
            <summary>
            Data is not available for the requested type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RunMeasurementError">
            <summary>
            An error occurred when executing the measurement. Verify that all measurement sub-steps are properly configured.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RunSignalPathError">
            <summary>
            An error occurred when executing the signal path. Verify that all measurement sub-steps are properly configured.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RunSequenceError">
            <summary>
            An error occurred when executing the sequence. Verify that all measurement sub-steps are properly configured.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorNoData">
            <summary>
            Cannot import data file because there is no data for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorCreatingReportFolder">
            <summary>
            An error occurred when creating the report folder. You may have insufficient access rights, or the disk may be full.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotDeleteLimitChannelWithTrackFirst">
            <summary>
            Limit data can only be removed for a specific channel if the Track First Channel option is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileNotFound">
            <summary>
            The file does not exist.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FilenameNotValid">
            <summary>
            The file name is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidWaveformFile">
            <summary>
            This is not a valid waveform file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMultichannelWaveformSettings">
            <summary>
            Multichannel waveform recording is not supported for encoded files, or for encrypted inputs.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotStartGeneratorWithoutWaveform">
            <summary>
            Please select a waveform before starting the generator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NumberOfChannelsChangedDuringAcquisition">
            <summary>
            The measurement was stopped because the input format changed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidImageFile">
            <summary>
            This is not a valid image file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.HdmiSampleRateOutOfRange">
            <summary>
            The requested sample rate is not allowed because of the bandwidth limitations of the current video mode. Select a higher resolution video mode, or use one of the following sample rate ranges:
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AutomationStartupErrorIncompatibleVersions">
            <summary>
            Another instance of APx is already running, but that version is not compatible with this program. Shut down other instances of APx before starting this program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidPhaseReferenceChannel">
            <summary>
            The phase reference channel is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidDbraReferenceChannel">
            <summary>
            The channel used for setting dBrA is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidDbrbReferenceChannel">
            <summary>
            The channel used for setting dBrB is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidDbrGReferenceChannel">
            <summary>
            The channel used for setting dBrG is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMeasuredChannel">
            <summary>
            The measured channel is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidTriggerChannel">
            <summary>
            The trigger channel is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveformNotSupportedOnSelectedOutput">
            <summary>
            This waveform cannot be played using the current output connector. Select {0} and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveformNotPlayableWithCurrentSerialOutputSettings">
            <summary>
            The Digital Serial output settings are not configured properly for this waveform.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EncodedWaveformNotSupportedOnSelectedOutput">
            <summary>
            Encoded waveforms cannot be played over the current output connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DtsxWaveformNotCompatibleWithTransmitMode">
            <summary>
            This waveform cannot be played using the selected transmit rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotPlayEncodedWaveformInAnalogOutputMode">
            <summary>
            Cannot play an encoded waveform in analog output mode. Select a digital output from Signal Path Setup and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnknownSignalType">
            <summary>
            Cannot start a measurement with an unknown signal type. Please select a known signal type and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedSampleRate">
            <summary>
            The waveform has an unsupported sample rate. Valid sample rates are between 32 kHz and 192 kHz.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedSampleRateForHdmi">
            <summary>
            The waveform has an unsupported sample rate for output over HDMI.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSampleRateContactTechSupport">
            <summary>
            The hardware is not capable of playing this waveform. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedDtsSampleRate">
            <summary>
            DTS waveforms are only supported at sample rates of 12 kHz, 22 kHz, 24 kHz, 44.1 kHz, 48 kHz, 88.2 kHz, 96 kHz, 176.4 kHz, and 192 kHz.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedDolbyDigitalSampleRate">
            <summary>
            Dolby Digital waveforms are only supported at a sample rate of 48 kHz.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnknownSignalTypeUnavailable">
            <summary>
            Cannot set signal type to 'Unknown' when output is external or when the selected waveform is not arbitrary.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveformNotSupportedInCurrentVideoMode">
            <summary>
            There is not enough bandwidth to play this waveform using the current video mode. Try selecting a higher resolution video mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveformRequiresDigitalOption">
            <summary>
            This waveform requires a digital I/O option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedDevelopmentVersionModule">
            <summary>
            You have an unsupported development version of the {0} option. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BoardUpgradeNeeded">
            <summary>
            One or more boards need to be upgraded to run this version of APx500 software. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StepSizeRequiresTooManySweepPoints">
            <summary>
            The step size requires too many sweep points. The maximum number of sweep points is 65535. Please choose a larger step size.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.IncrementMustBePositive">
            <summary>
            The increment value must be greater than zero.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepPointsNotDefined">
            <summary>
            Sweep points not properly defined. The measurement requires 2 or more sweep points.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooManySweepPoints">
            <summary>
            The maximum number of sweep points is 65535.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepPointsNotSequential">
            <summary>
            Sweep points must be sequential.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepStartAndStopNotUnique">
            <summary>
            Sweep start and stop frequencies must be unique.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepSkippedAllPoints">
            <summary>
            The sweep failed to run because all of the sweep values were out of range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LimitPointsNotSequential">
            <summary>
            Limit X data values must be sequential.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnlockProjectPasswordError">
            <summary>
            Failed to unlock the project. The password was incorrect.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PasswordError">
            <summary>
            The password was incorrect.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotAutoSetGeneratorLevelWithWaveformSelected">
            <summary>
            APx cannot automatically determine the generator level when playing an arbitrary waveform. Select the internal generator and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorCreatingTemplateGroup">
            <summary>
            An error occurred when creating the template group folder. The folder name may be invalid, you may have insufficient access rights, or the disk may be full.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ValueDouble_NaNError">
            <summary>
            At least one value is not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSerialConfigurationName">
            <summary>
            The configuration name is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidSizeError">
            <summary>
            This EDID does not have a size that is a multiple of 128 bytes. Reverting to previous EDID.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidTooLong">
            <summary>
            Unable to load this EDID because APx500 only supports EDIDs with a maximum of one extension block. Reverting to previous EDID.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidIllegalBlockType">
            <summary>
            Unable to load this EDID because it contains illegal block types. Reverting to previous EDID.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidEdidFile">
            <summary>
            Unable to load this EDID because this is not a valid EDID file. Reverting to previous EDID.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidMonitorBlocksMustBeUnique">
            <summary>
            Cannot change the descriptor to the desired type because there can only be one Monitor Name and one Monitor Range Limits descriptor in this block.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidMonitorBlocksRequired">
            <summary>
            The Monitor Name and Monitor Range Limits descriptors are required by EDID 1.3. They cannot be removed from this block.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidBlockDoesNotFit">
            <summary>
            There is no room in this EDID to add the desired block. Delete one or more blocks to make room.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidCannotBeNull">
            <summary>
            Unable to load this EDID because the EDID data cannot be null. Reverting to previous EDID.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidBlockInvalidChecksum">
            <summary>
            The checksum value is invalid. The expected value is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidHasErrors">
            <summary>
            This EDID has more than one error. See Details for more information.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidVersionNotSupported">
            <summary>
            This EDID revision is not supported.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidMissingRequiredElements">
            <summary>
            The Monitor Name and Monitor Range Limits descriptors are required by EDID 1.3.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidUnexpectedMonitorElements">
            <summary>
            Block 0 must contain exactly one Monitor Name and one Monitor Range Limits descriptor, as specified by EDID 1.3.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EdidIncompatibleDescriptors">
            <summary>
            Block 0 contains detailed descriptors not supported by this EDID version.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RenameFileError">
            <summary>
            An error occurred while renaming the file. The file may be locked by another program, or the name may be invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DeleteFileError">
            <summary>
            An error occurred when deleting the file. You may have insufficient access rights, the file may opened by another program, or the file may be read-only.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OpenFileError">
            <summary>
            An error occurred when opening the file. You may have insufficient access rights, the file may opened by another program, or the file may be read-only.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MoveFileError">
            <summary>
            An error occurred while moving the file. The file may be locked by another program, or you may have insufficient access rights.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DeleteFolderError">
            <summary>
            An error occurred when deleting the folder. You may have insufficient access rights, or one or more files in the folder may be read-only.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RenameFolderError">
            <summary>
            An error occurred while renaming the folder. The folder may be locked by another program, or the name may be invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MaximumWavFileSizeError">
            <summary>
            The waveform file exceeds system capacity.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedStreamType">
            <summary>
            An unsupported stream type was detected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateChangedDuringAcquisition">
            <summary>
            The sample rate changed while the acquisition was in progress.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ChirpCannotBeGenerated">
            <summary>
            The sweep stop frequency is too high for the input sample rate. The maximum stop frequency is {0} Hz.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSaveChirpGeneratorWaveformWhenNotOpenLoop">
            <summary>
            Cannot save the chirp generator waveform when the measurement is not configured for Open Loop.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSaveChirpGeneratorWaveformWhenInvalid">
            <summary>
            Cannot save the chirp generator waveform when the measurement is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasuredPilotToneRespFreqIsOutsideDetectionRange">
            <summary>
            Frequency correction failed because the measured pilot tone on one or more channels was outside the range for detection. The measured pilot tone frequency needs to be between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NotEnoughSilenceToMeasureDC">
            <summary>
            There isn't enough post-pilot silence to measure the DC level.  Try increasing the post-pilot silence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NotEnoughTimeBeforeZero">
            <summary>
            The time axis doesn't contain enough time before 0.  Please make sure that the settings used to generate the stimulus were the same as those currently set.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooMuchDataForMonoWavFile">
            <summary>
            The size of the data exceeds the capacity of a mono WAV file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooMuchDataForMultiChannelWavFile">
            <summary>
            The size of the data exceeds the capacity of a multi-channel WAV file. Try saving the data in separate mono files instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooMuchDataForExtensibleMultiChannelWavFile">
            <summary>
            The size of the data exceeds the capacity of an extensible multi-channel WAV file. Try saving the data in separate mono files instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSaveEncryptedContent">
            <summary>
            The stream is HDCP Encrypted. Cannot write file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RecordingFailedToFindEncodedAudioStream">
            <summary>
            The recorder did not find any encoded audio in the input bitstream. No audio was recorded.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MoveProjectTemplateErrorFileAlreadyExists">
            <summary>
            Cannot move project to this group because a project with the same name already exists in the group.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DigitalErrorRateNoData">
            <summary>
            The Digital Error Rate measurement failed to detect any samples. Make sure your digital input is properly connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PcUnresponsiveWhenRecording">
            <summary>
            The analyzer could not acquire data for this measurement because the recording was taking too long. This can occur when saving to a network folder or to a removable disk. Try specifying a folder on your local disk drive instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LoadFileError">
            <summary>
            APx500 could not load this file. The file may have been deleted, or may be locked by another program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExcelMaxRowsExceeded">
            <summary>
            There are too many rows to export. Try switching the file type to 'xlsx' or 'csv'.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExcelMaxColsExceeded">
            <summary>
            There are too many columns to export. Try switching the file type to 'xlsx' or 'csv'.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.XlsxMaxRowsExceeded">
            <summary>
            There are too many rows to export. Try switching the file type to 'csv'.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.XlsxMaxColsExceeded">
            <summary>
            There are too many columns to export. Try switching the file type to 'csv'.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExcelMaximumExceeded">
            <summary>
            {0} has too many {1} to export. Try switching the file type to {2}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSetLimitDataOnChannelWithTrackFirst">
            <summary>
            Cannot set the limit data on this channel because the Track First Channel setting is enabled. Turn off Track First Channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomLineStyleNotSupported">
            <summary>
            Custom Line Style is not supported.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FramingError">
            <summary>
            The analyzer could not acquire data for this measurement because of a framing error.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InfoFrameSettingsNotAvailableInAutoMode">
            <summary>
            Audio InfoFrame settings cannot be changed when the Auto setting is enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ChannelStatusSettingsNotAvailableInAutoMode">
            <summary>
            Channel Status Bits cannot be changed when the Auto setting is enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UserBitsSettingsNotAvailableInAutoMode">
            <summary>
            User Bits cannot be changed when the Auto setting is enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PreEmphasisAudioDoesNotApply">
            <summary>
            The PreEmphasis value for audio does not apply when the audio mode is set to Non-Audio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PreEmphasisNonAudioDoesNotApply">
            <summary>
            The PreEmphasis value for non-audio does not apply when the audio mode is set to Audio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WordLength24BitDoesNotApply">
            <summary>
            The 24 bit sample word length does not apply when the word length is set to 20 bits.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WordLength20BitDoesNotApply">
            <summary>
            The 20 bit sample word length does not apply when the word length is set to 24 bits.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StatusBitDoesNotApply">
            <summary>
            The status bit does not apply in the current configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidStringLength">
            <summary>
            This string is not valid. The length must be between {0} and {1} characters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CUBytesNotSettableContactTechSupport">
            <summary>
            This APx500 hardware is not capable of setting user bits or status bits on Subframe B. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ChannelStatusBytesBNotSettableWhenTrackingA">
            <summary>
            Cannot set status bits on Subframe B when Subframe A and B are the same.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveformRequiresAG52Option">
            <summary>
            This waveform requires the AG52 option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotTurnOffInterpolation">
            <summary>
            Interpolation cannot be turned off for this graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MetadataFieldNotAssigned">
            <summary>
            The selected trace does not have a metadata field assigned to it.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceStepTimeoutExpired">
            <summary>
            The timeout expired.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepTimeoutExpired">
            <summary>
            The sweep timed out.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementTimeoutExpired">
            <summary>
            The measurement timed out before a signal was detected. Check connections.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DimGeneratorNotAvailableForOutput">
            <summary>
            Cannot generate DIM waveforms with the current output configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DimGeneratorNotAvailable">
            <summary>
            Cannot generate DIM waveforms with this APx instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DimGeneratorNotAvailableWithoutAG52">
            <summary>
            The DIM waveform requires the AG52 option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GeneratorDisabledForExternalOutput">
            <summary>
            The signal generator is disabled when the output connector is None (External).
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GeneratorOnlyAvailableForDigital">
            <summary>
            The generator is only available when the output connector is digital.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AuxControlStatesForContinueAndCancelCannotBeSame">
            <summary>
            The Aux Control states for the Continue and Cancel functions cannot be the same.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AuxControlStatesNotUnique">
            <summary>
            Each Aux Control state must be unique. One or more bit settings matches an existing Aux Control setting.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AuxControlStateNotSet">
            <summary>
            Invalid Aux Control In state. One or more bit settings must be enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidPhaseMode">
            <summary>
            Cannot select 'Relative to Ch1' when number of input channels is 1.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidPromptConfiguration">
            <summary>
            The prompt is not properly configured. The current configuration will prevent the prompt from closing. One or more methods of dismissing the prompt must be enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorNoMatchingResults">
            <summary>
            Cannot import this data file. The graph data in the file does not have X and Y units that exactly match any graphs in this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GraphsDoNotHaveRequestedDataForExport">
            <summary>
            One or more graphs do not contain the requested data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DtsRateDoesNotApply">
            <summary>
            The DTS output sample rate setting does not apply to the current waveform, or to the current output configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GraphsFailedLimitChecks">
            <summary>
            One or more graphs failed limit checks.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementRecorderTimeout">
            <summary>
            The Measurement Recorder timed out because the expected stream type was never observed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ObsoleteMeasurement">
            <summary>
            Failed to create measurement. The measurement type is obsolete.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LogSweepNotAllowed">
            <summary>
            Logarithmic sweeps are not allowed when generator level units are in dB.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LogSweepCantGoToZero">
            <summary>
            Start and Stop values must be positive for logarithmic sweeps.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotAutoSetGeneratorLevelWhenInputFile">
            <summary>
            APx cannot automatically determine the generator level when the Input Connector is File.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CopyToClipboardError">
            <summary>
            An error occurred when copying data to the clipboard.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PasteFromClipboardError">
            <summary>
            An error occurred when pasting data from the clipboard.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileAnalyzeError">
            <summary>
            An error occurred trying to perform .WAV file analysis.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileAnalysisNotAllowedInDemoMode">
            <summary>
            Cannot analyze .WAV files in Demo Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileAnalysisNotAllowForThisMeasurement">
            <summary>
            This measurement cannot analyze .WAV files.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileAnalysisRequiresFileInput">
            <summary>
            File analysis is only allowed when the input configuration is File.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoFilesSelectedForAnalysis">
            <summary>
            No files were selected for analysis.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EndOfInputStream">
            <summary>
            The analyzer could not complete this measurement because the end of the input file was reached.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FileTooShort">
            <summary>
            One of the selected files is too short to permit analysis.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GeneratorOnNotAvailable">
            <summary>
            The generator is not available in the current I/O configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StartNotAvailable">
            <summary>
            The Start method cannot be called with the current I/O configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LoadAttachedItemDuplicateFileNameError">
            <summary>
            A file with this name already exists in the project.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.LoadAttachedItemDuplicateFileContentsError">
            <summary>
            A file with the same contents already exists in the project but it has a different name.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RequestedBandwidthNotAllowed">
            <summary>
            The requested input bandwidth is not allowed with this APx500 instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RequestedBandwidthRequiresHBW52Module">
            <summary>
            The requested input bandwidth requires the HBW52 high bandwidth analog input option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PersistentInvalidReading">
            <summary>
            Could not obtain a valid reading from all channels simultaneously.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SpecifiedReadingInvalid">
            <summary>
            Could not obtain a valid reading from the specified channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasuredChannelNotPresent">
            <summary>
            Could not measure distortion on this Measured Channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TrackingChannelOutOfRange">
            <summary>
            The tracking channel is greater than the number of input channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ChannelOutOfRange">
            <summary>
            The specified channel is greater than the number of input channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SignalTypeSettingNotAvailable">
            <summary>
            The signal type setting cannot be changed in the current configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportDataInvalidResultType">
            <summary>
            The import data is not compatible with this measurement result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DataArrayLengthMismatch">
            <summary>
            The X and Y arrays must have the same length.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EditCustomLayoutError">
            <summary>
            An error occurred while editing the custom report layout.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnknownAttachment">
            <summary>
            Attached project item is unknown.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportShowFailed">
            <summary>
            There is no program installed that is associated with a .docx file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportExportNotAvailbleForCustom">
            <summary>
            The report cannot be exported to the requested format when the report style is Microsoft Word.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportAppendFileIOException">
            <summary>
            Cannot append to {0} because it is either locked or opened by another program.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TriggerTimeoutExpired">
            <summary>
            The trigger timeout expired.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportDataEmptyError">
            <summary>
            The data import object does not contain any data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AudibleMonitorPcAudioDeviceNotAvalible">
            <summary>
            Unable to open the Windows audio driver. The audible monitor is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ResultTypeNotAllowedForMeasurement">
            <summary>
            The selected result type cannot be added to this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ObsoleteMeasurementResult">
            <summary>
            Failed to create measurement result. The measurement result type is obsolete.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotAddResultsToThisMeasurement">
            <summary>
            This measurement does not support dynamic results.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AddinLoadError">
            <summary>
            One or more addins failed to load.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomProcessingLoadError">
            <summary>
            One or processing libraries failed to load.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooManyDataSpecifications">
            <summary>
            The maximum number of result specifications is 16.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DerivedResultSettingNotApplicable">
            <summary>
            The setting does not apply to this derived result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidDataSet">
            <summary>
            The data set is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidGraphResultType">
            <summary>
            The graph is not the requested type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidHarmonicSelection">
            <summary>
            One or more harmonics must be selected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidChannelSelection">
            <summary>
            One or more channels must be selected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSetLimitOnGraph">
            <summary>
            Limits are not allowed on this type of graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReportPreWord2007">
            <summary>
            Cannot edit the custom layout with associated program. Please install Microsoft Word (2007 or later) to use this feature.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotCalculateGeometricMean">
            <summary>
            Cannot calculate Geometric Mean for this result because the source data may contain negative values.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MSWordRequired">
            <summary>
            Custom report layouts require Microsoft Word (2007 or later).
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorNotAllowed">
            <summary>
            This result does not allow import.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AudibleMonitorDisabledForCurrentInput">
            <summary>
            The audible monitor is disabled in the current input configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AudibleMonitorError">
            <summary>
            The audible monitor was stopped. This may be because Windows' primary audio output device is already in use.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StartProgramError">
            <summary>
            The program did not execute properly.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableMustBeMonotonicallyIncreasing">
            <summary>
            Values must be in order and unique. Click Order Values or remove duplicate values to fix the problem.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableFrequenciesAndLevelsMustBeValid">
            <summary>
            All data points must be valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableMinFrequencyError">
            <summary>
            Minimum EQ frequency value is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableMaxFrequencyError">
            <summary>
            Maximum EQ frequency value is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableMustHaveAtLeastTwoEntries">
            <summary>
            The table must have at least two entries.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableRelativeLevelsOutOfRange">
            <summary>
            One or more level values are out of range. Values must be between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQTableMustHaveUniqueFrequencies">
            <summary>
            X values must be unique.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQMaximumFrequencyTooLow">
            <summary>
            For Continuous Sweep measurements, the minimum allowable stop frequency is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EQMinFrequencyTooHigh">
            <summary>
            For Continuous Sweep measurements, the maximum start frequency must be 1/3 octave below the stop frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ContinuousSweepStartFreqLessThanEqMin">
            <summary>
            The start frequency must be greater than or equal to the minimum EQ frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ContinuousSweepStopFreqGreaterThanEqMax">
            <summary>
            The stop frequency must be less than or equal to the maximum EQ frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMultitoneTable">
            <summary>
            The multitone frequencies are not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DuplicateTonesInMultitone">
            <summary>
            The multitone must have unique frequencies.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotEditMultitoneDefinition">
            <summary>
            This multitone definition cannot be modified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneInvalidColumn">
            <summary>
            Import failed. Data was missing from row {0}, column {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneInvalidSampleRate">
            <summary>
            Import failed. Sample Rate was not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneInvalidLength">
            <summary>
            Import failed. Length was not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneInvalidSampleRateOrLength">
            <summary>
            Import failed. Sample Rate or Length was not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidMultitoneData">
            <summary>
            Multitone data is not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneNumTonesMismatch">
            <summary>
            The number of tones must be the same in each channel specification.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportMultitoneToneBinMismatch">
            <summary>
            One or more frequency values does not match the corresponding tone bin value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportMultitoneAsWav">
            <summary>
            Cannot export multitones as .WAV files with this API command. Use ExportWav instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportSweepAsWav">
            <summary>
            Cannot export sweeps as .WAV files with this API command. Use ExportWav instead.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneCrosstalkError">
            <summary>
            Failed to generate crosstalk tones because the frequencies are too close together. Try increasing the generator length.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportInvalidFormat">
            <summary>
            Cannot export to this file type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateErrorTooLarge">
            <summary>
            The frequency shift is too large to correct. Verify that you have the right signal, and that the input and output sample rates match.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneTonesTooCloseToAnalyze">
            <summary>
            The multitone frequencies are spaced too close together. Try reducing the skirt width in Advanced Settings, or moving the tones further apart.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneNotEnoughTones">
            <summary>
            This signal does not have enough tones. Multitone analysis requires at least two tones.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneTooManyTones">
            <summary>
            This signal has too many tones. Maximum number of tones is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportMultitoneInvalidLength">
            <summary>
            The length is invalid. Allowed values are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneMinMaxError">
            <summary>
            Invalid frequency specification. Min Frequency must be less than Max Frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveFileUnspportedChannels">
            <summary>
            This waveform file has more than 2 channels. Only mono or stereo waveform files are supported.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveFileNumberOfChannelsExceeded">
            <summary>
            The channel assignment requested has exceeded the number of channels ({0}) in the .WAV file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneFrequencyOutOfRange">
            <summary>
            Tone frequency out of range. Allowed values are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneAveragesOutOfRange">
            <summary>
            Average value out of range. Allowed values are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TimeValueOutOfRange">
            <summary>
            Time value out of range. Allowed values are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotExportMultitone">
            <summary>
            The signal cannot be exported because the multitone data is not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateOutOfRange">
            <summary>
            The sample rate is out of range. Allowed rates are between {0} and {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MultitoneUnableToMeasureFrequencyOffset">
            <summary>
            Unable to measure the frequency offset. Try increasing the frequency shift tolerance in Advanced Settings, or moving the tones further apart.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotPasteAppendedStepToNonAppendedMeasurement">
            <summary>
            Cannot add Appended Measurement step to a measurement which does not support append.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NotMultitoneDefinitionFile">
            <summary>
            This file cannot be used as a multitone definition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportCustomNotAvailable">
            <summary>
            The report type must be set to Microsoft Word before attempting to save as a custom report file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SignalAnalyzerFftLengthOutOfRange">
            <summary>
            The FFT length cannot be larger than the number of samples in the acquisition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotSetLimitZeroWhenLog">
            <summary>
            Limit must have all positive values when axis is logarithmic.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FFTLengthMin">
            <summary>
            At the current FFT length ({0}) the acquisition length must be at least {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcquisitionLengthMax">
            <summary>
            The acquisition length must be less than {0} samples.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcquisitionLengthMinSamples">
            <summary>
            The acquisition length must be at least {0} samples.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcquisitionLengthMinSeconds">
            <summary>
            The acquisition length must be at least {0} seconds.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcquisitionTimeMax">
            <summary>
            At the current input sample rate ({0}) the acquisition length must be less than {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GeneratorLengthMax">
            <summary>
            At the current input sample rate ({0}) the generator length must be less than {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotPasteSteps">
            <summary>
            The clipboard does not contain any sequence steps that are compatible with this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidBluetoothAddress">
            <summary>
            The device address is not valid. Addresses should be formatted as 00:00:00:00:00:00 or 000000000000.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothPairDeviceFailed">
            <summary>
            Failed to pair with Bluetooth device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothDisabled">
            <summary>
            Bluetooth functions are disabled for the current I/O configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothProfilesNotSelected">
            <summary>
            Bluetooth functions are disabled until the Bluetooth profiles have been specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothProfileNotValid">
            <summary>
            This Bluetooth profile is not valid with the current global Bluetooth settings.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidBluetoothClassOfDevice">
            <summary>
            Invalid device class.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothConnectFailed">
            <summary>
            Connect to Bluetooth device failed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothDisconnectFailed">
            <summary>
            Disconnect from Bluetooth device failed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothPartialConnectFailed">
            <summary>
            Connection to one or more Bluetooth profiles failed. See Details.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothTimeout">
            <summary>
            The Bluetooth device did not respond. Timeout expired.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothSampleRateNotSupportedForA2DPSource">
            <summary>
            Maximum sample rate for A2DP source configuration is 44.1 kHz.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothCommandFailed">
            <summary>
            Bluetooth command failed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothCommandFailedDeviceNotConnected">
            <summary>
            Bluetooth command failed. No Bluetooth device is connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothMeasurementFailedNoConnectedDevice">
            <summary>
            Cannot start the generator or make a measurement without a Bluetooth device connected. Connect a Bluetooth device and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidATCommand">
            <summary>
            The AT command string must have two or more characters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothProfileNotValidForGenerator">
            <summary>
            The currently connected Bluetooth profile is not valid for the Bluetooth output connector. Signal generation is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothGeneratorDisabledWhenScoNotConnectedHfpHsp">
            <summary>
            APx is connected to an HFP/HSP device, but the SCO is not open. Signal generation is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothGeneratorDisabledA2dpAndHfpHsp">
            <summary>
            APx is connected to an A2DP/HFP/HSP device, but the SCO is not open and streaming is not started. Signal generation is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothGeneratorDisabledWhenNotStreaming">
            <summary>
            APx is connected to an A2DP device, but streaming has not started. Signal generation is disabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateInvalidForBluetooth">
            <summary>
            The waveform sample rate does not match the current Bluetooth output sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothDeviceNotFound">
            <summary>
            APx did not find a Bluetooth device nearby.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothInvalidSspDeviceType">
            <summary>
            Device cannot be 'None' when man-in-the-middle protection is enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothInvalidCodec">
            <summary>
            The selected codec is not valid for this Bluetooth module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothA2dpNotConnected">
            <summary>
            The A2DP profile is not connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothAvrcpNotConnected">
            <summary>
            The AVRCP profile is not connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothHfpNotConnected">
            <summary>
            The HFP/HSP profile is not connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothAvrcpAbsoluteVolumeNotSupported_Version1_0">
            <summary>
            Absolute volume control is not enabled when the AVRCP version is 1.0.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothAvrcpAbsoluteVolumeNotSupported">
            <summary>
            The connected device does not support absolute volume control.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothAvrcpAbsoluteVolumeOnlyValidForA2dp">
            <summary>
            Absolute volume control is not available when the current audio connection is not A2DP.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothDeviceAlreadyConnected">
            <summary>
            Another Bluetooth device connected before this operation could complete. Operation cancelled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothScoNotConnected">
            <summary>
            The analyzer could not acquire data for this measurement because the SCO is not open.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothA2dpStreamingStopped">
            <summary>
            The analyzer could not acquire data for this measurement because A2DP streaming is stopped.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothCallStatusInvalid">
            <summary>
            Cannot execute the requested Bluetooth command with the current call status.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothSampleRateInvalidForCodec">
            <summary>
            The specified sample rate is not valid for the selected codec.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothVariableIsNotApplicable">
            <summary>
            Cannot write to the Bluetooth Connection Address variable when neither the input or output connector is Bluetooth.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothFirmwareUpdateFailed">
            <summary>
            Bluetooth firmware update failed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothFirmwareUpdateRequired">
            <summary>
            Bluetooth firmware requires an update. Please run the APx500 software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothFeatureNotApplicable">
            <summary>
            The requested feature is not applicable to this Bluetooth module.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothProfileDisabled">
            <summary>
            The requested Bluetooth profile is not enabled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BluetoothCommandFailedDueToProfileDisconnection">
            <summary>
            The command failed because the required profile was disconnected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ProductRegistrationError">
            <summary>
            There was a problem during product registration. Please try again later.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportSweepTableInvalidFile">
            <summary>
            Import failed. This is not a valid sweep table file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportSweepTableInvalidPilotToneFrequency">
            <summary>
            Import failed. The pilot tone frequency is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportSweepTableInvalidPilotToneDuration">
            <summary>
            Import failed. The pilot tone duration is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportSweepTableInvalidFrequency">
            <summary>
            Import failed. The frequency on row {0} is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportSweepTableInvalidDuration">
            <summary>
            Import failed. The duration on row {0} is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepFrequencyAndDurationMismatch">
            <summary>
            The sweep is not properly specified. Frequencies and durations must have the same number of entries in the table.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotReplaceSignalDefinition">
            <summary>
            A signal definition with the same name already exists in the project, but it is not the same signal definition type. Choose a different name for this signal definition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidPath">
            <summary>
            The path is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidResult">
            <summary>
            The result is not part of this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ImportErrorTooManyResults">
            <summary>
            Cannot import data file because it contains more than one result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CrosstalkChannelOutOfRange">
            <summary>
            Crosstalk channel {0} is not within the valid range of {1} and {2}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnexpectedResponseFromProgramStep">
            <summary>
            Program returned the incorrect response. Expected="{0}", Actual="{1}"
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DataLoggingError">
            <summary>
            An error occurred when attempting to write data values to the output file. Ensure that the file path is valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SequenceLoggingError">
            <summary>
            An error occurred writing the sequence statistics values to the {0}. Ensure that the file path is valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RunSequenceProgramError">
            <summary>
            An error occurred when running the program at the end of the sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RunSequenceProgramStepTerminatedError">
            <summary>
            The program step took too long to respond and was terminated.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TooManyItemsInCollection">
            <summary>
            An error occurred adding the item to the collection. The maximum number of allowed items is {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FailedToInitializeAPI">
            <summary>
            The APx API subsystem failed to start. Close all API client programs and try again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotReplaceWithExistingItem">
            <summary>
            The selected file cannot be used to replace an item because it already exists in the project.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasurementNotAllowedInDemoMode">
            <summary>
            Cannot use this measurement in Demo Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotPlayEncodedWaveform">
            <summary>
            Cannot play an encoded waveform with this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveFilesMustBeMono">
            <summary>
            This measurement can only play mono .WAV files.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqLibraryInitializationFailed">
            <summary>
            Could not initialize the PESQ library.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqError">
            <summary>
            An error occurred in the PESQ measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateError">
            <summary>
            {0} is not a valid sample rate for this measurement. The expected sample rate is {1}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WaveFileInvalidForMeasurement">
            <summary>
            Selected file is invalid for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqUnsupportedMode">
            <summary>
            PESQ cannot resample files for analysis. Select files of equal sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaUnsupportedMode">
            <summary>
            POLQA does not support this mode. Select files of equal sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaLibraryInitializationFailed">
            <summary>
            Could not initialize the POLQA library.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaError">
            <summary>
            An error occurred in the POLQA measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnsupportedSampleRateError">
            <summary>
            {0} is not a valid sample rate for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaWaveFileInvalid">
            <summary>
            Selected file is invalid for POLQA measurements.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaMismatchedSampleRate">
            <summary>
            One or more files do not match the current sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaMismatchedSampleRateDetails">
            <summary>
            The sample rate is set to match the first file analyzed. For a conformant measurement, the sample rates of all the files analyzed must match within 0.5 %. Alternatively, enable 'Auto resampling' in Advanced Settings to allow mismatched sample rates. When 'Auto resampling' is enabled, the results are non-conformant. P.863 recommends not using Wideband or Narrowband reference signals in SuperWideband mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaUnsupportedSampleRateDetails">
            <summary>
            For a conformant measurement, sample rates must correspond to the correct mode. Alternatively, enable 'Auto resampling' in Advanced Settings to allow alternate modes. When 'Auto resampling' is enabled, the results are non-conformant. P.863 recommends not using Wideband or Narrowband reference signals in SuperWideband mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DerivedResultNotAvailable">
            <summary>
            Cannot derive the requested result from this source result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqMeasurementTimedOut">
            <summary>
            The PESQ measurement timed out because the expected stream type was never observed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqPolqaAverageFileMinimumRequirement">
            <summary>
            At least two reference files are required for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqWrapperFileLengthInvalid">
            <summary>
            File length of {0} seconds exceeds the ITU-T P.862 recommended maximum 30 seconds for calculation accuracy. Consider trimming it down.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PesqWrapperUnnamedFileLengthInvalid">
            <summary>
            File length exceeds the ITU-T P.862 recommended maximum 30 seconds for calculation accuracy. Consider trimming it down.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaMeasurementTimedOut">
            <summary>
            The POLQA measurement timed out because the expected stream type was never observed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PolqaWrapperFileLengthInvalid">
            <summary>
            File length of {0} seconds exceeds the ITU-T P.863 recommended maximum 12 seconds for calculation accuracy. Consider trimming it down.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.GraphImageSizeRange">
            <summary>
            Graph size must be between 3 and 21 inches.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CryptoFailure">
            <summary>
            Decryption failed. See details for more information.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidBitstreamReferenceFile">
            <summary>
            The reference file is not valid for bitstream comparison.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ReferenceFileCannotBeNone">
            <summary>
            You must select a reference file before starting the measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BitstreamComparisonError">
            <summary>
            An error occurred in the bitstream.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.UnexpectedError">
            <summary>
            An unexpected error occurred.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.IrrecoverableApplicationError">
            <summary>
            APx500 has encountered an irrecoverable condition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OutOfMemoryError">
            <summary>
            APx500 has run out of memory. Close APx500, and then restart the application to continue. This can occur during a measurement that is configured to append many large acquisitions (high sample rate and long duration). To avoid this condition, limit the number of appends when making large acquisitions. Adding RAM to the computer running APx500 will allow more appends.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BitstreamCompareFailedToSync">
            <summary>
            The input stream did not match the reference file within the allowable initial sync frames.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PassFailFileNotFound">
            <summary>
            The file does not exist.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoSignalFound">
            <summary>
            The file does not contain a recognizable signal.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioConnectError">
            <summary>
            Could not connect to the ASIO device. Make sure the device is powered on and connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioSetSampleRate">
            <summary>
            The sample rate is not supported by the ASIO device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioNoMemory">
            <summary>
            ASIO device does not have enough memory to complete the request.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioNoClock">
            <summary>
            ASIO Sample clock or rate cannot be determined or is not present.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioSPNotAdvancing">
            <summary>
            ASIO hardware is not running.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioInvalidMode">
            <summary>
            ASIO hardware is in an invalid mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioInvalidParameter">
            <summary>
            An ASIO parameter is not valid. Check your channel mapping under 'Settings...' for ASIO.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioHardwareMalfunction">
            <summary>
            ASIO hardware is malfunctioning.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioNotPresent">
            <summary>
            ASIO hardware is not present, or not available.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioControlPanel">
            <summary>
            Failed to open the ASIO control panel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioUnknownError">
            <summary>
            There was an unknown error with your ASIO device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioNotConnected">
            <summary>
            The ASIO device is not connected, or not powered on.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioInitFailed">
            <summary>
            There was an error trying to initialize the ASIO device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioUnknownSampleRate">
            <summary>
            There was an error with the requested sample rate.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioInvalidChannels">
            <summary>
            There are ASIO channels that are mapped to APx channels that are invalid or not present.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioNotInstalled">
            <summary>
            ASIO is not installed on this APx500 instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioMappedChannelsRemoved">
            <summary>
            Some ASIO channels were removed from the APx channel mappings. There is a maximum of {0} mapped ASIO channels allowed at a time on this instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioDeviceNotInstalled">
            <summary>
            Could not find {0} in the list of installed ASIO drivers.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ClockSourceNotPresent">
            <summary>
            The clock source '{0}' is not an available clock setting.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ClockDividersNotFound">
            <summary>
            Couldn't find a set of dividers for setting the clock to the requested frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SensitivityValueOutofRange">
            <summary>
            The sensitivity value is not within tolerance of the expected sensitivity.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FrequencyValueOutofRange">
            <summary>
            The frequency value is not within tolerance of the expected frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CalibrationValueOutOfRange">
            <summary>
            The measured value on {0} was not within the expected range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TrackFirstNotAllowedForLoopback">
            <summary>
            Track First is not allowed in this configuration. Loopback is only allowed when the number of input channels equals the number of output channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidReportUpdateSelection">
            <summary>
            The report update selection is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SplitNotAvailable">
            <summary>
            Split is not available for this result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BatteryCurrentZeroAdjustError">
            <summary>
            Battery Current zero adjust procedure is not valid unless the input connector is BatteryCurrent.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidCeCSetup">
            <summary>
            CEC commands can only be sent if the output connector is HDMI ARC or the input connector is HDMI ARC.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotStartNewMeasurementWhileAnotherIsRunning">
            <summary>
            Failed to start the measurement. Stop the {0} measurement first.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidSweepSource">
            <summary>
            The sweep source type is not valid with the current measurement configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DcCouplingNotValid">
            <summary>
            DC coupling is not allowed in the current mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcCouplingNotValid">
            <summary>
            AC coupling is not allowed in the current mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidFrequencyRange">
            <summary>
            The minimum frequency must be less than the maximum frequency.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidFrequencyRangeForFit">
            <summary>
            The frequency range for the fit lies outside of the frequency range of the data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidDcResistance">
            <summary>
            The DC resistance cannot be negative.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoSignalPresent">
            <summary>
            The system could not detect a valid impedance signal. Be sure the driver is correctly connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NoResonanceFound">
            <summary>
            The driver resonant frequency could not be determined. Be sure the driver is correctly connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotDetermineQ">
            <summary>
            The driver Q could not be determined. Be sure the driver is correctly connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AddedMassTooLow">
            <summary>
            The driver resonant frequency did not decrease enough for a reliable measurement. Try adding more mass.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.KnownVolumeTooLarge">
            <summary>
            The driver resonant frequency did not increase enough for a reliable measurement. Try using a smaller box.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StandardModelNotValid">
            <summary>
            Some parameter values calculated using the Standard model were unrealistic for this driver. Consider using another model.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.Lr2ModelNotValid">
            <summary>
            Some parameter values calculated using the LR-2 model were unrealistic for this driver. Consider using another model.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.WrightModelNotValid">
            <summary>
            Some parameter values calculated using the Wright model were unrealistic for this driver. Consider using another model.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.Need2ChannelsFor2ChannelImpedance">
            <summary>
            Cannot make a two-channel impedance measurement with only one input channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CecSendMessageNotAvailable">
            <summary>
            The installed HDMI module does not support sending CEC messages. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CecSendMessageOnlyAvailableForArc">
            <summary>
            The installed HDMI module only supports sending CEC messages using the ARC connectors. Please contact Audio Precision technical support for assistance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CecSourceMessageNotAvailable">
            <summary>
            The output connector must be HDMI Source or HDMI ARC Tx to send CEC messages from the Source/ARC Tx connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CecSinkMessageNotAvailable">
            <summary>
            The input connector must be HDMI Sink or HDMI ARC Rx to send CEC messages from the Sink/ARC Rx connector.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidCecOperator">
            <summary>
            CEC operator must be a hex value between 00 and FF.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidCecOperandBytes">
            <summary>
            CEC operand bytes must be valid hex values.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CecMessageNakError">
            <summary>
            CEC message was not acknowledged.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SourceResultNotInCollection">
            <summary>
            The source result was not in the collection.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ResultTypeNotAllowedOnTheRightAxisForThisResult">
            <summary>
            This result type cannot be used on the right axis of this graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FailedToDetermineThieleSmallParams">
            <summary>
            The attempt to fit the model to the data failed. Could not determine the Thiele-Small parameters based on the measured data.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FreeAirDoesNotExist">
            <summary>
            Could not compute the remaining Thiele-Small parameters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RightAxisResultNotAllowed">
            <summary>
            Cannot specify a right axis result for this result type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OutputEqChannelsExceeded">
            <summary>
            EQ is disabled when there are more than two output channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InputEqChannelsExceeded">
            <summary>
            EQ is disabled when there are more than two input channels.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MaximumEqFrequency">
            <summary>
            Maximum frequency for EQ is {0}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MinimumEqFrequency">
            <summary>
            Minimum frequency for EQ is {0}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidAmplifierCorrectionCurveFile">
            <summary>
            Amplifier correction curve file must have exactly two worksheets, one for gain and one for phase.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidValuesAmplifierCorrectionCurveFile">
            <summary>
            Amplifier correction curve file must have valid values for {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FilterInvalid">
            <summary>
            The filter is not valid for the current configuration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.OperationNotAvailableWhileMeasurementIsRunning">
            <summary>
            The requested operation cannot be completed while APx is running a measurement in Bench Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.DuplicateSettlingParameterNotAllowed">
            <summary>
            Settler can only make readings for one instance of a given meter type.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExtSyncUnlocked">
            <summary>
            External Sync failed to lock.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BenchModeNotAllowed">
            <summary>
            Bench Mode is not allowed for this instrument.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.BenchModeOptionNotPresent">
            <summary>
            Bench Mode requires the SW-BEN option.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SweepSourceInvalid">
            <summary>
            Sweep measurement cannot start in the current configuration.  There are no valid sweep sources.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AdioCommonModeNotAllowed">
            <summary>
            Cannot set Common Mode while not in Digital Balanced.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RegulationTargetValueNotDefined">
            <summary>
            Regulation failed. The target value is not defined.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RegulationMinMaxValuesNotDefined">
            <summary>
            Regulation failed. The min and/or max values are not defined.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RegulationToleranceValuesNotDefined">
            <summary>
            Regulation failed. The absolute and/or relative tolerance values are not defined.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RegulationTargetInvalid">
            <summary>
            The specified regulation target is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.RegulationSourceInvalid">
            <summary>
            The specified regulation source is not valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotRecordEncodedAudioWhileMakingSettledReadings">
            <summary>
            The Recorder cannot save encoded audio while making settled readings.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidLevelRatioReferenceChannel">
            <summary>
            The level ratio reference channel is invalid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StreamChanged">
            <summary>
            The measurement was stopped because the stream changed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidWavefileForThisMeasurement">
            <summary>
            The specified waveform is not valid for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.SampleRateUnsupported">
            <summary>
            The specified sampling rate can not be implemented within expected tolerance.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidResultUnitSetting">
            <summary>
            {0} was saved with the unit ({1}) which is no longer valid.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidProcessingPlugin">
            <summary>
            The specified library is not a valid APx processing plugin.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomComputeInitializeFailed">
            <summary>
            Failed to initialize derived result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomComputeInvalidAxisBinding">
            <summary>
            Cannot bind the specified axis type because the source data type does not match.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomMeasurementInvalidType">
            <summary>
            Invalid custom measurement specification {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.VariableNotDefined">
            <summary>
            The variable $({0}) is not defined.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.VariableAlreadyExists">
            <summary>
            The variable name $({0}) is already defined.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidCharacterInVariableName">
            <summary>
            The variable name contains one or more invalid characters.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExportSpecificationMismatch">
            <summary>
            The export specification is not compatible with this result.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InvalidLimitOffsetCurve">
            <summary>
            The X and Y values are not properly specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.InterpolationErrorWhenOffsettingLimitCurve">
            <summary>
            Could not interpolate the value at a point.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StepResultNotSpecified">
            <summary>
            This step requires a result to be specified.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CannotExportEmptyChannelSelection">
            <summary>
            At least one channel must be selected for export.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomMeasurementExpired">
            <summary>
            This measurement will not run after {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.CustomResultExpired">
            <summary>
            This result will not be valid after {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.PdmDecimationRatioError">
            <summary>
            Bit Clock cannot be set based on the current logic level, decimation rate and decimation ratio.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.VariableNameConflictsWithEnvironmentVariable">
            <summary>
            The variable named {0} already exists as an environment variable. Use a different variable name.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.StepTypeNotAllowedForMeasurement">
            <summary>
            The specified sequence step type is not allowed for this measurement.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceOfflineFaultError">
            <summary>
            The APx1701 is offline or in fault condition.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceOfflineError">
            <summary>
            The APx1701 is offline. Be sure it is connected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceFaultError">
            <summary>
            The APx1701 {0} condition has occurred.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceGeneratorFaultError">
            <summary>
            A condition of {0} has occurred in the APx1701.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceTempFaultError">
            <summary>
            The APx1701 has a temperature fault.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfacePowerFaultError">
            <summary>
            The APx1701 has a power fault.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TdlFileParseError">
            <summary>
            Error parsing the TEDS definition file {0} on line {1}. {2}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TedsExecutionError">
            <summary>
            Error processing the TEDS bit stream: {0}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TedsDataBitValueError">
            <summary>
            Unexpected bit value {0}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TedsDeviceNotSupported">
            <summary>
            Unable to parse the TEDS data. APx requires the following FDL file: {0}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TedsFamilyCodeNotSupported">
            <summary>
            Family Code {0} not supported or found.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TedsFamilyCodeNotVerified">
            <summary>
            Family Code {0} not verified. Family Codes file may need updating.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TdlFileNotFoundError">
            <summary>
            Error opening the TDL definition file {0}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FdlFileParseError">
            <summary>
            Error parsing the FDL definition file {0} on line {1}. {2}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FdlFileExecutionError">
            <summary>
            Error executing the FDL definition file {0}. {1}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceCurrent1FaultError">
            <summary>
            The APx1701 has a current limit 1 fault.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.TransducerInterfaceCurrent2FaultError">
            <summary>
            The APx1701 has a current limit 2 fault.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AcquisitionFailure">
            <summary>
            The acquisition failed. Try setting the acquisition length to a shorter duration.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MinSelectionError">
            <summary>
            At least one item must be selected.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ExpiredOn">
            <summary>
            {0} expired on {1}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioChannelAlreadyMapped">
            <summary>
            This asio channel is already mapped to an APx500 channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ApxChannelOutOfRange">
            <summary>
            APx Channel is out of range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioChannelOutOfRange">
            <summary>
            Asio Device Channel is out of range.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AsioSampleRateMisMatch">
            <summary>
            Asio Device sample rate does not match the sample rate of the file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FunctionNotAllowedInDemoMode">
            <summary>
            The requested function is not enabled in Demo Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.FunctionRequiresAnOption">
            <summary>
            The requested function is disabled because a required option {0} is not installed.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.EagModuleNotPresent">
            <summary>
            The EAG module is not present.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.AdcTestOptionNotPresent">
            <summary>
            The EAG module or SW-ADCTEST option not present.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.NamedSettingOutOfRange">
            <summary>
            The {0} value of {1} is out of range. Allowed values are between {2} and {3}.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ProductionTestModeRequired">
            <summary>
            The requested command can only be executed in Production Test mode. Please lock the project and enable Production Test mode and try the command again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ErrorSavingFile">
            <summary>
            There was a error while saving the file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.MeasuredChannelPilotToneRangeFailure">
            <summary>
            {0} measured pilot tone: {1}
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ValueCannotBeNegative">
            <summary>
            The {0} value cannot be negative.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.APError.ValueMustBeGreatorThanZero">
            <summary>
            The {0} value must be greater than 0.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.LocalEventWrapper">
            <summary>
            Summary description for EventWrapper.
            
            This code based on Ingo Rammer's BroadcastEventWrapper example.  www.thinktecture.com
            
            When a remote client wants to receive an event the roles of client and server are reversed.
            The object receiving the event becomes the server.  So we must know the object definition here
            in Blitz.  So the remote software registers for the event to be called on this object class
            and then registers a local delegate on the event fired from this class:
            
            Example:
            
            	IProductB1Application AP = ProductB1.Instance;
            	IDiagnosticTool d = AP.TestSuite.DiagnosticTool;
            	LocalEventWrapper wrapper = new EventWrapper();
            	wrapper.LocalEvent += new EventHandler(Test_Handler);
            	d.Stopped += new EventHandler(wrapper.LocalHandler);
            
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeterValuesChangedEventArgs">
            <summary>
            Event arguments passed to handlers when meter values are updated.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.MeterValuesChangedEventArgs.#ctor(AudioPrecision.API.IMeterValues)">
            <summary>
            Constructor.
            </summary>
            <param name="values">The values to pass along to the event listener</param>
        </member>
        <member name="P:AudioPrecision.API.MeterValuesChangedEventArgs.Values">
            <summary>
            The latest data for the meter measurement result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.MeterValuesChangedEventHandler">
            <summary>
            Delegate for callers to implement who want to receive notifications when meter values
            have changed.
            </summary>
            <param name="sender">The object which originated the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:AudioPrecision.API.APEvents">
            <summary>
            This class provides functions for subscribing to events via .NET remoting.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APEvents.AddHandler(System.EventHandler)">
            <summary>
            Creates an event handler for standard Event type events
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>An EventHandler delegate</returns>
        </member>
        <member name="M:AudioPrecision.API.APEvents.RemoveHandler(System.EventHandler)">
            <summary>
            Removes an event handler for standard Event type events
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>An EventHandler delegate</returns>
        </member>
        <member name="M:AudioPrecision.API.APEvents.AddMeterValuesHandler(AudioPrecision.API.MeterValuesChangedEventHandler)">
            <summary>
            Creates an event handler for MeterValuesChangedEvent event types
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>A MeterValuesChangedEventHandler delegate</returns>
        </member>
        <member name="M:AudioPrecision.API.APEvents.RemoveMeterValuesHandler(AudioPrecision.API.MeterValuesChangedEventHandler)">
            <summary>
            Removes an event handler for MeterValuesChangedEvent event types
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>A MeterValuesChangedEventHandler delegate</returns>
        </member>
        <member name="M:AudioPrecision.API.APEvents.AddAppClosingHandler(AudioPrecision.API.ApplicationClosingEventHandler)">
            <summary>
            Creates an event handler for standard Event type events
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>An ApplicationClosingEventHandler delegate</returns>
        </member>
        <member name="M:AudioPrecision.API.APEvents.RemoveAppClosingHandler(AudioPrecision.API.ApplicationClosingEventHandler)">
            <summary>
            Removes an event handler for standard Event type events
            </summary>
            <param name="eventFunction">The function which is called when the event is fired</param>
            <returns>An ApplicationClosingEventHandler delegate</returns>
        </member>
        <member name="T:AudioPrecision.API.APException">
            <summary>
            An APException is generated by the application when an unexpected error occurs.  Check the 
            ErrorCode property to determine the error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APException.LastException">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APException.ErrorCode">
            <summary>
            Gets the error code for this exception.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APException.#ctor(System.String,AudioPrecision.API.APError)">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.#ctor(System.String,AudioPrecision.API.APError,System.Int32)">
            Version of above constructor allowing caller to specify the number of stack
            frames away from the current frame in which the throw resides.
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.#ctor(System.String,AudioPrecision.API.APError,System.Exception)">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.#ctor(System.String,AudioPrecision.API.APError,System.Exception,System.Int32)">
            Version of above constructor allowing caller to specify the number of stack
            frames away from the current frame in which the throw resides.
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>from ISerializable - GetObjectData performs a custom serialization.</summary> 
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.ToString">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APException.GetFileAndLineNumber(System.String,System.Int32)">
            <summary>
             Returns the Source File and Line number of the caller.
            </summary>
            <returns>String in the form "filename.cs: 45"</returns>
        </member>
        <member name="T:AudioPrecision.API.FatalAPException">
            <summary>
            A FatalAPException is generated when the application has experienced an unrecoverable error.
            The application will exit after this exception is dismissed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.FatalAPException.#ctor(System.String,AudioPrecision.API.APError)">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.FatalAPException.#ctor(System.String,AudioPrecision.API.APError,System.Exception)">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.FatalAPException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> this protected constructor is needed for serialization when exception propagates from a remoting server to the client.</summary>
             <exclude/>
        </member>
        <member name="T:AudioPrecision.API.ApiExtensions">
            <summary>
            ApiExtensions provide functions for creating exceptions from APErrors.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ApiExtensions.MakeException(AudioPrecision.API.APError)">
            <summary>
            Create an APException using a given APError.
            </summary>
            <param name="errorCode">Specific APError</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.ApiExtensions.MakeException(AudioPrecision.API.APError,System.Exception,System.Object[])">
            <summary>
            Create an APException with a given APError and supporting information.
            </summary>
            <param name="errorCode">Specific APError</param>
            <param name="innerEx">Text of error message</param>
            <param name="formatParams">Formatting options</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.APx500">
            <summary>
            This class represents the APx500 software application.  It gives access to all functions
            of the software program including the user interface, making measurements, and getting results.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.#ctor(System.Boolean)">
            <summary>
            Constructs a new instance of the APx500 software application and starts
            the software if necessary.  The application is not shown by default.
            </summary>
            <param name="updateFirmwareIfNecessary">If True, and the APx instrument requires a firmware upgrade, 
            then the calling API program will wait until the APx firmware upgrade has completed.  If False, then
            the APx software throws an exception indicating a firmware upgrade is required.  If this parameter
            is not specified by the caller, the default value of True will be used.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.#ctor(AudioPrecision.API.APxOperatingMode,System.Boolean)">
            <summary>
            Constructs a new instance of the APx500 software application and starts
            the software if necessary.  The application is not shown by default.
            </summary>
            <param name="updateFirmwareIfNecessary">If True, and the APx instrument requires a firmware upgrade, 
            then the calling API program will wait until the APx firmware upgrade has completed.  If False, then
            the APx software throws an exception indicating a firmware upgrade is required.  If this parameter
            is not specified by the caller, the default value of True will be used.</param>
            <param name="mode">Specifies the desired starting mode for the APx application.  If the application
            is already running, this parameter will attempt to change the mode.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.InitializeLifetimeService">
            <exclude/>
        </member>
        <member name="M:AudioPrecision.API.APx500.GetRemoteInstance(System.Boolean,AudioPrecision.API.APxOperatingMode)">
            <summary>
            connect to an instance of the application using remoting.
            </summary>
            <param name="updateFirmware"> </param>
            <param name="mode">Sequence or Bench Mode</param>
        </member>
        <member name="P:AudioPrecision.API.APx500.ProjectFileName">
            <summary>
            Gets the name of the project file on disk, or empty if the file has not been saved.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.IsProjectModified">
            <summary>
            Gets whether or not the user had made changes to the project.  A modified project
            should be saved via the <see cref="M:AudioPrecision.API.APx500.SaveProject(System.String)">SaveProject</see> command.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.OpenProject(System.String)">
            <summary>
            Opens a project from a file.
            </summary>
            <param name="fileName">The file name to open</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.SaveProject(System.String)">
            <summary>
            Saves the project file to disk.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="P:AudioPrecision.API.APx500.Sequence">
            <summary>
            Gets the sequence of measurements displayed in the Measurement Navigator.  The sequence
            allows automatic execution of a series of measurements and collects all of the results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Visible">
            <summary>
            Gets or sets whether the application window is displayed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.Minimize">
            <summary>
            Minimizes the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.Maximize">
            <summary>
            Maximizes the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.Restore">
            <summary>
            Restores the application window to its non minimized or maximized state.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Width">
            <summary>
            Gets or sets the width of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Height">
            <summary>
            Gets or sets the height of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Left">
            <summary>
            Gets or sets the left screen position of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Top">
            <summary>
            Gets or sets the top screen position of the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.Exit">
            <summary>
            Exits the application.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.IsDemoMode">
            <summary>
            Gets whether or not the application is connected to APx500 series hardware.  
            False if connected, true if disconnected.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Version">
            <summary>
            Gets all of the version information about the software and any attached APx500 series
            hardware.  If the application is running in demo mode, the HW version information is
            not specified.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.InputSampleRate">
            <summary>
            Gets the measured input sample rate expressed in Hz.
            If the selected input connector is digital and the input is unlocked, the value will
            be double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.OutputSampleRate">
            <summary>
            Gets the measured output sample rate expressed in Hz.
            If the selected output connector is configured for an external clock and no clock is
            provided, the value will be double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AnalogInputRange">
            <summary>
            Gets the current voltage range of the analog input connectors or Null
            if the range information is not available.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalMonitorsEnabled">
            <summary>
            Gets or sets whether the input signal monitors are actively processing the
            input signal.  Setting this to false reduces the amount of CPU time taken
            by the APx500 software and increases system performance.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AuxControlOutputValue">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IAuxControlMonitor.AuxControlOutputValue">AuxControlMonitor.AuxControlOutputValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveSignalPathIndex">
            <summary>
            Gets the integer index of the active signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveSignalPathName">
            <summary>
            Gets the name of the active signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveMeasurementType">
            <summary>
            Gets the type of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveMeasurementIndex">
            <summary>
            Gets the integer index of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveMeasurementName">
            <summary>
            Gets the name of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ActiveMeasurement">
            <summary>
            Gets the active measurement object.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AttachedProjectItems">
            <summary>
            Gets the collection of all files that have been attached to this project including
            waveform files and image files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AudibleSignalMonitor">
            <summary>
            Gets the settings for the Audible Signal Monitor which presents the audio input from the APx instrument
            on to the Windows audio sound card.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ScopeSignalMonitor">
            <summary>
            Gets the time domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.FftSpectrumSignalMonitor">
            <summary>
            Gets the frequency domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalMeters">
            <summary>
            Gets the input meters window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.StatusBitsMonitor">
            <summary>
            Gets the Status Bits monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.HdmiAudioInfoFramesMonitor">
            <summary>
            Gets the HDMI Audio InfoFrames monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AuxControlMonitor">
            <summary>
            Gets the Aux Control monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.BluetoothMonitor">
            <summary>
            Gets the Bluetooth monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.PdmMonitor">
            <summary>
            Gets the PDM monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.DigitalSerialMonitor">
            <summary>
            Gets the Digital Serial monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.AnalogOutputMonitor">
            <summary>
            Gets the settings for the analog sine wave generator on the APx555 instrument.  This monitor is only
            enabled when the current output connector is not already analog.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.LastException">
            <summary>
            Gets the last error thrown by the APx application.  This property could return Null of no errors have occurred.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.ClearLastException">
            <summary>
            Removes the last exception from the <see cref="P:AudioPrecision.API.APx500.LastException">LastException</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.BluetoothSettings">
            <summary>
            Gets the settings for the Bluetooth I/O module
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.CancelOperation">
            <summary>
            This function is the equivalent of pressing the Cancel button on the progress dialog for the sequence or a 
            measurement.  This function must be called from a different thread than the thread which started the sequence
            or measurement, as those calls will block and not return until their operations have completed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ProjectSettings">
            <summary>
            Gets the settings which apply to all measurements within a project file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.CreateNewProject">
            <summary>
            Creates a new project
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddSignalPath">
            <summary>
            Adds a new signal path to the project.
            </summary>
            <returns>The newly added signal path</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteSignalPath(System.Int32)">
            <summary>
            Deletes the specified signal path
            </summary>
            <param name="index">The 0-based index of the signal path</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteSignalPath(System.String)">
            <summary>
            Deletes the specified signal path.
            </summary>
            <param name="name">The name of the signal path. If more than one have the same name, the first is chosen.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.String,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.Int32,System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.String,System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.String,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.Int32,System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddMeasurement(System.String,System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box</param>
            <returns>The newly added measuremen</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.GetAllMeasurementNames">
            <summary>
            Gets the names of all available measurement types which can be added to the APx project given the current
            hardware and software configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteMeasurement(System.Int32,System.Int32)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteMeasurement(System.Int32,System.String)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteMeasurement(System.String,System.Int32)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteMeasurement(System.String,System.String)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddResult(System.Int32,System.Int32,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddResult(System.Int32,System.String,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddResult(System.String,System.Int32,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.AddResult(System.String,System.String,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.String,System.String,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.Int32,System.String,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.Int32,System.String,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteResult(System.String,System.Int32,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CreateStateChangeCollection">
            <summary>
            For internal use only.
            </summary>
            <returns>A object which contains multiple changes which can be committed at once to improve performance.</returns>
        </member>
        <member name="M:AudioPrecision.API.APx500.DeleteUncheckedItems(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Removes unused items from the project file.
            </summary>
            <param name="deleteSignalPaths">True to delete uncheck signal paths</param>
            <param name="deleteMeasurements">True to delete unchecked measurements in a signal path</param>
            <param name="deleteResults">True to delete unchecked results in a measurement</param>
            <param name="deleteSequenceSteps">True to delete unchecked sequence steps in a measurement</param>
        </member>
        <member name="P:AudioPrecision.API.APx500.NavigatorVisible">
            <summary>
            Shows/Hides the navigator and its splitter.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.LockProject(System.String,System.Boolean,System.Boolean)">
            <summary>
            Locks the current project with the given password.
            </summary>
            <param name="password">Project file password</param>
            <param name="productionTest">Determines whether the application switches to production test (simplified UI) mode</param>
            <param name="showApplicationWindow">Determines whether or not the APx application window is visible when the project is locked</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.UnlockProject(System.String)">
            <summary>
            Unlocks the project with the given password.
            </summary>
            <param name="password">Project file password</param>
        </member>
        <member name="P:AudioPrecision.API.APx500.IsProjectLocked">
            <summary>
            Gets whether or not the project is locked to prevent an operator from changing settings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopySignalPathToClipboard(System.String)">
            <summary>
            Copies the specified signal path settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopySignalPathToClipboard(System.Int32)">
            <summary>
            Copies the specified signal path settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopyMeasurementToClipboard(System.String,System.String)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopyMeasurementToClipboard(System.Int32,System.String)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopyMeasurementToClipboard(System.String,System.Int32)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.CopyMeasurementToClipboard(System.Int32,System.Int32)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.PasteFromClipboard">
            <summary>
            Pastes any signal path or measurement settings which have been copied to the clipboard.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.BenchMode">
            <summary>
            Gets the settings for Bench Mode. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.DigitalInputStreamType">
            <summary>
            Gets the text description of the current digital input stream type.  If the input is not digital, this value is an empty string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.DigitalInputStreamMetadata">
            <summary>
            Gets the text description of the digital input bitstream including channel count and format (when applicable).  If the input is not digital, 
            or the stream type cannot be decoded, this value is an empty string.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.APx500.AppClosing">
            <summary>
            Event fired when the APx software is closing.  If an error occurred, the event handler function will include details about the
            error condition.
            See the <see cref="M:AudioPrecision.API.APEvents.AddAppClosingHandler(AudioPrecision.API.ApplicationClosingEventHandler)">APEvents.AddAppClosingHandler</see> function for information on subscribing to this event.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.SuspendProcessing">
            <summary>
            This function tells APx to stop all signal processing.  This method should be used before calling
            a long sequence of API function calls, such as adding new measurements or configuring projects.
            APx will not automatically resume processing, so the API programmer must 
            call <see cref="M:AudioPrecision.API.APx500.ResumeProcessing">ResumeProcessing</see> to make APx start acquisitions and signal
            processing.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.APx500.ResumeProcessing">
            <summary>
            This function tells APx to resume processing.  This function should be called after 
            <see cref="M:AudioPrecision.API.APx500.SuspendProcessing">SuspendProcessing</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.IsProcessingSuspended">
            <summary>
            Gets whether or not APx is currently running its signal processing subsystems.  
            The user can suspend processing by calling the <see cref="M:AudioPrecision.API.APx500.SuspendProcessing">SuspendProcessing</see> method.
            The user can resume processing by calling the <see cref="M:AudioPrecision.API.APx500.ResumeProcessing">ResumeProcessing</see> method.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.Variables">
            <summary>
            Gets the collection of user defined and system variables.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.APx1701">
            <summary>
            Get the settings for the APx1701
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalProcessing">
            <inheritdoc />
        </member>
        <member name="P:AudioPrecision.API.APx500.AuthorizationMessage">
            <inheritdoc/>
        </member>
        <member name="P:AudioPrecision.API.APx500.ExpirationMessages">
            <inheritdoc/>
        </member>
        <member name="M:AudioPrecision.API.APx500.ShowMeasurement(System.String,System.String)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.ShowMeasurement(System.Int32,System.Int32)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.ShowMeasurement(System.String,System.Int32)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.APx500.ShowMeasurement(System.Int32,System.String)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="P:AudioPrecision.API.APx500.OperatingMode">
            <summary>
            Gets or sets the mode of the APx software.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalPathSetup">
            <summary>
            Gets the currently active Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.APx500.ReferenceLevels">
            <summary>
            Gets the currently active Reference Levels Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.APx500.LevelAndGain">
            <summary>
            Gets the currently active Level and Gain Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ThdN">
            <summary>
            Gets the currently active THD+N Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.FrequencyResponse">
            <summary>
            Gets the currently active Frequency Response Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalToNoiseRatio">
            <summary>
            Gets the currently active Signal to Noise Ratio Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkOneChannelDriven">
            <summary>
            Gets the currently active Crosstalk, One Channel Driven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkOneChannelUndriven">
            <summary>
            Gets the currently active Crosstalk, One Channel Undriven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkCustom">
            <summary>
            Gets the currently active Crosstalk, Custom Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.InterchannelPhase">
            <summary>
            Gets the currently active Interchannel Phase Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DCLevel">
            <summary>
            Gets the currently active DC Level Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ContinuousSweep">
            <summary>
            Gets the currently active Continuous Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.BandpassFrequencySweep">
            <summary>
            Gets the currently active Bandpass Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SteppedFrequencySweep">
            <summary>
            Gets the currently active Stepped Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SteppedLevelSweep">
            <summary>
            Gets the currently active Stepped Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.BandpassLevelSweep">
            <summary>
            Gets the currently active Bandpass Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalAnalyzer">
            <summary>
            Gets the currently active Signal Analyzer Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.MeasurementRecorder">
            <summary>
            Gets the currently active Measurement Recorder Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.MetadataRecorder">
            <summary>
            Gets the currently active Metadata Recorder Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.MultitoneAnalyzer">
            <summary>
            Gets the currently active Multitone Analyzer Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.RegulatedFrequencySweep">
            <summary>
            Gets the currently active Regulated Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.MaxOutput">
            <summary>
            Gets the currently active Maximum Output Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.MaxOutputBurst">
            <summary>
            Gets the currently active Maximum Output (CEA-2006) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Cmrr">
            <summary>
            Gets the currently active CMRR Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CmrrIec">
            <summary>
            Gets the currently active CMRR IEC Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Noise">
            <summary>
            Gets the currently active Noise (RMS) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Frequency">
            <summary>
            Gets the currently active Frequency Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DigitalErrorRate">
            <summary>
            Gets the currently active Digital Error Rate Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DynamicRange">
            <summary>
            Gets the currently active Dynamic Range - AES17 Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.AcousticResponse">
            <summary>
            Gets the currently active Acoustic Response Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DimImd">
            <summary>
            Gets the currently active DIM Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Imd">
            <summary>
            Gets the currently active IMD Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ImdLevelSweep">
            <summary>
            Gets the currently active IMD Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DimLevelSweep">
            <summary>
            Gets the currently active DIM Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.BandpassLevel">
            <summary>
            Gets the currently active Bandpass Level Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.PassFail">
            <summary>
            Gets the currently active Pass/Fail Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Sinad">
            <summary>
            Gets the currently active SINAD Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.QpeakNoise">
            <summary>
            Gets the currently active Noise (Q-peak per ITU-R BS.468-4) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.NoiseRecorder">
            <summary>
            Gets the currently active Noise Recorder (RMS) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ImdFrequencySweep">
            <summary>
            Gets the currently active IMD Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkFrequencySweepOneChannelUndriven">
            <summary>
            Gets the currently active Crosstalk Sweep, One Channel Undriven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkFrequencySweepOneChannelDriven">
            <summary>
            Gets the currently active Crosstalk Sweep, One Channel Driven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CrosstalkFrequencySweepCustom">
            <summary>
            Gets the currently active Crosstalk Sweep, Custom Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Psr">
            <summary>
            Gets the currently active PSR Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.PsrSweep">
            <summary>
            Gets the currently active PSR Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Pesq">
            <summary>
            Gets the currently active PESQ Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.PesqAverage">
            <summary>
            Gets the currently active PESQ (Averaged) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.Polqa">
            <summary>
            Gets the currently active POLQA Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.PolqaAverage">
            <summary>
            Gets the currently active POLQA (Averaged) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.CompareEncodedBitstream">
            <summary>
            Gets the currently active Compare Encoded Bitstream to Reference Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DcLevelSweep">
            <summary>
            Gets the currently active DC Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.VddRamp">
            <summary>
            Gets the currently active Vdd Ramp Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ModulatedNoise">
            <summary>
            Gets the currently active Modulated Noise Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ImpedanceThieleSmall">
            <summary>
            Gets the currently active Impedance/Thiele-Small Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.LoudspeakerProductionTest">
            <summary>
            Gets the currently active Loudspeaker Production Test Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DcLevelDcx">
            <summary>
            Gets the currently active DC Level (DCX) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.ResistanceDcx">
            <summary>
            Gets the currently active Resistance (DCX) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.JitterFrequencySweep">
            <summary>
            Gets the currently active Jitter Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.JitterLevelSweep">
            <summary>
            Gets the currently active Jitter Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.LevelRatio">
            <summary>
            Gets the currently active Level Ratio Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SampleRate">
            <summary>
            Gets the currently active Input Sample Rate Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.TedsData">
            <summary>
            Gets the currently active TEDS Data Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.SignalAcquisition">
            <summary>
            Gets the currently active Signal Acquisition Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DutDelay">
            <summary>
            Gets the currently active DUT Delay Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.APx500.DelayCalibration">
            <summary>
            Gets the currently active Delay Calibration Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.APx500.DelayChirpCalibration">
            <summary>
            Gets the currently active Delay Chirp Calibration Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.IAnalogRanges">
            <summary>
            Represents the range values for the analog configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogRanges.AutoRange">
            <summary>
            Gets or set whether the analog input uses auto ranging.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogRanges.TrackFirstChannel">
            <summary>
            Gets or sets whether all channels have the same value.  If true,
            all channels have the same value as the first channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogRanges.Unit">
            <summary>
            Gets or sets the current unit for generator levels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogRanges.UnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogRanges.Count">
            <summary>
            Gets the number of channels in this collection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalogInputRanges">
            <summary>
            Represents the input range values for the analog input configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.SetValue(AudioPrecision.API.InputChannelIndex,System.Double)">
            <summary>
            Sets the input range to the specified value in the current input range unit.
            </summary>
            <param name="ch">The input channel</param>
            <param name="level">The desired level</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.SetValue(AudioPrecision.API.InputChannelIndex,System.String)">
            <summary>
            Sets the input range to the specified value.
            </summary>
            <param name="ch">The input channel</param>
            <param name="level">The desired level.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.GetValue(AudioPrecision.API.InputChannelIndex,System.String)">
            <summary>
            Gets the input range for the specified channel in the specified unit.
            </summary>
            <param name="ch">The input channel</param>
            <param name="unit">The desired unit</param>
            <returns>The input range</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.GetValue(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the input range for the specified channel in the current input range unit.
            </summary>
            <param name="ch">The input channel</param>
            <returns>The input range level</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.GetText(AudioPrecision.API.InputChannelIndex,System.String)">
            <summary>
            Gets the input range for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The input channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the input range and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputRanges.GetText(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the input range for the specified channel, in the current input range unit.
            </summary>
            <param name="ch">The input channel</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="T:AudioPrecision.API.IAnalogOutputRanges">
            <summary>
            Represents the output range values for the analog output configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.SetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the output range to the specified value in the current output range unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.SetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the output range to the specified value.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.GetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the output range for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The input range</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.GetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the output range for the specified channel in the current output range unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The input range level</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.GetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the output range for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the input range and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputRanges.GetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the output range for the specified channel, in the current input range unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="T:AudioPrecision.API.IApplication">
            <summary>
            Represents the APx500 software application. It gives access to 
            all functions of the software program including the user interface, making measurements, and getting results.
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ProjectFileName">
            <summary>
            Gets the name of the project file on disk, or empty if the file has not been saved.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.IsProjectModified">
            <summary>
            Gets whether or not the user had made changes to the project.  A modified project
            should be saved via the <see cref="M:AudioPrecision.API.IApplication.SaveProject(System.String)">SaveProject</see> command.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.OpenProject(System.String)">
            <summary>
            Opens a project from a file.
            </summary>
            <param name="fileName">The file name to open</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.SaveProject(System.String)">
            <summary>
            Saves the project file to disk.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ShowMeasurement(System.String,System.String)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ShowMeasurement(System.String,System.Int32)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ShowMeasurement(System.Int32,System.Int32)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ShowMeasurement(System.Int32,System.String)">
            <summary>
            Makes the specified measurement visible.
            </summary>
            <param name="signalPath">The signal path.</param>
            <param name="measurement">The measurement.</param>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Sequence">
            <summary>
            Gets the sequence of measurements displayed in the Navigator.  The sequence
            allows automatic execution of a series of measurements and collects all of the results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Visible">
            <summary>
            Gets or sets whether the application window is displayed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.Minimize">
            <summary>
            Minimizes the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.Maximize">
            <summary>
            Maximizes the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.Restore">
            <summary>
            Restores the application window to its non minimized or maximized state.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Width">
            <summary>
            Gets or sets the width of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Height">
            <summary>
            Gets or sets the height of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Left">
            <summary>
            Gets or sets the left screen position of the application window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Top">
            <summary>
            Gets or sets the top screen position of the application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.Exit">
            <summary>
            Exits the application.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.IsDemoMode">
            <summary>
            Gets whether or not the application is connected to APx500 series hardware.  
            False if connected, true if disconnected.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Version">
            <summary>
            Gets all of the version information about the software and any attached APx500 series
            hardware.  If the application is running in demo mode, the HW version information is
            not specified.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.InputSampleRate">
            <summary>
            Gets the measured input sample rate expressed in Hz.
            If the selected input connector is digital and the input is unlocked, the value will
            be double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.OutputSampleRate">
            <summary>
            Gets the measured output sample rate expressed in Hz.
            If the selected output connector is configured for an external clock and no clock is
            provided, the value will be double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AnalogInputRange">
            <summary>
            Gets the current voltage range of the analog input connectors or Null
            if the range information is not available.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalMonitorsEnabled">
            <summary>
            Gets or sets whether the input signal monitors are actively processing the
            input signal.  Setting this to false reduces the amount of CPU time taken
            by the APx500 software and increases system performance.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AuxControlOutputValue">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IAuxControlMonitor.AuxControlOutputValue">AuxControlMonitor.AuxControlOutputValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveSignalPathIndex">
            <summary>
            Gets the integer index of the active signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveSignalPathName">
            <summary>
            Gets the name of the active signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveMeasurementType">
            <summary>
            Gets the type of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveMeasurementIndex">
            <summary>
            Gets the integer index of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveMeasurementName">
            <summary>
            Gets the name of the active measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ActiveMeasurement">
            <summary>
            Gets the active measurement object.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AttachedProjectItems">
            <summary>
            Gets the collection of all files that have been attached to this project including
            waveform files and image files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AudibleSignalMonitor">
            <summary>
            Gets the settings for the Audible Signal Monitor which presents the audio input from the APx instrument
            on to the Windows audio sound card.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ScopeSignalMonitor">
            <summary>
            Gets the time domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.FftSpectrumSignalMonitor">
            <summary>
            Gets the frequency domain input monitor window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalMeters">
            <summary>
            Gets the input meters window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.StatusBitsMonitor">
            <summary>
            Gets the Status Bits monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.HdmiAudioInfoFramesMonitor">
            <summary>
            Gets the HDMI Audio InfoFrames monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AuxControlMonitor">
            <summary>
            Gets the Aux Control monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BluetoothMonitor">
            <summary>
            Gets the Bluetooth monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.PdmMonitor">
            <summary>
            Gets the PDM monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DigitalSerialMonitor">
            <summary>
            Gets the Digital Serial monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AnalogOutputMonitor">
            <summary>
            Gets the settings for the analog sine wave generator on the APx555 instrument.  This monitor is only
            enabled when the current output connector is not already analog.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.LastException">
            <summary>
            Gets the last error thrown by the APx application.  This property could return Null if no errors have occurred.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ClearLastException">
            <summary>
            Removes the last exception from the <see cref="P:AudioPrecision.API.IApplication.LastException">LastException</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BluetoothSettings">
            <summary>
            Gets the settings for the Bluetooth I/O module
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CancelOperation">
            <summary>
            This function is the equivalent of pressing the Cancel button on the progress dialog for the sequence or a 
            measurement.  This function must be called from a different thread than the thread which started the sequence
            or measurement, as those calls will block and not return until their operations have completed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ProjectSettings">
            <summary>
            Gets the settings which apply to all measurements within a project file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CreateNewProject">
            <summary>
            Creates a new project
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddSignalPath">
            <summary>
            Adds a new signal path to the project.
            </summary>
            <returns>The newly added signal path</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteSignalPath(System.Int32)">
            <summary>
            Deletes the specified signal path
            </summary>
            <param name="index">The 0-based index of the signal path</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteSignalPath(System.String)">
            <summary>
            Deletes the specified signal path.
            </summary>
            <param name="name">The name of the signal path. If more than one have the same name, the first is chosen.</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.String,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box or in the <see cref="M:AudioPrecision.API.IApplication.GetAllMeasurementNames"/> property</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.String,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box or in the <see cref="M:AudioPrecision.API.IApplication.GetAllMeasurementNames"/> property</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.Int32,System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.String,System.Int32,AudioPrecision.API.MeasurementType)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementType">Measurement Type</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.Int32,System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box or in the <see cref="M:AudioPrecision.API.IApplication.GetAllMeasurementNames"/> property</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddMeasurement(System.String,System.Int32,System.String)">
            <summary>
            Adds a new measurement of the specified type to the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="insertPosition">The 0-based index within the signal path where the new measurement will be inserted</param>
            <param name="measurementName">Name of the measurement as it appears in the Add Measurement dialog box or in the <see cref="M:AudioPrecision.API.IApplication.GetAllMeasurementNames"/> property</param>
            <returns>The newly added measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.GetAllMeasurementNames">
            <summary>
            Gets the names of all available measurement types which can be added to the APx project given the current
            hardware and software configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteMeasurement(System.Int32,System.Int32)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteMeasurement(System.Int32,System.String)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteMeasurement(System.String,System.Int32)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteMeasurement(System.String,System.String)">
            <summary>
            Deletes the specified measurement from the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddResult(System.Int32,System.Int32,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddResult(System.Int32,System.String,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddResult(System.String,System.Int32,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.AddResult(System.String,System.String,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type to the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.String,System.String,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.Int32,System.String,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.Int32,System.String,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultIndex">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteResult(System.String,System.Int32,System.String)">
            <summary>
            Deletes the specified result from the specified measurement in the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="resultName">Result</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CreateStateChangeCollection">
            <summary>
            For internal use only.
            </summary>
            <returns>A object which contains multiple changes which can be committed at once to improve performance.</returns>
        </member>
        <member name="M:AudioPrecision.API.IApplication.DeleteUncheckedItems(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Removes unused items from the project file.
            </summary>
            <param name="deleteSignalPaths">True to delete uncheck signal paths</param>
            <param name="deleteMeasurements">True to delete unchecked measurements in a signal path</param>
            <param name="deleteResults">True to delete unchecked results in a measurement</param>
            <param name="deleteSequenceSteps">True to delete unchecked sequence steps in a measurement</param>
        </member>
        <member name="P:AudioPrecision.API.IApplication.NavigatorVisible">
            <summary>
            Shows/Hides the navigator and its splitter.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.LockProject(System.String,System.Boolean,System.Boolean)">
            <summary>
            Locks the current project with the given password.
            </summary>
            <param name="password">Project file password</param>
            <param name="productionTest">Determines whether the application switches to production test (simplified UI) mode</param>
            <param name="showApplicationWindow">Determines whether or not the APx application window is visible when the project is locked</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.UnlockProject(System.String)">
            <summary>
            Unlocks the project with the given password.
            </summary>
            <param name="password">Project file password</param>
        </member>
        <member name="P:AudioPrecision.API.IApplication.IsProjectLocked">
            <summary>
            Gets whether or not the project is locked to prevent an operator from changing settings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopySignalPathToClipboard(System.String)">
            <summary>
            Copies the specified signal path settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopySignalPathToClipboard(System.Int32)">
            <summary>
            Copies the specified signal path settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopyMeasurementToClipboard(System.String,System.String)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopyMeasurementToClipboard(System.Int32,System.String)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopyMeasurementToClipboard(System.String,System.Int32)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.CopyMeasurementToClipboard(System.Int32,System.Int32)">
            <summary>
            Copies the specified measurement settings to the clipboard so it can be pasted.
            </summary>
            <param name="signalPath">The signal path</param>
            <param name="measurement">The measurement</param>
        </member>
        <member name="M:AudioPrecision.API.IApplication.PasteFromClipboard">
            <summary>
            Pastes any signal path or measurement settings which have been copied to the clipboard.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.OperatingMode">
            <summary>
            Gets or sets the mode of the APx software.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BenchMode">
            <summary>
            Gets the settings for Bench Mode. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DigitalInputStreamType">
            <summary>
            Gets the text description of the current digital input stream type.  If the input is not digital, this value is an empty string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DigitalInputStreamMetadata">
            <summary>
            Gets the text description of the digital input bitstream including channel count and format (when applicable).  If the input is not digital, 
            or the stream type cannot be decoded, this value is an empty string.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.IApplication.AppClosing">
            <summary>
            Event fired when the APx software is closing.  If an error occurred, the event handler function will include details about the
            error condition.
            See the <see cref="M:AudioPrecision.API.APEvents.AddAppClosingHandler(AudioPrecision.API.ApplicationClosingEventHandler)">APEvents.AddAppClosingHandler</see> function for information on subscribing to this event.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.SuspendProcessing">
            <summary>
            This function tells APx to stop all signal processing.  This method should be used before calling
            a long sequence of API function calls, such as adding new measurements or configuring projects.
            APx will not automatically resume processing, so the API programmer must 
            call <see cref="M:AudioPrecision.API.IApplication.ResumeProcessing">ResumeProcessing</see> to make APx start acquisitions and signal
            processing.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IApplication.ResumeProcessing">
            <summary>
            This function tells APx to resume processing.  This function should be called after 
            <see cref="M:AudioPrecision.API.IApplication.SuspendProcessing">SuspendProcessing</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.IsProcessingSuspended">
            <summary>
            Gets whether or not APx is currently running its signal processing subsystems.  
            The user can suspend processing by calling the <see cref="M:AudioPrecision.API.IApplication.SuspendProcessing">SuspendProcessing</see> method.
            The user can resume processing by calling the <see cref="M:AudioPrecision.API.IApplication.ResumeProcessing">ResumeProcessing</see> method.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Variables">
            <summary>
            Gets the collection of user defined and system variables.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.APx1701">
            <summary>
            Gets the status of the APx1701.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalProcessing">
            <summary>
            Gets access to signal processing functions. Some functions may require additional options to be installed and may not be usable in Demo Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AuthorizationMessage">
            <summary>
            Gets the status of the APx hardware authentication
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ExpirationMessages">
            <summary>
            Gets any messages about application features which are expiring within 30 days, or a blank string if 
            nothing is expiring soon.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalPathSetup">
            <summary>
            Gets the currently active Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ReferenceLevels">
            <summary>
            Gets the currently active Reference Levels Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.IApplication.LevelAndGain">
            <summary>
            Gets the currently active Level and Gain Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ThdN">
            <summary>
            Gets the currently active THD+N Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.FrequencyResponse">
            <summary>
            Gets the currently active Frequency Response Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalToNoiseRatio">
            <summary>
            Gets the currently active Signal to Noise Ratio Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkOneChannelDriven">
            <summary>
            Gets the currently active Crosstalk, One Channel Driven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkOneChannelUndriven">
            <summary>
            Gets the currently active Crosstalk, One Channel Undriven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkCustom">
            <summary>
            Gets the currently active Crosstalk, Custom Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.InterchannelPhase">
            <summary>
            Gets the currently active Interchannel Phase Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DCLevel">
            <summary>
            Gets the currently active DC Level Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ContinuousSweep">
            <summary>
            Gets the currently active Continuous Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BandpassFrequencySweep">
            <summary>
            Gets the currently active Bandpass Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SteppedFrequencySweep">
            <summary>
            Gets the currently active Stepped Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SteppedLevelSweep">
            <summary>
            Gets the currently active Stepped Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BandpassLevelSweep">
            <summary>
            Gets the currently active Bandpass Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalAnalyzer">
            <summary>
            Gets the currently active Signal Analyzer Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.MeasurementRecorder">
            <summary>
            Gets the currently active Measurement Recorder Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.MetadataRecorder">
            <summary>
            Gets the currently active Metadata Recorder Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.MultitoneAnalyzer">
            <summary>
            Gets the currently active Multitone Analyzer Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.RegulatedFrequencySweep">
            <summary>
            Gets the currently active Regulated Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.MaxOutput">
            <summary>
            Gets the currently active Maximum Output Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.MaxOutputBurst">
            <summary>
            Gets the currently active Maximum Output (CEA-2006) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Cmrr">
            <summary>
            Gets the currently active CMRR Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CmrrIec">
            <summary>
            Gets the currently active CMRR IEC Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Noise">
            <summary>
            Gets the currently active Noise (RMS) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Frequency">
            <summary>
            Gets the currently active Frequency Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DigitalErrorRate">
            <summary>
            Gets the currently active Digital Error Rate Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DynamicRange">
            <summary>
            Gets the currently active Dynamic Range - AES17 Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.AcousticResponse">
            <summary>
            Gets the currently active Acoustic Response Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DimImd">
            <summary>
            Gets the currently active DIM Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Imd">
            <summary>
            Gets the currently active IMD Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ImdLevelSweep">
            <summary>
            Gets the currently active IMD Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DimLevelSweep">
            <summary>
            Gets the currently active DIM Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.BandpassLevel">
            <summary>
            Gets the currently active Bandpass Level Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.PassFail">
            <summary>
            Gets the currently active Pass/Fail Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Sinad">
            <summary>
            Gets the currently active SINAD Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.QpeakNoise">
            <summary>
            Gets the currently active Noise (Q-peak per ITU-R BS.468-4) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.NoiseRecorder">
            <summary>
            Gets the currently active Noise Recorder (RMS) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ImdFrequencySweep">
            <summary>
            Gets the currently active IMD Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkFrequencySweepOneChannelUndriven">
            <summary>
            Gets the currently active Crosstalk Sweep, One Channel Undriven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkFrequencySweepOneChannelDriven">
            <summary>
            Gets the currently active Crosstalk Sweep, One Channel Driven Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CrosstalkFrequencySweepCustom">
            <summary>
            Gets the currently active Crosstalk Sweep, Custom Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Psr">
            <summary>
            Gets the currently active PSR Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.PsrSweep">
            <summary>
            Gets the currently active PSR Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Pesq">
            <summary>
            Gets the currently active PESQ Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.PesqAverage">
            <summary>
            Gets the currently active PESQ (Averaged) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.Polqa">
            <summary>
            Gets the currently active POLQA Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.PolqaAverage">
            <summary>
            Gets the currently active POLQA (Averaged) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.CompareEncodedBitstream">
            <summary>
            Gets the currently active Compare Encoded Bitstream to Reference Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DcLevelSweep">
            <summary>
            Gets the currently active DC Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.VddRamp">
            <summary>
            Gets the currently active Vdd Ramp Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ModulatedNoise">
            <summary>
            Gets the currently active Modulated Noise Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ImpedanceThieleSmall">
            <summary>
            Gets the currently active Impedance/Thiele-Small Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.LoudspeakerProductionTest">
            <summary>
            Gets the currently active Loudspeaker Production Test Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DcLevelDcx">
            <summary>
            Gets the currently active DC Level (DCX) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.ResistanceDcx">
            <summary>
            Gets the currently active Resistance (DCX) Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.JitterFrequencySweep">
            <summary>
            Gets the currently active Jitter Frequency Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.JitterLevelSweep">
            <summary>
            Gets the currently active Jitter Level Sweep Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.LevelRatio">
            <summary>
            Gets the currently active Level Ratio Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SampleRate">
            <summary>
            Gets the currently active Input Sample Rate Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.TedsData">
            <summary>
            Gets the currently active TEDS Data Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.SignalAcquisition">
            <summary>
            Gets the currently active Signal Acquisition Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DutDelay">
            <summary>
            Gets the currently active DUT Delay Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DelayCalibration">
            <summary>
            Gets the currently active Delay Calibration Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.IApplication.DelayChirpCalibration">
            <summary>
            Gets the currently active Delay Chirp Calibration Measurement.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">
            Throws an APException with an Error Code of APError.ElementNotActive if this is not the active measurement.
            </exception>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.ApplicationClosingEventArgs">
            <summary>
            Event args for the <see cref="E:AudioPrecision.API.IApplication.AppClosing">APx.AppClosing</see> event.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ApplicationClosingEventArgs.#ctor(System.String)">
            <summary>
            Constructor for the ApplicationClosing event arguments
            </summary>
            <param name="errorMessage">Desired error message</param>
        </member>
        <member name="F:AudioPrecision.API.ApplicationClosingEventArgs.ErrorMessage">
            <summary>
            The error message reported by the application, or an empty string if no error occurred.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ApplicationClosingEventHandler">
            <summary>
            Event handler declaration called when the APx application is closing.  If an error occurred, the eventArgs parameter will 
            describe the error.  If the application is shut down due to the user closing, or a program closing the application
            the errorMessage property will be an empty string.
            </summary>
            <param name="sender">The APx500 applicatoin object</param>
            <param name="eventArgs">The <see cref="T:AudioPrecision.API.ApplicationClosingEventArgs"/>ApplicationClosingEventArgs parameter describing the error conditions, if any</param>
        </member>
        <member name="T:AudioPrecision.API.IStateChange">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStateChangeCollection">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IStateChangeCollection.AddChange(AudioPrecision.API.IStateChange)">
            <summary>
            Adds a change to the collection
            </summary>
            <param name="change">Change to add</param>
        </member>
        <member name="M:AudioPrecision.API.IStateChangeCollection.CommitChanges">
            <summary>
            Commits all pending changes and resets the collection to empty.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProjectItemCollection">
            <summary>
            Represents the collection of files which have been attached to an APx500 project file.
            Examples include waveform files loaded into the waveform generator, and image files
            added to sequence prompts or reports.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItemCollection.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">The index of the item</param>
            <returns>A project item</returns>
        </member>
        <member name="P:AudioPrecision.API.IProjectItemCollection.Item(System.String)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">The index of the item</param>
            <returns>A project item</returns>
        </member>
        <member name="M:AudioPrecision.API.IProjectItemCollection.DeleteAllUnusedItems">
            <summary>
            Deletes all files which have been attached to this project, but which are no longer
            referenced by any measurement or report.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ProjectItemType">
            <summary>
            Represents the types of files which can be loaded into an APx500 project file.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.Image">
            <summary>
            Image files such as .JPG or .PNG
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.Waveform">
            <summary>
            Waveform files such as .WAV, .AC3, .DTS, etc.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.CustomReportLayout">
            <summary>
            Custom report layout files (Microsoft Word .docx)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.MultitoneSignalDefinition">
            <summary>
            XLS or CSV file which describes a multitone waveform
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.FrequencySweepDefinition">
            <summary>
            XLS or CSV file which describes a stepped frequency sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.OutputEqDefinition">
            <summary>
            XLS or CSV file which describes an equalization curve for the output signal from the APx generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.AmplifierCorrectionCurve">
            <summary>
            XLS or CSV file which describes the gain and phase characteristics of an amplifier used for testing
            loudspeakers.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.ExportDataSpecification">
            <summary>
            Specification for X,Y data export
            </summary>
        </member>
        <member name="F:AudioPrecision.API.ProjectItemType.LimitOffsetCurve">
            <summary>
            XLS or CSV file which describes a curve for applying an offset to imported limit data.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProjectItem">
            <summary>
            Represents a file which has been attached to an APx500 project file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItem.Name">
            <summary>
            Gets the name of the attached file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItem.Type">
            <summary>
            Gets the type of the attached file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItem.SizeInBytes">
            <summary>
            Gets the size of the attached item in bytes
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectItem.IsUsedInProject">
            <summary>
            Gets whether or not this file is referenced in this project.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProjectItem.Export(System.String)">
            <summary>
            Makes a copy of the attached file and saves it to a disk file.
            </summary>
            <param name="fileName">The name of the file to save the attachment to</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectItem.Replace(System.String)">
            <summary>
            Replaces the existing file with another.
            </summary>
            <param name="fileName">The name of the file that will replace this one.</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectItem.Delete">
            <summary>
            Removes the attached item from the project.  If this item is in use, the
            usage will be updated and reverted to a default selection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProjectSettings">
            <summary>
            Represents the settings which apply to all measurements in a project file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectSettings.SaveGraphData">
            <summary>
            Gets or sets whether or not data measured in X,Y graphs is saved in the project file so it appears
            the next time the project file is loaded.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectSettings.ShowMeasuredTime">
            <summary>
            Gets or sets whether or not the time the data was measured appears on graphs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectSettings.TraceStyleCycleCount">
            <summary>
            Gets the number of trace style cycles in the project.  Each cycle has 16 entries which apply to each measured channel.
            When appended or imported data is added, the colors from the next cycle are used for the new data.  If there are fewer
            cycles than the number of data sets, the code wraps back to the first cycle.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.GetTraceColor(System.Int32,System.Int32)">
            <summary>
            Gets the default trace color for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <returns>A System.Drawing.Color object</returns>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.SetTraceColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets the default trace color for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <param name="color">A System.Drawing.Color object.  Note: setting the Alpha channel is not supported</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.GetLineStyle(System.Int32,System.Int32)">
            <summary>
            Gets the default trace line style for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <returns>A System.Drawing.DashStyle object</returns>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.SetLineStyle(System.Int32,System.Int32,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Sets the default trace line style for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <param name="lineStyle">A System.Drawing.DashStyle object</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.GetLineWidth(System.Int32,System.Int32)">
            <summary>
            Gets the default trace line width for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <returns>An integer between 1 and 5</returns>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.SetLineWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the default trace line width for a specific cycle and index.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle</param>
            <param name="styleIndex">The 0-based index of the style</param>
            <param name="lineWidth">A number between 1 and 5</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.ResetStyles(System.Int32)">
            <summary>
            Resets the styles for the specified cycle back to the defaults.
            </summary>
            <param name="cycleIndex">The 0-based index of the cycle.</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.ExportTraceCycleStyles(System.String)">
            <summary>
            Exports the current color and line style settings from the Project | Properties dialog box.
            </summary>
            <param name="fileName">The full path to the file</param>
        </member>
        <member name="M:AudioPrecision.API.IProjectSettings.ImportTraceCycleStyles(System.String)">
            <summary>
            Imports a set of color and lines styles into the Projecet | Properties settings.
            </summary>
            <param name="fileName">The full path to the file</param>
        </member>
        <member name="P:AudioPrecision.API.IProjectSettings.GlobalVmax">
            <summary>
            Get the GlobalVmax 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProjectSettings.TransducerCurrentLimitFault">
            <summary>
            Set or get the action to take upon a current limit fault in the APx1701.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.VmaxConnectorType">
            <summary>
            Specifies the connector type to which the global Vmax setting is applied
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.AnalogUnbalanced">
            <summary>
            Analog Unbalanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.AnalogBalanced">
            <summary>
            Analog Balanced
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.Speaker">
            <summary>
            Speaker
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.TransducerLevel">
            <summary>
            Transducer Test Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.TransducerPositiveOffset">
            <summary>
            Transducer Test Interface Positive Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.VmaxConnectorType.TransducerNegativeOffset">
            <summary>
            Transducer Test Interface Negative Offset
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGlobalVMaxSettings">
            <summary>
            Represents the settings for limiting the maximum analog output levels of the system.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGlobalVMaxSettings.EnableVmax(AudioPrecision.API.VmaxConnectorType,System.Boolean,System.Boolean)">
            <summary>
            Enables or disables the Vmax setting for the specified connector.
            </summary>
            <param name="connectorType">Analog connector type</param>
            <param name="enabled">True to enable the Vmax parameter, otherwise False</param>
            <param name="clipValues">If True, causes APx to change all generator level and sweep table values which are out of the specified Vmax range</param>
        </member>
        <member name="M:AudioPrecision.API.IGlobalVMaxSettings.IsVmaxEnabled(AudioPrecision.API.VmaxConnectorType)">
            <summary>
            Gets whether or not the Vmax setting is applied to the specified connector.
            </summary>
            <param name="connectorType">Analog connector type</param>
            <returns>True if enabled, otherwise False</returns>
        </member>
        <member name="M:AudioPrecision.API.IGlobalVMaxSettings.SetVmax(AudioPrecision.API.VmaxConnectorType,System.Double,System.String,System.Boolean)">
            <summary>
            Sets the Vmax value for the specified connector to the specified level. 
            APx can automatically clip generator and sweep table values to the new Vmax
            level if desired.
            </summary>
            <param name="connectorType">Analog connector type</param>
            <param name="level">The desired level in the specified unit</param>
            <param name="unit">A blank string for the default unit, otherwise "Vrms", "dBV", or "dBu"</param>
            <param name="clipValues">If True, causes APx to change all generator level and sweep table values which are out of the specified Vmax range</param>
        </member>
        <member name="M:AudioPrecision.API.IGlobalVMaxSettings.GetVmax(AudioPrecision.API.VmaxConnectorType,System.String)">
            <summary>
            Gets the Vmax value for the specified connector in the specified unit.
            </summary>
            <param name="connectorType">Analog connector type</param>
            <param name="unit">A blank string for the default unit, otherwise "Vrms", "dBV", or "dBu"</param>
            <returns>The level value</returns>
        </member>
        <member name="T:AudioPrecision.API.Constants">
            <summary>
            Constant values used in the APx software.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Constants.MinLineWidth">
            <summary>
            The minimum trace style line width
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Constants.MaxLineWidth">
            <summary>
            The maximum trace style line width
            </summary>
        </member>
        <member name="F:AudioPrecision.API.Constants.TraceStyleCycleLength">
            <summary>
            The number of styles in a trace style cycle
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IVariables">
            <summary>
            Represents the collection of user defined and system defined variables
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetSystemFolder(System.Environment.SpecialFolder)">
            <summary>
            Gets the Windows folder path for the specified folder value.
            </summary>
            <param name="folder">A enumerated value provided by the .NET framework for known system folders</param>
            <returns>A path string</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetEnvironmentVariable(System.String)">
            <summary>
            Gets the value for the specified environment variable name.
            </summary>
            <param name="varName">Environment variable name, such as "PATH"</param>
            <returns>The variable value or a blank string</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetEnvironmentVariables">
            <summary>
            Gets the list of environmennt variables in the APx process environment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetUserDefinedVariable(System.String)">
            <summary>
            Gets the value of a user defined variable.
            </summary>
            <param name="varName">The variable name</param>
            <returns>The value or a blank string if the variable does not exist</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.SetUserDefinedVariable(System.String,System.String)">
            <summary>
            Sets the value of a user defined variable. The variable is created if it does not already exist.
            </summary>
            <param name="varName">Name of the variable</param>
            <param name="value">The desired value.</param>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetUserDefinedVariables">
            <summary>
            Gets the list of user defined variables in the project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.DeleteUserDefinedVariable(System.String)">
            <summary>
            Deletes the specified variable name from the project.
            </summary>
            <param name="varName">Variable name</param>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetAPxSystemVariables">
            <summary>
            Gets a list of variables provided by the APx software.
            </summary>
            <returns>Variable names describing APx parameters and conditions</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetAPxSystemVariable(System.String)">
            <summary>
            Gets the value of an APx system variable.
            </summary>
            <param name="varName">Variable name</param>
            <returns>Variable value</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.ExpandVariableString(System.String)">
            <summary>
            Expands one or more variables in an input string. For example "$(Path)\test.csv" where
            $(Path)="c:\temp" would return: c:\temp\test.csv
            </summary>
            <param name="input">An input string containing one or more variables</param>
            <returns>A string where the variables have been replaced by their values</returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetAPxMeasurementVariables">
            <summary>
            Gets a list of variables provided by APx measurements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IVariables.GetAPxMeasurementVariable(System.String)">
            <summary>
            Gets the value of an APx measurement variable.
            </summary>
            <param name="varName">Variable name</param>
            <returns>Variable value</returns>
        </member>
        <member name="T:AudioPrecision.API.IAsioSettings">
            <summary>
            Represents the settings for ASIO interface
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioSettings.Devices">
            <summary>
            Gets an array of device names that are currently connected and powered on.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAsioSettings.GetSelectedDevice">
            <summary>
            Gets the selected ASIO Device.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioSettings.SetSelectedDevice(System.String)">
            <summary>
            Sets the active ASIO device.
            </summary>
            <param name="deviceName">Name of ASIO device to select</param>
        </member>
        <member name="P:AudioPrecision.API.IAsioSettings.IsConnected">
            <summary>
            Returns true if the Asio Device is connected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioSettings.Connect">
            <summary>
            Connects a device that is not currently connected.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAsioSettings.Reset">
            <summary>
            Resets the connected ASIO device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioSettings.DitherOutput">
            <summary>
            Gets or sets whether the digital signal is dithered.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAsioDevice">
            <summary>
            Represents the settings for an ASIO device and how it is mapped for usage with an APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDevice.DeviceInfo">
            <summary>
            ASIO device associated with this profile
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDevice.BufferSize">
            <summary>
            Gets or sets the Buffersize of the ASIO device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDevice.SampleRate">
            <summary>
            Gets or sets the SampleRate in Hertz.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.CanSampleRate(System.Double)">
            <summary>
            Returns true if the device supports the samplerate.
            </summary>
            <param name="sampleRate">Desired sample rate</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.SetClockSource(System.String)">
            <summary>
            Sets the current clock source.  For available clock sources see IAsioDeviceInfo.
            </summary>  
            <param name="name">Desired clock source</param>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.GetClockSource">
            <summary>
            Gets the current clock source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.AssignInputChannel(System.Int32,System.Int32)">
            <summary>
            Maps an ASIO input channel to an APx input channel.
            To get the ASIO input channels supported by the Device see IAsioDeviceInfo.InputChannels
            </summary>
            <param name="asioChannel">ASIO channel to assign</param>
            <param name="apxChannel">APx channel to assign to</param>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.GetInputChannelAssignment(System.Int32)">
            <summary>
            Gets ASIO ChannelInfo for the mapped APx channel
            </summary>
            <param name="apxChannel">Desired ASIO channel</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.AssignOutputChannel(System.Int32,System.Int32)">
            <summary>
            Maps an ASIO output channel to an APx output channel.
            To get the ASIO output channels supported by the Device see IAsioDeviceInfo.OutputChannels
            </summary>
            <param name="apxChannel">APx channel to use</param>
            <param name="asioChannel">ASIO channel to assign to</param>
        </member>
        <member name="M:AudioPrecision.API.IAsioDevice.GetOutputChannelAssignment(System.Int32)">
            <summary>
            Gets ASIO ChannelInfo for the mapped APx channel
            </summary>
            <param name="apxChannel">Desired ASIO channel</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IAsioDevice.AutoMap">
            <summary>
            Gets or sets whether to auto map asio channels to apx channels.  
            Up to the first 16 channels will be mapped to APx channels on both input and output channel mappings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAsioDeviceInfo">
            <summary>
            Represents the settings reported by an ASIO device's driver.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.ClockSources">
            <summary>
            Clock sources for this device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.Name">
            <summary>
            Name of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.Version">
            <summary>
            Version of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.Granularity">
            <summary>
            Granularity of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.InputLatency">
            <summary>
            Input latency of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.OutputLatency">
            <summary>
            Output latency of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.MaxBufferSize">
            <summary>
            Maximum buffer size for the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.MinBufferSize">
            <summary>
            Minimum buffer size for the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.PreferredBufferSize">
            <summary>
            Preferred buffers size of the device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.InputChannels">
            <summary>
            Array of input channels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAsioDeviceInfo.OutputChannels">
            <summary>
            Array of output channels
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IClockSourceInfo">
            <summary>
            Represents the settings for the clock source of an ASIO device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSourceInfo.Name">
            <summary>
            Name of the clock source
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSourceInfo.Index">
            <summary>
            Index number for the clock source
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSourceInfo.AssociatedChannel">
            <summary>
            Channel associated with this clock source
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSourceInfo.AssociatedGroup">
            <summary>
            Group associated with this clock source
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IChannelInfo">
            <summary>
            Reperesents the settings for an ASIO device channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IChannelInfo.Name">
            <summary>
            Name of the channel
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IChannelInfo.Channel">
            <summary>
            Channel number
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IChannelInfo.Group">
            <summary>
            Channel group
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IChannelInfo.IsInput">
            <summary>
            True if this channel is an input
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IChannelInfo.SampleType">
            <summary>
            Sample type
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAudibleSignalMonitor">
            <summary>
            Represents the settings for the Audible Signal Monitor.  
            The Audible Signal Monitor presents the audio from the active APx instrument input connector
            on the Windows audio device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAudibleSignalMonitor.Enabled">
            <summary>
            Gets or sets whether audio is stream to the Windows audio driver.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAudibleSignalMonitor.Gain">
            <summary>
            Gets or sets the gain of the audible signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAudibleSignalMonitor.SignalType">
            <summary>
            Gets or sets which part of the audio signal is presented to the Window audio driver.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAudibleSignalMonitor.GetChannelMix(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not the specified input channel's audio is routed to the left and/or right
            channel of the Windows audio driver.
            </summary>
            <param name="ch">The specified channel</param>
            <returns>The mixer setting</returns>
        </member>
        <member name="M:AudioPrecision.API.IAudibleSignalMonitor.GetChannelMix(System.Int32)">
            <summary>
            Gets whether or not the specified input channel's audio is routed to the left and/or right
            channel of the Windows audio driver.
            </summary>
            <param name="ch">The specified channel</param>
            <returns>The mixer setting</returns>
        </member>
        <member name="M:AudioPrecision.API.IAudibleSignalMonitor.SetChannelMix(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.AudibleMonitorChannelMix)">
            <summary>
            Sets whether or not the specified input channel's audio is routed to the left and/or right 
            channel of the Windows audio driver.
            </summary>
            <param name="ch">The specified channel</param>
            <param name="mapping">The mixer setting</param>
        </member>
        <member name="M:AudioPrecision.API.IAudibleSignalMonitor.SetChannelMix(System.Int32,AudioPrecision.API.AudibleMonitorChannelMix)">
            <summary>
            Sets whether or not the specified input channel's audio is routed to the left and/or right 
            channel of the Windows audio driver.
            </summary>
            <param name="ch">The specified channel</param>
            <param name="mapping">The mixer setting</param>
        </member>
        <member name="P:AudioPrecision.API.IAudibleSignalMonitor.ThdNResidualChannel">
            <summary>
            This property is obsolete.  Use the <see cref="M:AudioPrecision.API.IAudibleSignalMonitor.SetChannelMix(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.AudibleMonitorChannelMix)">SetChannelMix</see> function instead.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AuxControlState">
            <summary>
            Defines the possible output states of an aux control bit.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlState.DontCare">
            <summary>
            Don't Care.  The state of this bit is ignored on input, and not set on output
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlState.On">
            <summary>
            The bit is high
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlState.Off">
            <summary>
            The bit is low
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AuxControlBit">
            <summary>
            Defines the bit of interest for the aux control input or output word.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit1">
            <summary>
            Bit1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit2">
            <summary>
            Bit2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit3">
            <summary>
            Bit3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit4">
            <summary>
            Bit4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit5">
            <summary>
            Bit5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit6">
            <summary>
            Bit6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit7">
            <summary>
            Bit7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AuxControlBit.Bit8">
            <summary>
            Bit8
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAuxControl">
            <summary>
            Represents the settings for aux control input or output.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAuxControl.GetState(AudioPrecision.API.AuxControlBit)">
            <summary>
            Gets the state of the specified aux control bit.
            </summary>
            <param name="bit">The bit of interest for the aux control word</param>
            <returns>The state</returns>
        </member>
        <member name="M:AudioPrecision.API.IAuxControl.GetState(System.Int32)">
            <summary>
            Gets the state of the specified aux control bit.
            </summary>
            <param name="bit">The bit of interest for the aux control word</param>
            <returns>The state</returns>
        </member>
        <member name="M:AudioPrecision.API.IAuxControl.SetState(AudioPrecision.API.AuxControlBit,AudioPrecision.API.AuxControlState)">
            <summary>
            Sets the state of the specified aux control bit.
            </summary>
            <param name="bit">The bit of interest for the aux control word</param>
            <param name="state">The desired state</param>
        </member>
        <member name="M:AudioPrecision.API.IAuxControl.SetState(System.Int32,AudioPrecision.API.AuxControlState)">
            <summary>
            Sets the state of the specified aux control bit.
            </summary>
            <param name="bit">The bit of interest for the aux control word</param>
            <param name="state">The desired state</param>
        </member>
        <member name="P:AudioPrecision.API.IAuxControl.ByteValue">
            <summary>
            Gets or sets the all bit values.  If one or more bits is AuxControlState.DontCare, the returned value will be 0.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAuxControl.Reset">
            <summary>
            Resets all of the bits back to their default values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BluetoothModuleVersion">
            <summary>
            Bluetooth Version
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothModuleVersion.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothModuleVersion.BluetoothModuleFirstGeneration">
            <summary>
            First Generation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothModuleVersion.BluetoothModuleFirstGenerationWithWidebandSpeech">
            <summary>
            First Generation with Wideband Speech
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BluetoothModuleVersion.BluetoothModuleSecondGeneration">
            <summary>
            Second Generation
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothSettings">
            <summary>
            Represents the settings for the Bluetooth interface module.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.ProfileSet">
            <summary>
            Gets or sets the active Bluetooth profiles for the APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AutoClassOfDevice">
            <summary>
            Gets or sets whether the APx device class is automatically computed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.CustomClassOfDevice">
            <summary>
            Gets or sets a user specified device class when the <see cref="P:AudioPrecision.API.IBluetoothSettings.AutoClassOfDevice">AutoClassOfDevice</see>
            value is set to False.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.PreferredA2dpSampleRate">
            <summary>
            Gets or sets the preferred A2DP sample rate.  If the preferred rate is not supported by the 
            device under test, a different sample rate may be negotiated. This property only applies to SBC and aptX codecs.
            Use <see cref="P:AudioPrecision.API.IBluetoothSettings.CodecSettings"/> to access settings for each specific codec type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.SbcChannelMode">
            <summary>
            Gets or sets the channel mode setting for the SBC encoder used in the A2DP profile.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.A2dpCodec">
            <summary>
            Gets or sets the codec used to transmit audio over the A2DP profile.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AutoAnswerHfpHspCalls">
            <summary>
            Gets or sets whether APx automatically answers incoming phone calls.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AcceptA2dpConnections">
            <summary>
            Gets or sets whether APx allows a Bluetooth device to connect to this instrument with the A2DP profile.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AcceptAvrcpConnections">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IBluetoothAvrcpSettingsBase.Enabled">AvrpTarget.Enabled</see> or
            Use <see cref="P:AudioPrecision.API.IBluetoothAvrcpSettingsBase.Enabled">AvrpController.Enabled</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AcceptHfpHspConnections">
            <summary>
            Gets or sets whether APx allows a Bluetooth device to connect to this instrument with the HFP or HSP profile.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.InquiryTimeout">
            <summary>
            Length of the inquiry in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.DiscoverAndConnectMode">
            <summary>
            Gets or sets whether or not APx allows devices to discover, pair, and connect to this instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.FriendlyName">
            <summary>
            Gets or sets the name APx reports to other Bluetooth devices during an inquiry.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.DeviceAddress">
            <summary>
            Gets the Bluetooth address of this APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.SourceDeviceAddress">
            <summary>
            Gets the Bluetooth address of this APx instrument when the Bluetooth device is 
            configured as an A2DP Source/HFP/HSP Audio Gateway. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.SinkDeviceAddress">
            <summary>
            Gets the Bluetooth address of this APx instrument when the Bluetooth device is 
            configured as an A2DP Sink/HFP/HSP Hands Free device. 
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ClearDeviceList">
            <summary>
            Removes all devices from the APx device list.  If any device is connected, it will be disconnected before the
            list is cleared.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ClearDeviceList(AudioPrecision.API.BluetoothDeviceListType)">
            <summary>
            Removes devices from the APx device list. All devices, paired devices, or unpaired devices can be removed. If paired devices are 
            removed, and any device is connected, it will be disconnected before the list is cleared.
            </summary>
            <param name="listType">Which devices to remove</param>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.DeviceList">
            <summary>
            Gets the collection of Bluetooth devices that this APx instrument currently knows about.  Some devices in the
            list may be paired, while others may have been discovered during the last inquiry.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ScanForDevices(System.Int32)">
            <summary>
            Starts an inquiry to scan for nearby Bluetooth devices.
            </summary>
            <param name="durationInSeconds">Duration of the scan, in seconds.  Maximum is 48.</param>
            <returns>A collection of nearby Bluetooth devices.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.PairWithDevice(System.String)">
            <summary>
            Attempts to pair with a Bluetooth device by address using Secure Simple Pairing (SSP).
            </summary>
            <param name="addr">The address of the device</param>
            <returns>True if successfull. Otherwise False.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.PairWithDevice(System.String,System.String)">
            <summary>
            Attempts to pair with a Bluetooth device by address using the specified PIN.
            </summary>
            <param name="addr">The address of the device</param>
            <param name="pin">The PIN required by the remote device.  Often 0000</param>
            <returns>True if successfull. Otherwise False.</returns>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.SspMode">
            <summary>
            Gets or sets the authentication method used for pairing Bluetooth devices.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.UnpairDevice(System.String)">
            <summary>
            Remove pairing information for the specified device.  The device remains in the APx device list.
            </summary>
            <param name="addr">The address of the device</param>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.IsConnected">
            <summary>
            Returns True if a Bluetooth device is currently connected to this APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.ConnectedDevice">
            <summary>
            Gets the connected Bluetooth device.  If no device is connected, the <see cref="P:AudioPrecision.API.IBluetoothDevice.IsEmpty">IsEmpty</see> 
            property will return True.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.IsProfileConnected(AudioPrecision.API.BluetoothProfile)">
            <summary>
            Gets whether or not the specified profile is currently connected.  APx can connect multiple profiles at the same time.
            </summary>
            <param name="profile">The specified profile, i.e. A2DP</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectAll(System.String)">
            <summary>
            Attempts to connect to the device specified by the address parameter using all supported Bluetooth profiles.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectA2dp(System.String)">
            <summary>
            Attempts to connect to the device specified by the address parameter using the A2DP profile.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectA2dp(System.String,AudioPrecision.API.BluetoothA2dpCodec,AudioPrecision.API.BluetoothA2dpSampleRate,AudioPrecision.API.BluetoothSbcChannelMode)">
            <summary>
            Attempts to connect to the device specified by the address parameter using the A2DP profile.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
            <param name="codec">The requested codec.  SBC or APT-X.</param>
            <param name="sampleRate">The requested sample rate.</param>
            <param name="channelMode">The requtested channel mode for the SBC codec.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectHfp(System.String)">
            <summary>
            Attempts to connect to the device specified by the address parameter using the HFP profile.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectHsp(System.String)">
            <summary>
            Attempts to connect to the device specified by the address parameter using the HSP profile.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.ConnectAvrcp(System.String)">
            <summary>
            Attempts to connect to the device specified by the address parameter using the AVRCP profile.  This function 
            throws an exception if the connect fails.
            </summary>
            <param name="addr">The address of the device.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.Disconnect">
            <summary>
            Disconnects the connected Bluetooth device.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.SendAvrcpCommand(AudioPrecision.API.BluetoothAvrcpCommand)">
            <summary>
            Sends an AVRCP command to the connected device.  This function is only applicable when APx is configured as an 
            A2DP Sink device.
            </summary>
            <param name="command">The AVRCP command.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.SendATCommand(System.String)">
            <summary>
            Sends an AT command to the connected device.  
            </summary>
            <param name="command">AT command as specified in Bluetooth specificaitons</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.SendATCommand(System.String,AudioPrecision.API.BluetoothAtCommandWait)">
            <summary>
            Sends an AT command to the connected device.  
            </summary>
            <param name="command">AT command as specified in Bluetooth specificaitons</param>
            <param name="waitForResponse">Determines whether or not APx will wait for an OK or ERROR response.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.StartA2dpStreaming">
            <summary>
            Starts streaming audio over the A2DP profile.  This function is only applicable when APx is configured as an
            A2DP Source device.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.StopA2dpStreaming">
            <summary>
            Stops streaming audio over the A2DP profile.  This function is only applicable when APx is configured as an
            A2DP Source device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.IsA2dpStreamingStarted">
            <summary>
            Gets whether or not audio is streaming over the A2DP profile.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.HfpAudioGatewayCommand(AudioPrecision.API.BluetoothHfpAgCommand)">
            <summary>
            Sends a command to APx to perform phone calling functions.  This function is only applicable when APx is
            configured as an HFP Audio Gateway device.
            </summary>
            <param name="command">The phone calling command.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.HspAudioGatewayCommand(AudioPrecision.API.BluetoothHspAgCommand)">
            <summary>
            Sends a command to APx to perform phone calling functions.  This function is only applicable when APx is
            configured as an HSP Audio Gateway device.
            </summary>
            <param name="command">The phone calling command.</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.HfpHfpCommand(AudioPrecision.API.BluetoothHfpHfCommand)">
            <summary>
            Sends a command to APx to perform a hands free calling function.  This function is only applicable when 
            APx is configured as an HFP Hands Free device.
            </summary>
            <param name="command">Command to send</param>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.HspHsCommand(AudioPrecision.API.BluetoothHspHsCommand)">
            <summary>
            Sends a command to APx to issue to the HSP button command.  This function is only applicable when APx is 
            configured as an HSP Headset device.
            </summary>
            <param name="command">Command to send</param>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.DCCoupled">
            <summary>
            This property is obsolete.  Use the <see cref="P:AudioPrecision.API.ISignalPathSettings.HighpassFilter">SignalPathSetup.HighpassFilter</see> setting instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.GetFriendlyNamesDuringInquiry">
            <summary>
            Gets or sets whether or not device friendly names are queried during inquiry.  When friendly names are disabled, inquiry finishes
            significantly faster.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothSettings.QueryFriendlyName(System.String)">
            <summary>
            Queries the friendly name for a device with the specified address.
            </summary>
            <param name="address">The desired device Bluetooth address</param>
            <returns>The name if the device responded, or an empty string if the device did not</returns>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.eScoSettings">
            <summary>
            Gets the settings for SCO/eSCO packet types.  This property only affects modules which have been upgraded to support Wideband Speech.
            See <see cref="P:AudioPrecision.API.IBluetoothSettings.SupportsWidebandSpeech">SupportsWidebandSpeech</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.mSbcSettings">
            <summary>
            Gets the settings for mSBC packet types.  This property only affects modules which have been upgraded to support Wideband Speech.
            See <see cref="P:AudioPrecision.API.IBluetoothSettings.SupportsWidebandSpeech">SupportsWidebandSpeech</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.SupportsWidebandSpeech">
            <summary>
            Gets whether or not the Bluetooth module in the APx instrument supports Wideband Speech features including HFP 1.6 and mSBC audio codec.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AvrcpReceivedCommandsLog">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IBluetoothSettings.AvrcpCommandsLog"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AvrcpCommandsLog">
            <summary>
            Gets a collection of all AVRCP commands that have been sent or received by this device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AtCommandsLog">
            <summary>
            Gets a collection of all AT commands sent or received by this device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.WidebandSpeechEnabled">
            <summary>
            Gets or sets whether the mSBC codec is enabled for Bluetooth moduels which have been upgraded to support Wideband Speech.
            See <see cref="P:AudioPrecision.API.IBluetoothSettings.SupportsWidebandSpeech">SupportsWidebandSpeech</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.MaintainConnection">
            <summary>
            Gets or sets whether or not a connection to a Bluetooth device will remain active, even if the current signal path
            does not have a Bluetooth input or output connector selected.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.FindAllDevicesInInquiry">
            <summary>
            Gets or sets whether APx returns all devices from the inquiry, or a limited set of devices based on the
            <see cref="P:AudioPrecision.API.IBluetoothSettings.MaxDevicesInInquiry"/> and <see cref="P:AudioPrecision.API.IBluetoothSettings.InquiryDeviceClass"/> properties.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.MaxDevicesInInquiry">
            <summary>
            Gets or sets the maximum number of devices returned by the inquiry. Recommended not to exceed 10.
            This proprerty only applies when the <see cref="P:AudioPrecision.API.IBluetoothSettings.FindAllDevicesInInquiry"/> is False.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.InquiryDeviceClass">
            <summary>
            Gets or sets the a device class bit mask to applied to the inquiry results so only devices of the requested type are discoverd.
            This proprerty only applies when the <see cref="P:AudioPrecision.API.IBluetoothSettings.FindAllDevicesInInquiry"/> is False.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.CodecSettings">
            <summary>
            Gets the Bluetooth Codec settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.ModuleVersion">
            <summary>
            Gets the Bluetooth version.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.TransmitPower">
            <summary>
            Gets or sets the Bluetooth Transmit power.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AvrcpTarget">
            <summary>
            Gets the Bluetooth AVRCP Target settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.AvrcpController">
            <summary>
            Gets the Bluetooth AVRCP Controller settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.A2dpSink">
            <summary>
            Gets the Bluetooth A2DP Sink settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.A2dpSource">
            <summary>
            Gets the Bluetooth A2DP Source settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.IsFirmwareUpdateRequired">
            <summary>
            Gets whether or not the Bluetooth firmware in the APx module requires an update to work with this version of APx software.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.KnownDevices">
            <summary>
            Gets the collection of Bluetooth devices known to this PC that may or may not be in the Bluetooth module's paired device list.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSettings.ClockRecovery">
            <summary>
            Gets or sets the clock recovery strategy used by the Bluetooth sink configuration. This setting does not apply when APx is configured as an A2DP source.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothA2dpSinkSettings">
            <summary>
            Represents the A2DP settings when the Bluetooth connector is configured as an A2DP Sink device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothA2dpSinkSettings.AvSyncReporting">
            <summary>
            Gets or sets how the A2DP sink device reports A/V sync delay values. In <see cref="F:AudioPrecision.API.BluetoothAvSyncReporting.Auto"/> mode, the 
            internal settings of the Bluetooth codec determine the delay values. In <see cref="F:AudioPrecision.API.BluetoothAvSyncReporting.Custom"/> mode, the
            user can provide a delay value using the <see cref="P:AudioPrecision.API.IBluetoothA2dpSinkSettings.AvSyncDelay"/> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothA2dpSinkSettings.AvSyncDelay">
            <summary>
            Gets or sets the A/V sync delay value in seconds between 0.0 and 1.6 seconds.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothA2dpSourceSettings">
            <summary>
            Represents the A2DP settings when the Bluetooth connector is configured as an A2DP Source device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothA2dpSourceSettings.UseAvSyncDelayForSignalPathDelay">
            <summary>
            Gets or sets whether or not the reported AV Sync Delay value is automatically used in the signal path as the delay value.
            If the sink device does not support AV Sync Delay reporting, enabling this field will cause the delay value to be 0 seconds.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAtCommandInfo">
            <summary>
            Represents an AT command sent or received by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAtCommandInfo.Timestamp">
            <summary>
            Gets the date and time the command was received
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAtCommandInfo.Command">
            <summary>
            Get the name of the command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAtCommandInfo.CommandType">
            <summary>
            Gets the originator of this AT command.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothAtCommandInfoLog">
            <summary>
            Gets the collection of AT commands sent and received by APx during the current session.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAtCommandInfoLog.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothAtCommandInfoLog.Item(System.Int32)">
            <summary>
            Gets the At command at the specified index.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>An object representing an AVRCP command</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAtCommandInfoLog.Clear">
            <summary>
            Removes all entries from the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothAtCommandInfoLog.Save(System.String,System.Boolean)">
            <summary>
            Saves the list of sent and received AT commands to the specified file name.
            </summary>
            <param name="fileName">Full path to the file</param>
            <param name="appendIfExists">True to append to an existing file, False to replace the file</param>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothPacketSettings">
            <summary>
            Represents settings for packet types and packet transmission for Bluetooth devices.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothPacketSettings.Latency">
            <summary>
            Gets or sets the latency, in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothPacketSettings.Retransmission">
            <summary>
            Gets or sets how APx attempts retransmission of packets.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothPacketSettings.GetPacketTypeEnabled(AudioPrecision.API.BluetoothPacketType)">
            <summary>
            Gets whether or not the specified packet type is enabled.
            </summary>
            <param name="packetType">Desired packet</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothPacketSettings.SetPacketTypeEnabled(AudioPrecision.API.BluetoothPacketType,System.Boolean)">
            <summary>
            Sets whether or not the specified packet type should be used.
            </summary>
            <param name="packetType">The packet type</param>
            <param name="enabled">Whether or not the packet type is enabled</param>
        </member>
        <member name="T:AudioPrecision.API.IAnalogOutputSettings">
            <summary>
            Represents the settings for the analog output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.ChannelCount">
            <summary>
            Gets or set the number of analog output channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.BalancedSourceImpedance">
            <summary>
            Gets or sets the impedance value when the output connector is Analog Balanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.UnbalancedSourceImpedance">
            <summary>
            Gets or sets the impedance value when the output connector is Analog Unbalanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.CommonModeConfiguration">
            <summary>
            Gets or sets the analog balanced output configuration
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.AnalogOutputRanges">
            <summary>
            Gets the analog output ranges.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputSettings.AdvancedAnalogOutput">
            <summary>
            Get the setting for controlling the Advanced Analog setting for the Enhanced Analog Generator.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAdvancedAnalogOutputSettings">
            <summary>
            Represents the settings for the Enhanced Analog Generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedAnalogOutputSettings.ConfigTrackCh1">
            <summary>
            Set or get the state of the Configurations tracki Channel 1.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAdvancedAnalogOutputSettings.GetConfiguration(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Get the output configuration for the analog balanced output.
            </summary>
            <param name="ch">Channel to query</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAdvancedAnalogOutputSettings.SetConfiguration(AudioPrecision.API.OutputChannelIndex,AudioPrecision.API.AnalogBalancedOutputConfigurationType)">
            <summary>
            Set the configuration of the analog balanced output.
            </summary>
            <param name="ch">Channel to set</param>
            <param name="config">Desired configuration</param>
        </member>
        <member name="M:AudioPrecision.API.IAdvancedAnalogOutputSettings.GetChannelInvert(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Get the invert state of the selected channel of the analog balanced output.
            </summary>
            <param name="ch">Channel to query</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IAdvancedAnalogOutputSettings.SetChannelInvert(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Set the invert state of the selected channel of the analog balanced output.
            </summary>
            <param name="ch">Channel to set</param>
            <param name="invert">Desired invert state</param>
        </member>
        <member name="T:AudioPrecision.API.IAnalogInputSettings">
            <summary>
            Represents the settings for the analog input connector.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.IsLoopbackValid(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not the specified channel can use the internal loopback function.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel can use the internal loopback</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.IsLoopbackValid(System.Int32)">
            <summary>
            Gets whether or not the specified channel can use the internal loopback function.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel can use the internal loopback</returns>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputSettings.ChannelCount">
            <summary>
            Gets or sets the number of analog input channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetConnectorType(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the physical connector interface type for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>The connector type</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetConnectorType(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.AnalogConnectorType)">
            <summary>
            Sets the physical connector interface type for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="connectorType">The connector type</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetConnectorType(System.Int32)">
            <summary>
            Gets the physical connector interface type for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>The connector type</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetConnectorType(System.Int32,AudioPrecision.API.AnalogConnectorType)">
            <summary>
            Sets the physical connector interface type for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="connectorType">The connector type</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetTermination(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the analog input termination value for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>The input termination value</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetTermination(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.AnalogInputTermination)">
            <summary>
            Sets the analog input termination for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="termination">The input termination value</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetTermination(System.Int32)">
            <summary>
            Gets the analog input termination value for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>The input termination value</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetTermination(System.Int32,AudioPrecision.API.AnalogInputTermination)">
            <summary>
            Sets the analog input termination for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="termination">The input termination value</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetDcCoupled(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not the specifed channel is AC or DC coupled.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if DC coupled, False if AC coupled</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetDcCoupled(AudioPrecision.API.InputChannelIndex,System.Boolean)">
            <summary>
            Sets the AC/DC coupling value for the specified channel.
            </summary>
            <param name="ch">The channnel</param>
            <param name="coupled">True for DC coupled, False for AC coupled</param>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.GetDcCoupled(System.Int32)">
            <summary>
            Gets whether or not the specifed channel is AC or DC coupled.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if DC coupled, False if AC coupled</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputSettings.SetDcCoupled(System.Int32,System.Boolean)">
            <summary>
            Sets the AC/DC coupling value for the specified channel.
            </summary>
            <param name="ch">The channnel</param>
            <param name="coupled">True for DC coupled, False for AC coupled</param>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputSettings.SingleInputChannel">
            <summary>
            Gets or sets which input channel will be observed when <see cref="P:AudioPrecision.API.IAnalogInputSettings.ChannelCount">ChannelCount</see> is 1 on an APx555 instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputSettings.UseHighPerformanceSineAnalyzer">
            <summary>
            Gets or sets whether or not the high performance sine analyzer engages its notch filters to improve measurement performance.
            This setting only applies to instruments with the appropriate hardware modules.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputSettings.ResidualOnly">
            <summary>
            Gets or sets whether or not the high performance sine analyzer notch filters will be used alone or with the
            main signal. If UseHighPerformanceSineAnalyzer is false then this setting will be ignored.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalOutputSettings">
            <summary>
            Represents the settings for digital output connectors such as Digital Balanced, Digital Unbalanced, and Digital Optical.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputSettings.SampleRate">
            <summary>
            Gets the setting for the digital output sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputSettings.BitDepth">
            <summary>
            Gets or sets the digital output bit depth.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputSettings.Dither">
            <summary>
            Gets or sets whether the digital signal is dithered.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDigitalOutputSettings.GetValidityBit(AudioPrecision.API.ValidityBitSide)">
            <summary>
            Get the current setting of the Validity Bit for the given channel subframe.
            </summary>
            <param name="side">Desired channel subframe side</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IDigitalOutputSettings.SetValidityBit(AudioPrecision.API.ValidityBitSide,AudioPrecision.API.ValidityBitType)">
            <summary>
            Set the Validity Bit for the given channel status subframe.
            </summary>
            <param name="side">Given channel subframe</param>
            <param name="txValid">Desired validity flag</param>
        </member>
        <member name="T:AudioPrecision.API.ISpdifDigitalOutputSettings">
            <summary>
            Represents the settings for digital output connectors such as Digital Balanced, Digital Unbalanced, and Digital Optical.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifDigitalOutputSettings.ProfessionalMode">
            <summary>
            This settling only applies when the output connector is Digital Unbalanced
            Sets the status bits in the output to Professional when true, or Consumer when false
            When true, output voltage is 1 Vpp
            When false, output voltage is 0.5 Vpp
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifDigitalOutputSettings.Metadata">
            <summary>
            Gets the metadata settings for the SPDIF digital output connectors.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifDigitalOutputSettings.ScaleFreqBy">
            <summary>
            Gets or sets how the generator frequency is scaled relative to the sample rate. When the clock is driven
            by an external device or by APx, use <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.OutputRate"/>. 
            When the clock has high amounts of jitter applied, use <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.FixedRate"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifDigitalOutputSettings.ScaleFreqByFixedRate">
            <summary>
            Gets or sets the frame clock (sample) rate in Hz when <see cref="P:AudioPrecision.API.ISpdifDigitalOutputSettings.ScaleFreqBy"/> is set to <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.FixedRate"/>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiOutputSettings">
            <summary>
            Represents the settings for the HDMI otuput connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.AudioFormat">
            <summary>
            Gets or sets the audio format.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.VideoFormat">
            <summary>
            Gets or sets the format for HDMI video output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.PassThrough">
            <summary>
            Gets or sets whether APx provides the video signal or whether APx passes
            an externally supplied video signal through to the DUT.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.VideoColor">
            <summary>
            Gets or sets the color of the video output when APx generates the video signal.
            When HdmiPassThrough setting is False, APx generates the video signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.ColorDepth">
            <summary>
            Gets or sets the color depth used when APx generates the video signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.EnableHdcpEncryption">
            <summary>
            Gets or sets whether or not APx uses HDCP encryption when generating the video 
            signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.Metadata">
            <summary>
            Gets the metadata settings for the Digital HDMI output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.OverrideNCts">
            <summary>
            Gets or sets whether APx automatically computes the N and CTS values for the HDMI transmitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.OverrideNValue">
            <summary>
            Gets or sets a manual N value for the HDMI transmitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.OverrideCtsValue">
            <summary>
            Gets or sets a manual CTS value for the HDMI transmitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.SinkEdid">
            <summary>
            Gets the EDID bytes from the connected sink device.  If no device is connected, the return value
            is an array of 0 length.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.IsSinkEdidValid">
            <summary>
            Gets whether or not an HDMI sink device is connected to the HDMI Source connector
            and has presented APx with a valid EDID.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.CecLogicalAddress">
            <summary>
            Gets or sets the logical address (or device type) for the HDMI output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputSettings.VerifyDdcInSequence">
            <summary>
            Gets or sets whether or not to verify that the DDC line is properly connected in the device connected to the
            HDMI Source connector.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiArcOutputSettings">
            <summary>
            Represents the settings for the HDMI ARC output connector type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiArcOutputSettings.PhysicalLayer">
            <summary>
            Gets or sets the ARC physical layer mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiArcOutputSettings.TransmitterNegotiation">
            <summary>
            Gets or sets the ARC Transmitter Negotiation
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiArcOutputSettings.CustomEdid">
            <summary>
            Gets or sets the EDID bytes which are used when HdmiSinkEdidType is HdmiSinkEdidType.Custom
            <see cref="T:AudioPrecision.API.HdmiSinkEdidType"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHdmiArcOutputSettings.SendCec(AudioPrecision.API.CecCommandTypeEnum)">
            <summary>
            Sends a CEC command using the HDMI ARC transmitter.
            </summary>
            <param name="command">The CEC command</param>
        </member>
        <member name="T:AudioPrecision.API.ICommonDigitalInputSettings">
            <summary>
            Represents settings that are common to multiple digital interface types.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICommonDigitalInputSettings.ScaleFreqBy">
            <summary>
            Gets or sets how the input sample rate is determined. The user can provide a fixed input rate
            value in cases where the device under test has high amounts of clock jitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICommonDigitalInputSettings.FixedInputSampleRate">
            <summary>
            Gets or sets the fixed input sample rate in Hz. This value is used when the <see cref="P:AudioPrecision.API.ICommonDigitalInputSettings.ScaleFreqBy"/> is 
            <see cref="F:AudioPrecision.API.InputFrequencyScalingType.FixedRate"/>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalInputSettings">
            <summary>
            Represents the settings for digital input connectors such as Digital Balanced, Digital Unbalanced, and Digital Optical.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputSettings.UnbalancedInputTermination">
            <summary>
            Gets or sets whether or not the digital input signal is terminated when the Digital Unbalanced
            input connector is selected
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputSettings.BalancedInputTermination">
            <summary>
            Gets or sets whether or not the digital input signal is terminated when the Digital Balanced
            input connector is selected
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputSettings.BitDepth">
            <summary>
            Gets or sets the digital input bit depth.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputSettings.MeasureInputSignalType">
            <summary>
            Get or set type of input signal, Audio or Jitter.
            Note: This is only valid when the APx instrument is capable of measuring Jitter.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiInputSettings">
            <summary>
            Represents the settings for the HDMI input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiInputSettings.DisableCECForwarding">
            <summary>
            Gets or sets whether or not APx allows CEC messages to be passed to the DUT.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiInputSettings.SinkEdidType">
            <summary>
            Gets or sets which EDID will be presented to a device which is connected to the HDMI Sink port
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiInputSettings.SinkCustomEdid">
            <summary>
            Gets or sets the EDID bytes which are used when HdmiSinkEdidType is HdmiSinkEdidType.Custom
            <see cref="T:AudioPrecision.API.HdmiSinkEdidType"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHdmiInputSettings.ReadEdidFromFile(System.String)">
            <summary>
            Gets the EDID bytes which are stored in the specified file name.  If the file is not a valid EDID file, this
            function throws an exception.
            </summary>
            <param name="fileName">The file name containing the EDID data</param>
            <returns>An array of bytes</returns>
        </member>
        <member name="M:AudioPrecision.API.IHdmiInputSettings.ReadEdidFromAuxOut">
            <summary>
            Gets the EDID bytes from the HDMI Aux output connector.  If no device is connected, the
            function returns an empty array.
            </summary>
            <returns>An array of bytes</returns>
        </member>
        <member name="P:AudioPrecision.API.IHdmiInputSettings.CecLogicalAddress">
            <summary>
            Gets or sets the logical address (or device type) of the APx HDMI input connector.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiArcInputSettings">
            <summary>
            Represents the settings for the HDMI ARC input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiArcInputSettings.PhysicalLayer">
            <summary>
            Gets or sets the ARC physical layer mode.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHdmiArcInputSettings.SendCec(AudioPrecision.API.CecCommandTypeEnum)">
            <summary>
            Sends a CEC command using the HDMI ARC receiver.
            </summary>
            <param name="command">The CEC command</param>
        </member>
        <member name="T:AudioPrecision.API.IDcxSettings">
            <summary>
            Represents the settings for the Audio Precision DCX accessory.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.GetState(AudioPrecision.API.DcxPort,System.Byte)">
            <summary>
            Get the state of the specified port and bit
            </summary>
            <param name="port">Which port</param>
            <param name="bit">Which bit</param>
            <returns>The state</returns>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.GetState(AudioPrecision.API.DcxPort)">
            <summary>
            Get the state of the specified port as an int.
            </summary>
            <param name="port">Which port</param>
            <returns>The value of all bits as an int</returns>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.SetState(AudioPrecision.API.DcxPort,System.Byte,AudioPrecision.API.AuxControlState)">
            <summary>
            Set the state of the specified dcx port and bit
            </summary>
            <param name="port">Which port</param>
            <param name="bit">Which bit</param>
            <param name="state">New state</param>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.SetState(AudioPrecision.API.DcxPort,System.Byte)">
            <summary>
            Set the state of all bits at the same time.
            </summary>
            <param name="port">Which port</param>
            <param name="value">What value</param>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.SetLevel(AudioPrecision.API.DcxDcvChannel,System.Double)">
            <summary>
            Set the level of the DCV output.
            </summary>
            <param name="channel">Specify which of the two DCV to use</param>
            <param name="level">Level to set to</param>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.GetLevel(AudioPrecision.API.DcxDcvChannel)">
            <summary>
            Get the level that the DCV was set to.
            </summary>
            <param name="channel">Specify which of the two DCV</param>
            <returns>DCV level</returns>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.SetEnable(AudioPrecision.API.DcxDcvChannel,System.Boolean)">
            <summary>
            Set the enable state of the DCV.
            </summary>
            <param name="channel">Specify which of the two DCV</param>
            <param name="state">On or off</param>
        </member>
        <member name="M:AudioPrecision.API.IDcxSettings.GetEnable(AudioPrecision.API.DcxDcvChannel)">
            <summary>
            Get the state that the DCV was set to.
            </summary>
            <param name="channel">Specify which of the two DCV</param>
            <returns>DCV state</returns>
        </member>
        <member name="T:AudioPrecision.API.IDmm">
            <summary>
            Represents the settings for the DMM module on the DCX accessory.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDmm.Reading">
            <summary>
            Get the current value of the DMM
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDmm.Rate">
            <summary>
            Set the conversion rate of the DCx DMM 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDmm.Mode">
            <summary>
            Set or get the mode of the DCx DMM.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDmm.OhmsRange">
            <summary>
            Set or get the range used while in DMM Ohms mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDmm.VoltsRange">
            <summary>
            Set or get the range used while in  DMM Volts mode.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequence">
            <summary>
            Represents an ordered list of steps which will be executed in sequence.  A report is automatically generated
            when the sequence concludes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Report">
            <summary>
            Gets the report for the sequence.  The report contains a graphical
            and numeric summary of the results of the sequence.  The report
            can be exported to an external file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequence.Run">
            <summary>
            Runs the sequence.
            </summary>
            <example>
            This example shows how to run a sequence and determine which measurement results failed limit checks
            <code source="Sequence.vb" region="Run" lang="vbnet"/>
            </example>
        </member>
        <member name="M:AudioPrecision.API.ISequence.Run(System.String)">
            <summary>
            Runs the sequence while specifying an identifier for the device which appers on the APx sequence report.
            </summary>
            <param name="deviceId">Specifies an identifier for the device which appears on the APx sequence report</param>
        </member>
        <member name="M:AudioPrecision.API.ISequence.RunProductionTestSequence(System.String,System.String)">
            <summary>
            Runs a named sequence from the <see cref="P:AudioPrecision.API.ISequence.Sequences"/> collection when the project is in production test mode. 
            An exception is thrown if the project is not in production test mode.
            </summary>
            <param name="sequenceName">Name of the sequence.</param>
            <param name="password">Password, if required by the specified sequence, or a blank string if not required.</param>
        </member>
        <member name="M:AudioPrecision.API.ISequence.StartFromMeasurement(System.String,System.String)">
            <summary>
            Runs the sequence starting from the specified signal path and measurement and continuing until the end of the sequence.
            </summary>
            <param name="signalPathName">The name of the signal path, i.e. "Signal Path 1"</param>
            <param name="measurementName">The name of the measurement, i.e. "Level and Gain"</param>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Status">
            <summary>
            Gets the status of the sequence.  If the sequence has not been run yet, the return
            value is SequenceCompletedStatus.SequenceNotStarted, otherwise the return value
            indicates the success or failure of the last sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.StatusMessage">
            <summary>
            Get the status message from the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Passed">
            <summary>
            Gets whether or not every measurement in the sequence passed limit checks.  Returns true if 
            all measurement results are within limits or no limits are defined.  Returns false if at least one 
            result has failed limit checks.
            </summary>
            <example>
            See the <see cref="M:AudioPrecision.API.ISequence.Run"/> method for an example.
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Count">
            <summary>
            Gets the number of signal paths in this sequence.
            </summary>
            <example>
            <code source="Sequence.vb" region="Count" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Item(System.Int32)">
            <summary>
            Gets the specified signal path.
            </summary>
            <param name="index">The index of the signal path.</param>
            <returns>An object representing a signal path.</returns>
            <example>See the <see cref="P:AudioPrecision.API.ISequence.Count"/> property for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Item(System.String)">
            <summary>
            Gets the specified signal path.
            </summary>
            <param name="index">The index of the signal path.</param>
            <returns>An object representing a signal path.</returns>
            <example>
            This example enumerates the contents of the project and lists all signal paths and measurements
            <code source="Sequence.vb" region="Index" lang="vbnet"/>
            </example>
        </member>
        <member name="M:AudioPrecision.API.ISequence.GetSignalPath(System.Int32)">
            <summary>
            Gets the specified signal path by index
            </summary>
            <param name="index">The 0-based index of the signal path</param>
            <returns>An object representing a signal path.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequence.GetSignalPath(System.String)">
            <summary>
            Gets the specified signal path by name
            </summary>
            <param name="signalPathName">The name of the signal path</param>
            <returns>An object representing a signal path.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequence.GetMeasurement(System.Int32,System.Int32)">
            <summary>
            Gets the specified measurement from the specified signal path
            </summary>
            <param name="signalPathIndex">The 0-based signal path index</param>
            <param name="measurementIndex">The 0-based measurement index, within the signal path</param>
            <returns>An object representing measurement settings for a sequence</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequence.GetMeasurement(System.String,System.String)">
            <summary>
            Gets the specified measurement from the specified signal path
            </summary>
            <param name="signalPathName">The signal path name</param>
            <param name="measurementName">The measurement name, within the signal path</param>
            <returns>An object representing measurement settings for a sequence</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequence.FailedResults">
            <summary>
            Gets the collection of measurement results which did not pass their limit checks during the sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.ShowPassFailMessage">
            <summary>
            Gets or sets whether the user will see a prompt indicating the success or failure of the sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.PassMessage">
            <summary>
            Gets or sets the message presented to the user when the sequence passes all limit comparisons.
            <remarks>This message only appears if the ShowPassFailMessage property is set to True.</remarks>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.PassImage">
            <summary>
            Gets the image which will appear on the pass/fail window when the sequence completes successfully.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequence.LoadPassImage(System.String,System.Boolean)">
            <summary>
            Loads an image to display on the pass/fail window when the sequence completes successfully.
            </summary>
            <param name="fileName">The path to an image file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing image attached
            to the project with this image file.</param>
        </member>
        <member name="M:AudioPrecision.API.ISequence.ClearPassImage">
            <summary>
            Removes the image displayed on the pass/fail window when the sequence completes successfully.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.FailImage">
            <summary>
            Gets the image which will appear on the pass/fail window when the sequence fails.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequence.LoadFailImage(System.String,System.Boolean)">
            <summary>
            Loads an image to display on the pass/fail window when the sequence fails.
            </summary>
            <param name="fileName">The path to an image file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing image attached
            to the project with this image file.</param>
        </member>
        <member name="M:AudioPrecision.API.ISequence.ClearFailImage">
            <summary>
            Removes the image displayed on the pass/fail window when the sequence fails.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.FailMessage">
            <summary>
            Gets or sets the message presented to the user when the sequence fails a limit comparison or an
            error occurs during the sequence execution.  
            <remarks>This message only appears if the ShowPassFailMessage property is set to True.</remarks>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.AuxControlInForDialogButtons">
            <summary>
            Gets the properties for controlling how dialog box buttons respond to Aux Input values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.DigitalInterfaceSyncDelay">
            <summary>
            Gets or sets the amount of time the sequence will wait for APx to synchronize with a digital device
            when executing a sequence.  The delay time is specified in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.SampleRateChangeDelay">
            <summary>
            Gets or sets the amount of time the sequence will wait for the device under test to synchronize
            with a sample rate change from APx.  The delay time is specified in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.OpenScoDelay">
            <summary>
            Gets or sets the amount of time the sequence will wait for the Bluetooth device under test to open 
            the SCO connection. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.CloseScoDelay">
            <summary>
            Gets or sets the amount of time the sequence will wait for the Bluetooth device under test to close 
            the SCO connection. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.StartSettings">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceSettings.StartAuxControlSettings"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.EndSettings">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceSettings.EndAuxControlSettings"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.ExecutionTime">
            <summary>
            Gets the total running time of the last sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.DataOutput">
            <summary>
            Gets the settings for exporting data at the end of a sequence run.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.LastStartTime">
            <summary>
            Gets the date and time the sequence last ran.  If the sequence never ran, the value will be DateTime.MinValue.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequence.GetCheckedState">
            <summary>
            Gets the current checked state of all signal paths and measurements in the project. This object can be used with the
            <see cref="M:AudioPrecision.API.ISequence.ApplyCheckedState(AudioPrecision.API.ISequenceCheckedState)">ApplyCheckedState</see> method to check or uncheck measurements and signal paths in a 
            much faster way.
            </summary>
            <returns>The current checked values by signal path and measurement</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequence.ApplyCheckedState(AudioPrecision.API.ISequenceCheckedState)">
            <summary>
            Applies the specified checked state for signal paths and measurements.  This method significantly improves performance
            when applying many changes in a large project file.
            </summary>
            <param name="checkedState">The updated state.  This value should have originated from the <see cref="M:AudioPrecision.API.ISequence.GetCheckedState">GetCheckedState</see> method</param>
        </member>
        <member name="P:AudioPrecision.API.ISequence.Sequences">
            <summary>
            Gets the collection of sequences in this project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.ProductionTest">
            <summary>
            Gets or sets whether or not this project will be in Production Test mode, which displays a simplified user interface
            when the sequencer runs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.ShowApplicationWindow">
            <summary>
            Gets or sets whether or not the APx application window is visible when the sequencer is started. This property only applies
            when the <see cref="P:AudioPrecision.API.ISequence.ProductionTest"/> property is True.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.ProductionTestSettings">
            <summary>
            Gets the settings for the simplified production test user interface. These settings only apply when the <see cref="P:AudioPrecision.API.ISequence.ProductionTest"/>
            property is True.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.PreSequenceSteps">
            <summary>
            Gets the collection of pre sequence substeps which run at the beginning of the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequence.PostSequenceSteps">
            <summary>
            Gets the collection of post sequence substeps which run at the end of a sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProductionTestSettings">
            <summary>
            Represents the sequence settings when this project is locked in Production Test mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProductionTestSettings.MessageText">
            <summary>
            Gets or sets the unformatted text of the prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProductionTestSettings.MessageRTF">
            <summary>
            Gets or sets the text of the prompt formatted with RTF characters.  
            RTF may include information about fonts and special characters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProductionTestSettings.BannerImage">
            <summary>
            Gets the image associated with this prompt. This value is Null if no image is specified.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProductionTestSettings.LoadBannerImageFile(System.String,System.Boolean)">
            <summary>
            Loads an image into the project and selects it into the <see cref="T:System.Drawing.Image">Image</see> property.
            </summary>
            <param name="fileName">The path to an image file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing image attached
            to the project with this image file.</param>
        </member>
        <member name="P:AudioPrecision.API.IProductionTestSettings.SelectedBannerImage">
            <summary>
            Gets or sets the name of the image for the prompt.  Images can be added to the project using the <see cref="M:AudioPrecision.API.IProductionTestSettings.LoadBannerImageFile(System.String,System.Boolean)">LoadImageFile</see> function.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStartSettings">
            <summary>
            Represents the settings applied when APx starts running a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.StartSequenceOnAuxControlIn">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceStartAuxControlSettings.StartSequenceOnAuxControlIn"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.AuxControlInSettingsForSequenceStart">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceStartAuxControlSettings.AuxControlInSettingsForSequenceStart"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.AuxControlOutSettingsForSequenceStart">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceStartAuxControlSettings.AuxControlOutSettingsForSequenceStart"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.PromptUserForDeviceId">
            <summary>
            This property is obsolete. The project contains a prompt in the <see cref="P:AudioPrecision.API.ISequence.PreSequenceSteps">Sequence.PreSequenceSteps</see> 
            collection which requests the device ID and saves its value to a system variable called $(DeviceId).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.DeviceIdPromptText">
            <summary>
            This property is obsolete. The project contains a prompt in the <see cref="P:AudioPrecision.API.ISequence.PreSequenceSteps">Sequence.PreSequenceSteps</see> 
            collection which requests the device ID and saves its value to a system variable called $(DeviceId).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartSettings.DeviceIdUserResponse">
            <summary>
            This property is obsolete. The project contains a prompt in the <see cref="P:AudioPrecision.API.ISequence.PreSequenceSteps">Sequence.PreSequenceSteps</see> 
            collection which requests the device ID and saves its value to a system variable called $(DeviceId). Use the 
            <see cref="M:AudioPrecision.API.IVariables.GetAPxSystemVariable(System.String)">APx.Variables.GetAPxSystemVariable("DeviceId")</see> function to query the value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceEndSettings">
            <summary>
            Represents the settings when the sequence execution ends.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndSettings.ProgramSettings">
            <summary>
            This property is obsolete. You can create one or more program steps in the 
            <see cref="P:AudioPrecision.API.ISequence.PostSequenceSteps">Sequence.PostSequenceSteps</see> collection instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndSettings.AuxControlOutSettingsForAllMeasurementsPassed">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForAllMeasurementsPassed"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndSettings.AuxControlOutSettingsForAnyMeasurementFailed">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForAnyMeasurementFailed"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndSettings.AuxControlOutSettingsForSequenceCancelled">
            <summary>
            This property is obsolete. Each project can contain one or more sequences. The aux control settings are now part 
            of the sequence settings objects. Use  <see cref="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForSequenceCancelled"/> instead.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceProgram">
            <summary>
            Represents the settings for a program which runs at the end of a sequence.  This program could be used
            to transform data collected during the sequence, or to push the results to an external data source like a database.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.Enabled">
            <summary>
            Gets or sets whether or not the sequencer will run a program at the 
            end of the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.Command">
            <summary>
            Gets the command to be executed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.Arguments">
            <summary>
            Gets the command line arguments to the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.WorkingDirectory">
            <summary>
            Gets the working directory for the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.WaitForExitBehavior">
            <summary>
            Gets whether or not the sequence waits for the program to exit before
            moving on to the next step.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.ExpectedOutput">
            <summary>
            If the <see cref="P:AudioPrecision.API.ISequenceProgram.WaitForExitBehavior">WaitForExitBehavior</see> property is set
            to WaitForExitValidateResponse, this property gets or sets the expectd output of the program.
            If the actual output does not match the expected output, the sequence fails with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.ActualOutput">
            <summary>
            Gets the console output from the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceProgram.RanToCompletion">
            <summary>
            Gets whether or not the program completed.  This is false if the path to the program was incorrect if the program
            failed due to some other error.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceAuxControlInputSettings">
            <summary>
            Represents the settings for how dialog box buttons respond to Aux Control input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForOkPassEnabled">
            <summary>
            Gets or sets whether OK/Pass/Next Device dialog box buttons respond to Aux Control input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForOkPassButton">
            <summary>
            Gets the Aux Control input settings for the OK, Pass, or Next Device buttons.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForCancelAbortEnabled">
            <summary>
            Gets or sets whether Cancel/Abort/End Test dialog box buttons respond to Aux Control input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForCancelAbortButton">
            <summary>
            Gets the Aux Control input settings for the Cancel, Abort, or End Test buttons.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForRetryEnabled">
            <summary>
            Gets or sets whether Retry dialog box buttons respond to Aux Control input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForRetryButton">
            <summary>
            Gets the Aux Control input settings for the Retry button.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForFailIgnoreEnabled">
            <summary>
            Gets or sets whether Fail or Ignore dialog box buttons respond to Aux Control input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceAuxControlInputSettings.AuxControlInForFailIgnoreButton">
            <summary>
            Gets the Aux Control input settings for the Fail or Ignore buttons.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SequenceCompletedStatus">
            <summary>
            Denotes the status of a sequence execution.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceNotStarted">
            <summary>
            The sequence has not been executed yet.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceCompleted">
            <summary>
            The sequence execution completed. 
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceCancelledByUser">
            <summary>
            The sequence execution was cancelled by the user.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceAbortedByLimitFailure">
            <summary>
            The sequence execution stopped because of a limit failure.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceAbortedByError">
            <summary>
            The sequence execution stopped because of an error.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceCompletedWithErrors">
            <summary>
            The sequence execution completed, but one or more errors occurred.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceAbortedByRegulationFailure">
            <summary>
            The sequence execution stopped because of a regulation failure.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceFailedByUser">
            <summary>
            One or more measurements was marked as a failure by a user pass/fail step.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceCompletedStatus.SequenceFailedToSetReferences">
            <summary>
            Sequence failed the calibration prompt step.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFailedSequenceResultCollection">
            <summary>
            Represents the collection of all measurement results which failed during a sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFailedSequenceResultCollection.Count">
            <summary>
            Gets the number of results in the collection
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFailedSequenceResultCollection.Item(System.Int32)">
            <summary>
            Gets the specified item from the collection.
            </summary>
            <param name="index">The index of the result.</param>
            <returns>The specified reusult.</returns>
        </member>
        <member name="T:AudioPrecision.API.IFailedSequenceResult">
            <summary>
            Represents a measurement result which failed its limit tests during a sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFailedSequenceResult.SignalPath">
            <summary>
            Gets the name of the signal path which contains this result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFailedSequenceResult.Measurement">
            <summary>
            Gets the name of the measurement which contains this result
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceDataOutput">
            <summary>
            Represents the settings for exporting data from a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceDataOutput.WriteMeterReadingsToCsvFile">
            <summary>
            Gets or sets whether or not APx will write all meter readings collected during the sequence run to a CSV text file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceDataOutput.MeterReadingsFileName">
            <summary>
            Gets or sets the target file name for exporting meter readings from the sequence.  
            See <see cref="P:AudioPrecision.API.ISequenceDataOutput.WriteMeterReadingsToCsvFile">WriteMeterReadingsToCsvFile</see>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceCheckedState">
            <summary>
            Represents the checked state of all signal paths and measurements in a project.  This object is not updated
            as signal paths or measurements are added and removed from the project, so the <see cref="M:AudioPrecision.API.ISequence.GetCheckedState">GetCheckedState</see>
            function should be called just before making changes.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.GetCheckedState(System.String)">
            <summary>
            Gets the checked state for the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <returns>True if the signal path is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.SetCheckedState(System.String,System.Boolean)">
            <summary>
            Sets the checked state for the specified signal path.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.GetCheckedState(System.Int32)">
            <summary>
            Gets the checked state for the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <returns>True if the signal path is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.SetCheckedState(System.Int32,System.Boolean)">
            <summary>
            Sets the checked state for the specified signal path.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.GetCheckedState(System.String,System.String)">
            <summary>
            Gets the checked state for the specified measurement.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <returns>True if the measurement is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.GetCheckedState(System.String,System.String,System.String)">
            <summary>
            Gets the checked state for the specified sequence step.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="stepName">Sequence Step</param>
            <returns>True if the sequence step is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.SetCheckedState(System.String,System.String,System.Boolean)">
            <summary>
            Sets the checked state for the specified measurement.  The state will not
            be set in the project until the <see cref="M:AudioPrecision.API.ISequence.ApplyCheckedState(AudioPrecision.API.ISequenceCheckedState)">ApplyCheckedState</see> method is called.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.SetCheckedState(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sets the checked state for the specified sequence step.
            </summary>
            <param name="signalPathName">Signal Path</param>
            <param name="measurementName">Measurement</param>
            <param name="stepName">Sequence Step</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.GetCheckedState(System.Int32,System.Int32)">
            <summary>
            Gets the checked state for the specified signal path and measurement.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <returns>True if the measurement is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCheckedState.SetCheckedState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the checked state for the specified measurement.  The state will not
            be set in the project until the <see cref="M:AudioPrecision.API.ISequence.ApplyCheckedState(AudioPrecision.API.ISequenceCheckedState)">ApplyCheckedState</see> method is called.
            </summary>
            <param name="signalPathIndex">Signal Path</param>
            <param name="measurementIndex">Measurement</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="T:AudioPrecision.API.ISpdifOutputMetadata">
            <summary>
            Represents the digital metadata settings for SPDIF output connectors.  Examples include "Digital Balanced", "Digital Unbalanced",
            and "Digital Optical".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifOutputMetadata.AutoStatusBits">
            <summary>
            Gets or sets whether status bits (C-Bits) are automatically computed by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifOutputMetadata.StatusBitsBSameAsSubframeA">
            <summary>
            Gets or sets whether status bits (C-Bits) for subframe B are set the same as subframe A.  
            <remarks>Not all APx digital interface modules support this feature.  Some modules may require an upgrade to support this feature.</remarks>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifOutputMetadata.StatusBitsA">
            <summary>
            Gets the settings for the subframe A status bits (C-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifOutputMetadata.StatusBitsB">
            <summary>
            Gets the settings for the subframe B status bits (C-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpdifOutputMetadata.UserBytes">
            <summary>
            Gets or sets the user bits (U-Bits).
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalOutputStatusBitsSettings">
            <summary>
            Represents the status bit values for a digital interface.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputStatusBitsSettings.Application">
            <summary>
            Gets or sets the usage of the channel status block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputStatusBitsSettings.StatusBytes">
            <summary>
            Gets or sets the raw byte values for the status bits (C-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputStatusBitsSettings.ConsumerSettings">
            <summary>
            Gets the settings for the current status bit (C-Bits) values interpreted as Consumer bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputStatusBitsSettings.ProfessionalSettings">
            <summary>
            Gets the settings for the current status bit (C-Bits) values interpreted as Professional bits.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IConsumerStatusBitsSettings">
            <summary>
            Represents status bits (C-Bits) settings interpreted for Consumer applications.
            These settings are defined by the IEC 60958-3 specification (Digital audio interface - Consumer applications).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.AudioMode">
            <summary>
            Gets or sets the Audio Mode.  This bit determines the type of data in the audio block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.Copyright">
            <summary>
            Gets or sets whether or not the software copyright is asserted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.Emphasis">
            <summary>
            Gets or sets the pre-Emphasis value when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsSettings.AudioMode">AudioMode</see> settings is Audio.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.EmphasisNonAudio">
            <summary>
            Gets or sets the pre-Emphasis value when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsSettings.AudioMode">AudioMode</see> setting is Non-Audio.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.ChannelStatusMode">
            <summary>
            Gets or sets the channel status mode. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.CategoryCode">
            <summary>
            Gets or sets the category code which indicates the type of the device which generated the digital audio signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.SourceNumber">
            <summary>
            Gets or sets the source number.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.ChannelNumber">
            <summary>
            Gets or sets the channel number (audio channel).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.SamplingFrequency">
            <summary>
            Gets or sets the audio sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.ClockAccuracy">
            <summary>
            Gets or sets the clock accuracy.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.WordLength">
            <summary>
            Gets or sets the maximum audio sample word length.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.SampleWordLength20Bits">
            <summary>
            Gets or sets the sample word length when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsSettings.WordLength">WordLength</see> property is 20 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.SampleWordLength24Bits">
            <summary>
            Gets or sets the sample word length when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsSettings.WordLength">WordLength</see> property is 24 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.OriginalSamplingFrequency">
            <summary>
            Gets or sets the original sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsSettings.CgmsA">
            <summary>
            Gets or sets the CGMS-A setting for copy protection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProfessionalStatusBitsSettings">
            <summary>
            Represents status bits (C-Bits) settings interpreted for Professional audio applications.
            These settings are defined by the AES-3 specification (AES standard for digital audio).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.AudioMode">
            <summary>
            Gets or sets the Audio Mode.  This bit determines the type of data in the audio block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Emphasis">
            <summary>
            Gets or sets the audio signal emphasis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Lock">
            <summary>
            Gets or sets the lock indication.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.ChannelMode">
            <summary>
            Gets or sets the channel mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.UserBitsManagement">
            <summary>
            Gets or sets the user bits management.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.AuxBits">
            <summary>
            Gets or sets the maximum audio sample word length, and the use of the auxilary sample bit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.SourceWordLength20Bits">
            <summary>
            Gets or sets the sample word length when the <see cref="P:AudioPrecision.API.IProfessionalStatusBitsSettings.AuxBits">AuxBits</see> property is 20 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.SourceWordLength24Bits">
            <summary>
            Gets or sets the sample word length when the <see cref="P:AudioPrecision.API.IProfessionalStatusBitsSettings.AuxBits">AuxBits</see> property is 24 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.AlignmentLevel">
            <summary>
            Gets or sets the indication of alignment level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.MultichannelMode">
            <summary>
            Gets or sets the multi-channel mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.ChannelNumber">
            <summary>
            Gets or sets the channel when <see cref="P:AudioPrecision.API.IProfessionalStatusBitsSettings.MultichannelMode">MultichannelMode</see> is undefined.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.SamplingFrequency">
            <summary>
            Gets or sets the audio sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.SamplingFrequencyScaling">
            <summary>
            Gets or sets whether the sample frequency has additional scaling applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.DARS">
            <summary>
            Gets or sets the digital audio reference signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.ChannelOrigin">
            <summary>
            Gets or sets a 4 character alphanumeric channel origin string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.ChannelDest">
            <summary>
            Gets or sets a 4 character alphanumeric channel destination string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.LocalAddress">
            <summary>
            Gets or sets a 32-bit integer value for the address of the first sample in the current block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.TimeOfDay">
            <summary>
            Gets or sets a 32-bit integer value for the time of day of the first sample in the current block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Reliability0_5">
            <summary>
            Gets or sets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 0-5.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Reliability6_13">
            <summary>
            Gets or sets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 6-13.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Reliability14_17">
            <summary>
            Gets or sets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 14-17.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsSettings.Reliability18_21">
            <summary>
            Gets or sets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 18-21.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDockableWindow">
            <summary>
            Represents a window which can be docked or undocked from the main application window.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDockableWindow.Dock">
            <summary>
            Docks the window if the window is currently undocked or floating.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDockableWindow.Undock">
            <summary>
            Undocks or floats the window if it is currently docked.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDockableWindow.IsDocked">
            <summary>
            Gets whether or not the window is currently docked.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDockableWindow.Minimize">
            <summary>
            Minimizes the window when undocked.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDockableWindow.Maximize">
            <summary>
            Maximizes the window when undocked.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDockableWindow.Restore">
            <summary>
            Restores the window to its non minimized or maximized state when undocked.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDockableWindow.UndockedWidth">
            <summary>
            Gets or sets the width of the window when undocked.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDockableWindow.UndockedHeight">
            <summary>
            Gets or sets the height of the window when undocked.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDockableWindow.UndockedLeft">
            <summary>
            Gets or sets the left screen position of the window when undocked.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDockableWindow.UndockedTop">
            <summary>
            Gets or sets the top screen position of the window when undocked.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGenEqSettings">
            <summary>
            Represents the settings for an EQ table which can be applied to the signal generator for measurements such as
            <see cref="T:AudioPrecision.API.ISteppedFrequencySweepMeasurement">Stepped Frequency Sweep</see>, <see cref="T:AudioPrecision.API.IFrequencyResponseMeasurement">Frequency Response</see>,
            <see cref="T:AudioPrecision.API.IContinuousSweepMeasurement">Continuous Sweep</see>, and <see cref="T:AudioPrecision.API.IAcousticResponseMeasurement">Acoustic Response</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.EQTableType">
            <summary>
            Sets the EQ table type to one of the <see cref="T:AudioPrecision.API.EQType"/> values.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGenEqSettings.SetEQTable(System.Double[],System.Double[])">
            <summary>
            Sets the frequency,level data for the EQ table.  The arrays for the frequency and level values must be non-null 
            and must have the same length.  The values are specified in the <see cref="P:AudioPrecision.API.IGenEqSettings.FrequencyUnit">FrequencyUnit</see> and 
            <see cref="P:AudioPrecision.API.IGenEqSettings.LevelUnit">LevelUnit</see> properties.
            </summary>
            <param name="frequency">Array of frequency values</param>
            <param name="level">Array of level values</param>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.FrequencyUnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.FrequencyUnit">
            <summary>
            Gets or sets the Frequency unit for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.FrequencyValues">
            <summary>
            Gets the Frequency values for the EQ table.  
            <return>Frequencies in the unit specified by <see cref="P:AudioPrecision.API.IGenEqSettings.FrequencyUnit">FrequencyUnit</see></return>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.LevelUnitList">
            <summary>
            Gets the list of available units for the EQ Level values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.LevelUnit">
            <summary>
            Gets or sets the Level unit for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenEqSettings.LevelValues">
            <summary>
            Gets the Level values for the EQ table.
            <return>Levels in the unit specified by <see cref="P:AudioPrecision.API.IGenEqSettings.LevelUnit">LevelUnit</see></return>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGenEqSettings.ImportData(System.String,System.String,AudioPrecision.API.InputChannelIndex)">
            <summary>
            Imports data from an Excel or CSV file. The data must be in units that are compatible with the measurement.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
            <param name="resultName">The name of the result contained in the file</param>
            <param name="ch">The channel contained in the result.</param>
        </member>
        <member name="M:AudioPrecision.API.IGenEqSettings.ExportData(System.String)">
            <summary>
            Exports the eq data to an Excel or CSV file.  The type of file is determined by the file
            extension.  If the file extension is ".xls" the file is exported to an Excel file, otherwise it
            is exported to a CSV text file.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="M:AudioPrecision.API.IGenEqSettings.ResetTable">
            <summary>
            Resets table to default values.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGenerator">
            <summary>
            Represents the internal signal generator of the APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGenerator.Levels">
            <summary>
            Gets the level settings for the generator channels.
            </summary>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="T:AudioPrecision.API.IEQGeneratorLevels">
            <summary>
            This interface is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEQGeneratorLevels.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGeneratorChannelLevels">
            <summary>
            Represents the collection of generator channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorChannelLevels.Count">
            <summary>
            Gets the number of channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.SetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator to the specified level in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.SetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified level.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.GetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.GetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.GetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelLevels.GetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel, in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorChannelLevels.Unit">
            <summary>
            Gets or sets the current unit for generator levels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorChannelLevels.UnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGeneratorLevels">
            <summary>
            Represents the collection of generator channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorLevels.TrackFirstChannel">
            <summary>
            Gets or sets whether all channels have the same value.  If true, all channels
            have the same value as the first channel.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator offset to the specified value in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified offset.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.GetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.GetOffsetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.GetOffsetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorLevels.GetOffsetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel, in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorLevels.OffsetUnit">
            <summary>
            Gets or sets the current unit for generator offsets.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGeneratorLevels.OffsetUnitList">
            <summary>
            Gets the list of available units for the generator offsets.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatchSineGenerator">
            <summary>
            Represents a generator which produces a sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSineGenerator.Frequency">
            <summary>
            Gets the setting which controls the frequency of the sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSineGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSineGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatchSineWithArbGenerator">
            <summary>
            Represents a generator which supports arbitrary waveforms and produces a sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSineWithArbGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatchSquareWithArbGenerator">
            <summary>
            Represents a generator which supports arbitrary waveforms and produces a sine or square wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSquareWithArbGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISineGenerator">
            <summary>
            Represents a generator which produces a steady sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineGenerator.Frequency">
            <summary>
            Gets the setting which controls the frequency of the sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISineBurstGenerator">
            <summary>
            Represents the settings for a sine wave generator with burst generation.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGenerator.SineBurst">
            <summary>
            Gets the sine burst settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISplitSineGenerator">
            <summary>
            Represents a sine wave generator which can generate two sine waves of different frequencies, 
            or two sine waves where the frequency is the same, but the phase is offset by a specified amount.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitSineGenerator.SplitPhase">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISplitSineGenerator.SineVarPhase">SineVarPhase</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitSineGenerator.SplitFrequency">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISplitSineGenerator.SineDual">SineDual</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitSineGenerator.SineDual">
            <summary>
            Gets the generator settings when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property is "Sine, Dual".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitSineGenerator.SineVarPhase">
            <summary>
            Gets the generator settings when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property is "Sine, Var Phase".
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatchSplitSineGenerator">
            <summary>
            Represents the settings for a signal generator which can generate sine waves of differring frequencies or phases
            and which is used for a batch style measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSplitSineGenerator.Type">
            <summary>
            Gets the current generator type
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISplitSineWithArbGenerator">
            <summary>
            Represents the settings for a signal generator which can generate sine waves of differing frequencies or phases.  This
            generator can also output waveform files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitSineWithArbGenerator.Type">
            <summary>
            Gets the current generator type
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatchSplitSineWithArbGenerator">
            <summary>
            Represents the settings for a signal generator which can generate sine waves of differing frequencies or phases.  This
            generator can also output waveform files.  This generator is used in batch style measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchSplitSineWithArbGenerator.Type">
            <summary>
            Gets the current generator type.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISineWithArbGenerator">
            <summary>
            Represents a generator which produces a steady sine wave and supports arbitrary waveforms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineWithArbGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISquareWithArbGenerator">
            <summary>
            Represents a generator which produces a steady sine or square wave and supports arbitrary waveforms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISquareWithArbGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISplitPhaseGenerator">
            <summary>
            This interface is obsolete.  Use <see cref="T:AudioPrecision.API.ISineVarPhaseGenerator">ISineVarPhaseGenerator</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitPhaseGenerator.PhaseB">
            <summary>
            This setting represents the phase offset between the two generated sine waves.
            To enable this setting, set the Generator.Waveform property to "Split Phase"
            </summary>
            <example>
            This is an example for enabling the Split Phase generator
            <code source="LevelAndGain.vb" region="SplitPhaseGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.ISineVarPhaseGenerator">
            <summary>
            Represents the settings for a sine wave generator where the two sine waves out of phase by a specified offset.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineVarPhaseGenerator.PhaseB">
            <summary>
            This setting represents the phase offset between the two generated sine waves.
            To enable this setting, set the Generator.Waveform property to "Split Phase"
            </summary>
            <example>
            This is an example for enabling the Split Phase generator
            <code source="LevelAndGain.vb" region="SplitPhaseGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.ISplitFrequencyGenerator">
            <summary>
            This interface is obsolete.  Use <see cref="T:AudioPrecision.API.ISineDualGenerator">ISineDualGenerator</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitFrequencyGenerator.FrequencyB">
            <summary>
            This setting represents the frequency of the second sine wave.
            </summary>
            <example>
            This is an example for enabling the Split Frequency generator
            <code source="LevelAndGain.vb" region="SplitFrequencyGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISplitFrequencyGenerator.Split">
            <summary>
            Gets whether or not the two frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISplitFrequencyGenerator.Frequency1ToFrequency2AmplitudeRatio">
            <summary>
            Gets a setting for the ratio of signal amplitudes on channels with each IMD frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGeneratorChannelAssignments">
            <summary>
            Represents the channel assignments for a generator which supports different signal settings on each channel
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelAssignments.GetOutputChannelAssignment(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the channel mappings to determine which signal is presented on which channel.
            </summary>
            <param name="ch">The channel of interest</param>
            <returns>Returns Left or Right</returns>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelAssignments.SetOutputChannelAssignment(AudioPrecision.API.OutputChannelIndex,AudioPrecision.API.OutputChannelAssignment)">
            <summary>
            Sets the desired channel mapping to determine which signal is presented on which channel.
            </summary>
            <param name="ch">The channel of interest</param>
            <param name="assignment">Left or Right</param>
        </member>
        <member name="M:AudioPrecision.API.IGeneratorChannelAssignments.ResetChannelAssignments(AudioPrecision.API.OutputChannelAssignments)">
            <summary>
            Sets all channel assignments to a pre-defined layout
            </summary>
            <param name="setting">The desired channel assignment setting</param>
        </member>
        <member name="T:AudioPrecision.API.ISineDualGenerator">
            <summary>
            Represents a generator which allows two different frequency settings on different channels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineDualGenerator.FrequencyB">
            <summary>
            This setting represents the frequency of the second sine wave.
            </summary>
            <example>
            This is an example for enabling the Split Frequency generator
            <code source="LevelAndGain.vb" region="SplitFrequencyGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISineDualGenerator.Split">
            <summary>
            Gets whether or not the two frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineDualGenerator.Frequency1ToFrequency2AmplitudeRatio">
            <summary>
            Gets a setting for the ratio of signal amplitudes on channels with each IMD frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISineBurstGeneratorSettings">
            <summary>
            Represents the settings for the burst sine generator.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.LengthType">
            <summary>
            Gets or sets how the burst length is calculated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.HighTimeCycles">
            <summary>
            Gets or sets the number of cycles the high level sine signal is active.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.IntervalCycles">
            <summary>
            Gets or sets the length of the entire burst signal in cycles.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.HighTimeSeconds">
            <summary>
            Gets or sets the length of the high level sine signal in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.IntervalSeconds">
            <summary>
            Gets or sets the length of the entire burst signal in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISineBurstGeneratorSettings.LowHighRatio">
            <summary>
            Gets a setting for the ratio between the high and low sine signal levels.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDimImdGenerator">
            <summary>
            Represents a generator which produces two steady sine waves as well as DIM signals (sqare + sine).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdGenerator.AnalogLevels">
            <summary>
            Gets the level settings for the analog generator channels.
            </summary>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="P:AudioPrecision.API.IDimImdGenerator.SineFrequency">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdGenerator.SquareFrequency">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdGenerator.Waveform">
            <summary>
            Gets or sets the type of DIM waveform.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMultitoneGenerator">
            <summary>
            Represents the generator settings for the Multitone Analyzer measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneGenerator.Type">
            <summary>
            Gets the type of generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.  This property is only applicable
            when the input is File.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneGenerator.MultitoneSignalNames">
            <summary>
            Gets the list of multitone signals in the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneGenerator.MultitoneSignal">
            <summary>
            Specifies the multitone signal when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property indicates an 
            encoded audio file will be played by the generator.  The waveform parameters from this signal definition are used to 
            perform the multitone analysis.
            When the internal APx generator is used, or when a non-encoded waveform file is selected, the multitone signal parameters
            are inferred from the waveform selection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneGenerator.LoadMultitoneSignalFile(System.String,System.Boolean)">
            <summary>
            Loads a file which represents a multitone signal from a specified file on disk.  
            Multitone signal files can be waveform files in .WAV, .AGM, or .AGS formats.
            Multitone signal files can also be descriptive files in .CSV or .XLS format.
            </summary>
            <param name="fileName">File to load from</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a signal definition file attached
            to the project with this signal definition file.</param>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneGenerator.MultitoneSignalDefinition">
            <summary>
            Gets the detailed description of the <see cref="P:AudioPrecision.API.IMultitoneGenerator.MultitoneSignal">selected multitone signal</see>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IWaveformGenerator">
            <summary>
            Represents the settings for a generator which can output waveform data which is stored in a disk file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformGenerator.Waveform">
            <summary>
            Gets or sets the name of the selected waveform.  Valid choices for setting can be retreived from the
            <see cref="P:AudioPrecision.API.IWaveformGenerator.WaveformNames">WaveformNames</see> property.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformGenerator.WaveformNames">
            <summary>
            Gets the list of all available waveforms stored in the project file.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IArbitraryGenerator">
            <summary>
            Represents the settings for a signal generator which is capable of playing
            arbitrary waveforms stored in files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IArbitraryGenerator.WaveformFileSettings">
            <summary>
            Gets the settings for playback of a waveform file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IArbitraryGenerator.LoadWaveformFile(System.String)">
            <summary>
            Loads a waveform from the specified file name into the generator, and selects this waveform.  The loaded waveform
            is added to the project and is available to all other measurements in the project once it has been successfully
            loaded.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">An exception is thrown if the wavefom file is invalid or not of a supported type.</exception>
            <param name="fileName">The full path to the waveform file</param>
        </member>
        <member name="M:AudioPrecision.API.IArbitraryGenerator.LoadWaveformFile(System.String,System.Boolean)">
            <summary>
            Loads a waveform from the specified file name into the generator, and selects this waveform.  The loaded waveform
            is added to the project and is available to all other measurements in the project once it has been successfully
            loaded.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">An exception is thrown if the wavefom file is invalid or not of a supported type.</exception>
            <param name="fileName">The full path to the waveform file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a waveform attached
            to the project with this waveform file.</param>
        </member>
        <member name="T:AudioPrecision.API.IGraphLimit">
            <summary>
            Represents a graphical limit for an X-Y graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetValues(AudioPrecision.API.InputChannelIndex,System.String,System.String)">
            <summary>
            Gets the values of the limit in X,Y pairs for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <param name="xUnit">The unit for the x values.</param>
            <param name="yUnit">The unit for the y values.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the values of the limit in X,Y pairs for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetValues(System.Int32,System.String,System.String)">
            <summary>
            Gets the values of the limit in X,Y pairs for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <param name="xUnit">The unit for the x values.</param>
            <param name="yUnit">The unit for the y values.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetValues(System.Int32)">
            <summary>
            Gets the values of the limit in X,Y pairs for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetText(AudioPrecision.API.InputChannelIndex,System.String,System.String)">
            <summary>
            Gethe values of the limit as X,Y pairs of numbers formatted with unit strings
            for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <param name="xUnit">The unit for the x values.</param>
            <param name="yUnit">The unit for the y values.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetText(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gethe values of the limit as X,Y pairs of numbers formatted with unit strings
            for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetText(System.Int32,System.String,System.String)">
            <summary>
            Gethe values of the limit as X,Y pairs of numbers formatted with unit strings
            for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <param name="xUnit">The unit for the x values.</param>
            <param name="yUnit">The unit for the y values.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetText(System.Int32)">
            <summary>
            Gethe values of the limit as X,Y pairs of numbers formatted with unit strings
            for a specified channel.
            </summary>
            <param name="ch">The channel of interest.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetValues(System.Double[],System.Double[])">
            <summary>
            Sets the limit values for all channels of this graph.
            </summary>
            <param name="xValues">The values for points on the X axis</param>
            <param name="yValues">The values for points on the Y axis</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetValues(AudioPrecision.API.InputChannelIndex,System.Double[],System.Double[])">
            <summary>
            Sets the limit values for the specified channel of this graph.
            </summary>
            <param name="ch">The channel</param>
            <param name="xValues">The values for points on the X axis</param>
            <param name="yValues">The values for points on the Y axis</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetValues(System.Int32,System.Double[],System.Double[])">
            <summary>
            Sets the limit values for the specified channel of this graph.
            </summary>
            <param name="ch">The channel</param>
            <param name="xValues">The values for points on the X axis</param>
            <param name="yValues">The values for points on the Y axis</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetXValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the X axis limit values for the graph on the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetYValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the Y axis limit values for the graph on the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetXValues(System.Int32)">
            <summary>
            Gets the X axis limit values for the graph on the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.GetYValues(System.Int32)">
            <summary>
            Gets the Y axis limit values for the graph on the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetX(AudioPrecision.API.InputChannelIndex,System.Int32,System.Double)">
            <summary>
            Updates the X value of a specific point for a specifc channel.
            </summary>
            <param name="channel">The channel</param>
            <param name="index">The index of the point</param>
            <param name="x">The new X value</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetX(System.Int32,System.Int32,System.Double)">
            <summary>
            Updates the X value of a specific point for a specifc channel.
            </summary>
            <param name="channel">The channel</param>
            <param name="index">The index of the point</param>
            <param name="x">The new X value</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetY(AudioPrecision.API.InputChannelIndex,System.Int32,System.Double)">
            <summary>
            Updates the Y value of a specific point for a specific channel.
            </summary>
            <param name="channel">The channel</param>
            <param name="index">The index of the point</param>
            <param name="y">The new Y value</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.SetY(System.Int32,System.Int32,System.Double)">
            <summary>
            Updates the Y value of a specific point for a specific channel.
            </summary>
            <param name="channel">The channel</param>
            <param name="index">The index of the point</param>
            <param name="y">The new Y value</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.Clear">
            <summary>
            Removes all points for all channels from this limit.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.RemoveChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Removes all limit points for the specified channel.
            </summary>
            <param name="channel">The channel</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.RemoveChannel(System.Int32)">
            <summary>
            Removes all limit points for the specified channel.
            </summary>
            <param name="channel">The channel</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.ImportData(System.String)">
            <summary>
            Imports data from an Excel file or CSV file for use as a limit.  The data must
            be in units that are compatible with the measurement this limit is attached to.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.ImportData(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Imports data from an Excel file or CSV file for use as a limit.  The data must
            be in units that are compatible with the measurement this limit is attached to.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
            <param name="limitCurveName">The name of a limit curve already attached to the project, or an empty string, or "None" for no offset curve</param>
            <param name="invertLimitCurve">Whether or not to invert the limit offsest curve data before applying it to the graph</param>
            <param name="invertLimitData">Whether or not to invert the limit file data before applying it to the graph</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.CreateLimitOffsetCurve(System.String,System.String,System.Double[],System.String,System.Double[],System.Boolean)">
            <summary>
            Creates a new limit offset curve and attaches it to the project using the specified name. The lengths of the x and y 
            value arrays must match. The specified units must be compatible with this result. The y values are always specified in a ratio unit like
            x/y or dB.
            </summary>
            <param name="curveName">Name of the project attachment</param>
            <param name="xUnit">The unit of the x value data</param>
            <param name="xValues">Array of double values which indicate the x-axis points</param>
            <param name="yUnit">The unit of the y value data</param>
            <param name="yValues">Array of double values which indicate the y-axis offset values</param>
            <param name="replaceIfExists">True to replace a curve which matches this description or False to fail with an exception</param>
            <returns>Returns the name of the attached project item</returns>
        </member>
        <member name="P:AudioPrecision.API.IGraphLimit.LimitOffsetCurves">
            <summary>
            Gets the set of limit curves that are applicable to this result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.LoadLimitOffsetCurve(System.String,System.Boolean)">
            <summary>
            Adds a limit offset curve to the project (XLS or CSV file). The curve must be specified with units
            which are compatible with the selected result.
            </summary>
            <param name="fileName">The name of the file containing the limit offset curve.</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing limit curve attached
            to the project with this file.</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.ExportData(System.String)">
            <summary>
            Exports the limit data to an Excel or CSV file.  The type of file is determined by the file
            extension.  If the file extension is ".xls" the file is exported to an Excel file, otherwise it
            is exported to a CSV text file.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="P:AudioPrecision.API.IGraphLimit.Enabled">
            <summary>
            Gets or sets whether or not this limit will be checked.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.CopyFromGraphData(AudioPrecision.API.NumberOfGraphPoints)">
            <summary>
            Copies the latest graph data to this limit.
            </summary>
            <param name="dataPoints">The number of points to copy</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.CopyFromGraphData(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.NumberOfGraphPoints)">
            <summary>
            Copies the selected graph data to this limit.
            </summary>
            <param name="dataType">The type of graph data to copy</param>
            <param name="dataIndex">The index of the graph data to copy</param>
            <param name="dataPoints">The number of points to copy</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.OffsetValues(System.Double)">
            <summary>
            Adjust the data values by a specified amount.  The value is specified in the current
            unit for the measurement.
            </summary>
            <param name="adjustment">+/- value applied to all channels</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.OffsetValues(System.Double[])">
            <summary>
            Adjust the data values by a specified amount.  The value is specified in the current
            unit for the measurement.
            </summary>
            <param name="adjustment">array of +/- values, with length matching the number of channels in the data</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.OffsetValues(System.String,System.Boolean)">
            <summary>
            Adjust the data values by applying the specified curve. The curve is applied to all channels.
            </summary>
            <param name="limitCurveName">The name of a limit curve already attached to the project, or an empty string or "None" for no offset curve</param>
            <param name="invertData">Whether or not to invert the limit curve data before applying it to the graph</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.OffsetValues(System.String,System.Boolean,System.Boolean[])">
            <summary>
            Adjust the data values by applying the specified curve.
            </summary>
            <param name="limitCurveName">The name of a limit curve already attached to the project, or an empty string or "None" for no offset curve</param>
            <param name="invertData">Whether or not to invert the limit curve data before applying it to the graph</param>
            <param name="selectedChannels">One boolean value per channel to which the limit will be applied</param>
        </member>
        <member name="P:AudioPrecision.API.IGraphLimit.PassedLimitCheck">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.PassedLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether the data on all graphs associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.PassedLimitCheckOnChannel(System.Int32)">
            <summary>
            Gets whether the data on all graphs associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.PassedLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets whether the data on specific graph associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="dataType">Measured or Imported</param>
            <param name="dataIndex">The acquisition number</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.PassedLimitCheckOnChannel(System.Int32,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets whether the data on specific graph associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="dataType">Measured or Imported</param>
            <param name="dataIndex">The acquisition number</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.HasLimitOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not there is limit data for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if there is limit data for the channel</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphLimit.HasLimitOnChannel(System.Int32)">
            <summary>
            Gets whether or not there is limit data for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if there is limit data for the channel</returns>
        </member>
        <member name="P:AudioPrecision.API.IGraphLimit.ChannelCount">
            <summary>
            Gets the number of channels for this limit.  The number of channels is dependent on the 
            number of channels in graph which contains this limit.  
            Before the measurement is run this will equal the number of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiOutputMetadata">
            <summary>
            Represents the digital metadata settings for the HDMI output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputMetadata.AutoStatusBits">
            <summary>
            Gets or sets whether status bits (C-Bits) are automatically computed by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputMetadata.StatusBits">
            <summary>
            Gets the settings for the status bits (C-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiOutputMetadata.AudioInfoFrames">
            <summary>
            Gets the settings for the HDMI Audio InfoFrame.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiAudioInfoFrameSettings">
            <summary>
            Represents the Audio InfoFrame settings for the HDMI Source output configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.Auto">
            <summary>
            Gets or sets whether APx automatically determines all Audio InfoFrame settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.SpeakerAllocation">
            <summary>
            Gets or sets the HDMI speaker allocation
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.InfoFrameBytes">
            <summary>
            Gets or sets the raw HDMI Audio InfoFrame bytes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.CodingType">
            <summary>
            Gets or sets the audio type transmitted by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.ChannelCount">
            <summary>
            Gets or sets the number of audio channels transmitted by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.SamplingFrequency">
            <summary>
            Gets or sets the sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.SampleSize">
            <summary>
            Gets or sets the size of the transmitted audio words.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.LevelShift">
            <summary>
            Gets or sets the level shift value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameSettings.Downmix">
            <summary>
            Gets or sets whether downmix is permitted.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IClockSyncSettings">
            <summary>
            Represents the settings for the jitter and reference clock settings. These settings only apply to APx instruments with the 
            required HW modules.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.OutputRateType">
            <summary>
            Gets or set how the sample rate of the reference clock will be set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.CustomOutputRate">
            <summary>
            Gets or sets the output sample rate when the <see cref="P:AudioPrecision.API.IClockSyncSettings.OutputRateType">OutputRateType</see> is <see cref="F:AudioPrecision.API.RefSyncOutputRate.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.SyncOutPolarity">
            <summary>
            Set or get the polarity of the sync out signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.SyncOutLevel">
            <summary>
            Set or get the level of the sync out by way of the double object.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.TimebaseReference">
            <summary>
            Select the input to the reference sync, to be none, XLR or BNC.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.ExternalReferenceRate">
            <summary>
            Set or get the frequency that is the frequency of the external reference signal .
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.DarsTermination">
            <summary>
            Select the termination to use for the Ref Input (XLR).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClockSyncSettings.JitterGenerator">
            <summary>
            Gets the settings for the jitter generator.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IExternalTriggerSettings">
            <summary>
            Represents the settings for the APx hardware trigger. These settings only apply to APx instruments with the 
            required HW modules.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExternalTriggerSettings.OutputTriggerSource">
            <summary>
            Set or get the source of the output trigger
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExternalTriggerSettings.OutputTriggerLogicLevel">
            <summary>
            Set or get the level of the output trigger
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExternalTriggerSettings.InputTriggerLogicLevel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IExternalTriggerSettings.InputTriggerThreshold"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExternalTriggerSettings.InputTriggerThreshold">
            <summary>
            Gets or sets the level threshold for the input trigger.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExternalTriggerSettings.InputTriggerEdge">
            <summary>
            Set or get the edge sensitivity of the input trigger
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterGeneratorSettings">
            <summary>
            Represents the settings for the jitter generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.Frequency">
            <summary>
            Set or get jitter frequency
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.Enabled">
            <summary>
            Enable or disable jitter
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.ApplyTo">
            <summary>
            Gets or sets which clock will have jitter applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.PeakLevelSec">
            <summary>
            Set or get jitter level in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.PeakLevelUi">
            <summary>
            Set or get jitter level in UI
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.Waveform">
            <summary>
            Set or get jitter source
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.PeakLevelUnit">
            <summary>
            Set or get jitter output signal unit type
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.OutputEq">
            <summary>
            Gets the settings for jitter EQ curve.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterGeneratorSettings.DefineUIBy">
            <summary>
            Set or get the Sync/Ref output that the UI is derived for.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IJitterGeneratorSettings.GetPeakLevelUI(AudioPrecision.API.RefSyncUI,System.String)">
            <summary>
            Query for the peak level in UI for the Ref or Sync output.
            </summary>
            <param name="refSync">Select Reference out or sync out.</param>
            <param name="unit">Specifices the display unit for the peak level value. Choices are "UI" or "dBUI".</param>
            <returns>Calculated UI or Nan, if the jitter is not on Ref/Sync and UI units.</returns>
        </member>
        <member name="T:AudioPrecision.API.IMeterValues">
            <summary>
            This object contains all reading values recorded by a meter measurement.
            The object offers access to both the numeric and text values, as well
            as conversion functions for retrieving the values in the desired unit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Count">
            <summary>
            The number of channels of recorded data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Item(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Accessory for retrieving a numeric value for a specified channel.
            </summary>
            <param name="channel">The channel number, i.e. 0 for Ch1</param>
            <returns>The double value in the current display unit of the meter</returns>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Item(System.Int32)">
            <summary>
            Accessory for retrieving a numeric value for a specified channel.
            </summary>
            <param name="channel">The channel number, i.e. 0 for Ch1</param>
            <returns>The double value in the current display unit of the meter</returns>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Unit">
            <summary>
            Returns the unit of the meter when the values were recorded, i.e. "Vrms".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.UnitList">
            <summary>
            Returns a list of all valid units for this data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Text">
            <summary>
            Returns an array of values in text form with units and formatting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.TextWithReferenceValue">
            <summary>
            Returns an array of values in text form with units, formatting, and reference
            values, if any.  For example, if the unit is "dBrA", the result might look like
                0.000 dBrA (@ 1.000 Vrms).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Type">
            <summary>
            Returns the type of measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.Name">
            <summary>
            Gets the name of the measurement result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterValues.GetValues(System.String)">
            <summary>
            This function offers the ability to take the recorded results and convert them
            to another unit in the family of units associated with the result. 
            </summary>
            <param name="Unit">A unit within the family of units for this result.  For example, "dBV" is in the same family as "Vrms"</param>
            <returns>an array of doubles converted to the desired unit</returns>
            <exception cref="T:AudioPrecision.API.APException">An APException with error code APError.NonCompatibleUnit if the requested unit is not within the family</exception>
        </member>
        <member name="M:AudioPrecision.API.IMeterValues.GetText(System.String)">
            <summary>
            This function offers the ability to take the recorded results and convert them
            to another unit in the family of units associated with the result. 
            </summary>
            <param name="Unit">A unit within the family of units for this result.  For example, "dBV" is in the same family as "Vrms"</param>
            <returns>an array of text converted to the desired unit with units and formatting</returns>
            <exception cref="T:AudioPrecision.API.APException">An APException with error code APError.NonCompatibleUnit if the requested unit is not within the family</exception>
        </member>
        <member name="M:AudioPrecision.API.IMeterValues.GetAllUnitConvertedText(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Returns all possible unit conversions for a specific channel in the results, formatted with units. 
            </summary>
            <param name="channel">the desired channel</param>
            <returns>Returns text representing the values converted into all units within the result unit family</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterValues.GetAllUnitConvertedText(System.Int32)">
            <summary>
            Returns all possible unit conversions for a specific channel in the results, formatted with units. 
            </summary>
            <param name="channel">the desired channel</param>
            <returns>Returns text representing the values converted into all units within the result unit family</returns>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.UpperLimitEnabled">
            <summary>
            True if an upper limit is defined and enabled for this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.PassedUpperLimitCheck">
            <summary>
            True if the measurement result passed the upper limit check.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.UpperLimitValues">
            <summary>
            Returns the values of the upper limits.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.LowerLimitEnabled">
            <summary>
            True if a lower limit is defined and enabled for this measurement result. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.PassedLowerLimitCheck">
            <summary>
            True if the measurement result passed the lower limit check.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterValues.LowerLimitValues">
            <summary>
            Returns the values of the lower limits.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPdmOutputSettings">
            <summary>
            Represents the settings for the PDM output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.BitClkDir">
            <summary>
            Gets or sets the direction of the bit clock.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.DataEdge">
            <summary>
            Gets or sets which edge or edges the data is sampled on.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.Interpolation">
            <summary>
            Gets or sets the interpolation ratio (a.k.a. oversampling ratio).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.DecimatedRate">
            <summary>
            Gets a setting for the decimated output sample rate when the <see cref="P:AudioPrecision.API.IPdmOutputSettings.BitClkDir">BitClkDir</see> is out.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.ModulatorOrder">
            <summary>
            Gets or sets the order of the modulator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.ModulatorOsr">
            <summary>
            Gets or sets the modulator sample rate multiplier.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.ScaleFreqBy">
            <summary>
            Gets or sets how the clock rate is computed when the <see cref="P:AudioPrecision.API.IPdmOutputSettings.BitClkDir">BitClkDir</see> is in.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.FixedRate">
            <summary>
            Gets the setting for the fixed clock frequency scaling when the <see cref="P:AudioPrecision.API.IPdmOutputSettings.ScaleFreqBy">ScaleFreqBy</see> setting is FixedRate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.LogicLevel">
            <summary>
            Gets the setting for the DC logic level provided at the PDM output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.VddLevel">
            <summary>
            Gets the setting for the DC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.LimitLogicLevel">
            <summary>
            Gets or sets whether or not the Vdd level will limit the Logic level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.VddOn">
            <summary>
            Gets or sets whether or not the Vdd supply voltage is turned on.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.BitClockRate">
            <summary>
            Gets the current bit clock rate reading in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputSettings.EnableOutputs">
            <summary>
            Turn on or off the transmitter outputs.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPdmOutputControlCodes">
            <summary>
            Represents settings for sending PDM control codes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputControlCodes.Count">
            <summary>
            Gets the number of PDM control codes to send.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.Add(System.Byte,System.Int16)">
            <summary>
            Adds a control code value and repetition count to the collection.
            </summary>
            <param name="code">The 8-bit code</param>
            <param name="repetitions">The number of repetitions</param>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.Delete(System.Int32)">
            <summary>
            Removes a control code from the collection.
            </summary>
            <param name="index">The 0-based index</param>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputControlCodes.MsbFirst">
            <summary>
            Gets or sets whether control codes are sent MSB or LSB first.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.GetCode(System.Int32)">
            <summary>
            Gets the specified 8-bit control code value.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>The 8-bit code value</returns>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.GetRepetitions(System.Int32)">
            <summary>
            Gets the specified repetition count for the control code.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>The number of repetitions</returns>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.SetCode(System.Int32,System.Byte)">
            <summary>
            Sets the 8-bit control code value.
            </summary>
            <param name="index">The 0-based index</param>
            <param name="code">The 8-bit code value</param>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.SetRepetitions(System.Int32,System.Int16)">
            <summary>
            Sets the repetition count.
            </summary>
            <param name="index">The 0-based index</param>
            <param name="count">The repeat count</param>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputControlCodes.SendType">
            <summary>
            Gets whether to send a single code until the user requests a stop, or whether to send a series of codes
            as defined by the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.Send">
            <summary>
            Sends the PDM control codes.  If <see cref="P:AudioPrecision.API.IPdmOutputControlCodes.SendType">SendType</see> is <see cref="F:AudioPrecision.API.PdmControlCodeSendType.SingleCodeIndefinitely">SingleCodeIndefinitely</see>, 
            then the function returns immediately until the <see cref="M:AudioPrecision.API.IPdmOutputControlCodes.StopSending">StopSending</see> function is called.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputControlCodes.IsSendingContinuousCode">
            <summary>
            Gets whether or not the APx instrument is currently sending a single PDM control code continuously.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPdmOutputControlCodes.StopSending">
            <summary>
            Stops the APx instrument from sending continuous control codes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmOutputControlCodes.SendEdge">
            <summary>
            Gets or sets whether the control code is sent on the rising or falling edge.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPdmInputSettings">
            <summary>
            Represents the settings for the PDM input connector
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.BitClkDir">
            <summary>
            Gets or sets the direction of the bit clock.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.DataEdge">
            <summary>
            Gets or sets which edge or edges the data is sampled on.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.Decimation">
            <summary>
            Gets or sets the decimation value for computing the decimated sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.DecimatedRate">
            <summary>
            Gets the setting for the decimated sample rate when the <see cref="P:AudioPrecision.API.IPdmInputSettings.BitClkDir">BitClkDir</see> is out.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.LogicLevel">
            <summary>
            Gets the setting for the DC logic level provided at the PDM input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.VddLevel">
            <summary>
            Gets the setting for the DC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.LimitLogicLevel">
            <summary>
            Gets or sets whether or not the Vdd level will limit the Logic level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.VddOn">
            <summary>
            Gets or sets whether or not the Vdd supply voltage is turned on.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.BitClockRate">
            <summary>
            Gets the bit clock rate reading in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.MeasureInputSignalType">
            <summary>
            Get or set type of input signal, Audio or Jitter.
            Note: This is only valid when the APx instrument is capable of measuring Jitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmInputSettings.EnableOutputs">
            <summary>
            Turn on or off the receiver outputs
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferences">
            <summary>
            Represents the reference values
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AnalogOutputReferences">
            <summary>
            Gets the reference values for the analog generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AcousticOutputReferences">
            <summary>
            Gets the reference values when the output is acoustic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AnalogInputReferences">
            <summary>
            Gets the reference values for analog measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.DigitalOutputReferences">
            <summary>
            Gets the reference values for the digital generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.DigitalInputReferences">
            <summary>
            Gets the referene values for digital measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.Frequency">
            <summary>
            Gets the frequency reference.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.CurrentOutputReferences">
            <summary>
            Gets the reference values for signal paths with an output type for generating current.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AcousticInputReferences">
            <summary>
            Gets the reference values for signal paths which are used for measuring acoustic devices.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AutoGeneratorLevel">
            <summary>
            Gets access to functionality which automatically finds the required generator level
            to drive the device under test to a specified distortion level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferences.AcousticOutputLevelRegulation">
            <summary>
            Gets the settings for the regulation algorithm used to compute 
            <see cref="P:AudioPrecision.API.IAcousticOutputReferences.VoltageRatio">AcousticOutputReferences.VoltageRatio</see> value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalogOutputReferences">
            <summary>
            Represents analog generator reference values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.dBrG">
            <summary>
            Gets a setting for the reference level relative to generator output level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.dBm">
            <summary>
            Gets a setting for dBm.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.Watts">
            <summary>
            Gets a setting for the output power level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.VoltageRatio">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IAcousticOutputReferences.VoltageRatio">AcousticOutputReferences.VoltageRatio</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.AcousticReferenceFrequency">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IAcousticOutputReferences.ReferenceFrequency">AcousticOutputReferences.ReferenceFrequency</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputReferences.AcousticRegulationSettings">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IReferences.AcousticOutputLevelRegulation">References.AcousticOutputLevelRegulation</see> instead.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticOutputReferences">
            <summary>
            Represents reference values when the output is acoustic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticOutputReferences.VoltageRatio">
            <summary>
            Gets or sets the ratio of Pascals/Vrms for leveling an acoustic output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticOutputReferences.ReferenceFrequency">
            <summary>
            Gets the reference frequency used to compute the <see cref="P:AudioPrecision.API.IAcousticOutputReferences.VoltageRatio">VoltageRatio</see> value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticOutputReferences.OutputLevelRegulation">
            <summary>
            Gets the settings for the regulation algorithm used to compute <see cref="P:AudioPrecision.API.IAcousticOutputReferences.VoltageRatio">VoltageRatio</see> value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticRegulationSettings">
            <summary>
            Represents the settings for the regulation alogirithm used to determine the Pascals/Vrms ratio for acoustic output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticRegulationSettings.MaxOutputLevel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> or <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticRegulationSettings.TargetLevel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticRegulationSettings.MeasuredChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> instead.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticRegulationSettings.RegulateAndSetOutputLevel">
            <summary>
            Turns the generator on and adjusts the output level until the desired target level is reached, or until an error occurs.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.DbReferenceType">
            <summary>
            Specifies which dB reference value will be used.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DbReferenceType.dBrA">
            <summary>
            dBrA
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DbReferenceType.dBrB">
            <summary>
            dBrB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DbReferenceType.dBSpl1">
            <summary>
            dBSPL1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.DbReferenceType.dBSpl2">
            <summary>
            dBSPL2
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalogInputReferences">
            <summary>
            Represents reference values for analog measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBrA">
            <summary>
            Gets a setting for relative dB.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBrAOffset">
            <summary>
            Gets a setting for the offset value for a dBr reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBrB">
            <summary>
            Gets a setting for relative dB.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBrBOffset">
            <summary>
            Gets a setting for the offset value for a dBr reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBSpl1">
            <summary>
            Gets a setting for relative dB SPL.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBSpl1CalibratorLevel">
            <summary>
            Gets a setting for the calibrator level value for a dB SPL reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBSpl2">
            <summary>
            Gets a setting for relative dB SPL.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBSpl2CalibratorLevel">
            <summary>
            Gets a setting for the calibrator level value for a dB SPL reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.dBm">
            <summary>
            Gets a setting for dBm.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogInputReferences.Watts">
            <summary>
            Gets the input power reference.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogInputReferences.SetReferenceFromInput(AudioPrecision.API.DbReferenceType,System.Int32)">
            <summary>
            Sets the specified dB reference value from the specified input channel.
            </summary>
            <param name="dbReference">Reference Value Type</param>
            <param name="channel">0-based Input Channel</param>
        </member>
        <member name="T:AudioPrecision.API.ICurrentOutputReferences">
            <summary>
            Represents the generator reference settings for current output signal paths.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICurrentOutputReferences.dBrG">
            <summary>
            Gets a setting for the generator reference level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalOutputReferences">
            <summary>
            Represents digital generator reference values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalOutputReferences.dBrG">
            <summary>
            Gets a setting for the reference level relative to the generator output level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalInputReferences">
            <summary>
            Represents reference values for digital measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBrA">
            <summary>
            Gets a setting for relative dB. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBrAOffset">
            <summary>
            Gets a setting for the offset value for a dBr reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBrB">
            <summary>
            Gets a setting for relative dB.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBrBOffset">
            <summary>
            Gets a setting for the offset value for a dBr reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBSpl1">
            <summary>
            Gets a setting for relative dB SPL.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBSpl1CalibratorLevel">
            <summary>
            Gets a setting for the calibrator level value for a dB SPL reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBSpl2">
            <summary>
            Gets a setting for relative dB SPL.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalInputReferences.dBSpl2CalibratorLevel">
            <summary>
            Gets a setting for the calibrator level value for a dB SPL reference value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDigitalInputReferences.SetReferenceFromInput(AudioPrecision.API.DbReferenceType,System.Int32)">
            <summary>
            Sets the specified dB reference value from the specified input channel.
            </summary>
            <param name="dbReference">Reference Value Type</param>
            <param name="channel">0-based Input Channel</param>
        </member>
        <member name="T:AudioPrecision.API.IAcousticInputReferences">
            <summary>
            Represents the reference values for acoustic input signal paths.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticInputReferences.Count">
            <summary>
            Gets the number of referenced input channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetSensitivity(System.Int32,System.Double)">
            <summary>
            Sets the sensitivity in Volts/Pascal on the specified channel.
            </summary>
            <param name="channel">Channel</param>
            <param name="voltsPerPascal">Sensitivity</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetSensitivity(System.Int32,AudioPrecision.API.TransducerTedsChannel)">
            <summary>
            Set the sensitivity in Volts/Pascal on the specified channel from the TEDS
            capable transducer connected to the APx1701 input.
            </summary>
            <param name="channel">The channel</param>
            <param name="tedsChannel">Select the APx1701 input</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.GetSensitivity(System.Int32)">
            <summary>
            Gets the sensitivity in Volts/Pascal for the specified channel.
            </summary>
            <param name="channel">Channel</param>
            <returns>Sensitivity</returns>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetExpectedSensitivity(System.Int32,System.Double)">
            <summary>
            Sets the expected sensitivity value for the specified channel.  Use Double.NaN or the <see cref="M:AudioPrecision.API.IAcousticInputReferences.ResetToDefault">ResetToDefault</see> function 
            to set it back to its default value.
            </summary>
            <param name="channel">The channel</param>
            <param name="voltsPerPascal">The expected sensitivity value in V/Pa</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetExpectedSensitivity(System.Int32,AudioPrecision.API.TransducerTedsChannel)">
            <summary>
            Sets the expected sensitivity value for the specified channel from the TEDS
            capable transducer connected to the APx1701 input.
            </summary>
            <param name="channel">The channel</param>
            <param name="tedsChannel">Select the APx1701 input</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.GetExpectedSensitivity(System.Int32)">
            <summary>
            Gets the expected senstivity value for the specified channel.  If the expected value is not set, the return value will be Double.NaN.
            </summary>
            <param name="channel">The channel</param>
            <returns>The sensitivity in V/Pa or Double.NaN if not specified</returns>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetSensitivityTolerance(System.Int32,System.Double)">
            <summary>
            Sets the tolerance value in dB for the expected sensitivity value.  Use Double.NaN if you do not want the senstivity value to be checked for tolerance.
            </summary>
            <param name="channel">The channel</param>
            <param name="dB">The tolerance value in dB</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.GetSensitivityTolerance(System.Int32)">
            <summary>
            Gets the tolerance value in dB for the expected sensitivity value. 
            </summary>
            <param name="channel">The channel</param>
            <returns>The tolerance value in dB or Double.NaN</returns>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.SetSerialNum(System.Int32,System.String)">
            <summary>
            Sets a serial number or user specified note value for the specified channel.
            </summary>
            <param name="channel">Channel</param>
            <param name="serialNum">Device serial number or note</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.GetSerialNum(System.Int32)">
            <summary>
            Gets the serial number or user specified note value for the specified channel.
            </summary>
            <param name="channel">Channel</param>
            <returns>Device serial number or note</returns>
        </member>
        <member name="P:AudioPrecision.API.IAcousticInputReferences.CalibratorLevel">
            <summary>
            Gets a setting for the microphone calibrator level used to determine the sensitivities.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticInputReferences.CalibratorFrequency">
            <summary>
            Gets or sets the microphone calibrator frequency in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticInputReferences.CalibratorFrequencyTolerance">
            <summary>
            Gets or sets the microphone calibrator frequency tolerance in Hz.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.Calibrate(System.Int32)">
            <summary>
            Takes the current input level reading and uses that reading to set the sensitivity on the specified channel.
            </summary>
            <param name="channel">Channel</param>
        </member>
        <member name="M:AudioPrecision.API.IAcousticInputReferences.ResetToDefault">
            <summary>
            Resets the calibrator frequency and tolerance, and the expected sensitivities and tolerances.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReportDefinition">
            <summary>
            Describes the contents of a report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.Title">
            <summary>
            Gets or sets the title of the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.Notes">
            <summary>
            Gets or sets user defined textual notes which appear in the generated report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.LogoImage">
            <summary>
            Gets the logo image which will appear on the report.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IReportDefinition.LoadLogoImage(System.String)">
            <summary>
            Loads an image to display at the top of the report.
            </summary>
            <param name="fileName">The path to an image file</param>
            <exception cref="T:AudioPrecision.API.APException">Throws an APException if a file with the same name or content already exists in the project.</exception>
        </member>
        <member name="M:AudioPrecision.API.IReportDefinition.LoadLogoImage(System.String,System.Boolean)">
            <summary>
            Loads an image to display at the top of the report.
            </summary>
            <param name="fileName">The path to an image file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing image attached
            to the project with this image file.</param>
        </member>
        <member name="M:AudioPrecision.API.IReportDefinition.ClearLogoImage">
            <summary>
            Removes the image displayed at the top of the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.LogoImageScalePercent">
            <summary>
            Gets or sets the scaling percentage for the logo.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.LogoAlignment">
            <summary>
            Gets or sets the alignment and positioning for the logo.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.ShowPageNumbers">
            <summary>
            Gets or sets whether or not page numbers appear at the bottom of each
            page on the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.ShowDateAndTime">
            <summary>
            Gets or sets whether or not a date and time stamp is displayed
            on the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.Margins">
            <summary>
            Gets the page margins.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.ShowSummary">
            <summary>
            Gets or sets whether or not the report will include a short summary describing the pass/fail
            status of each measurement in the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.ShowDetails">
            <summary>
            Gets or sets whether or not the report will include the details of each measurement in the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.GraphWidth">
            <summary>
            Gets or sets the image width in inches of the graphs in the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportDefinition.GraphHeight">
            <summary>
            Gets or sets the image height in inches of the graphs in the report.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReportMargins">
            <summary>
            Defines the page margins for a report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportMargins.Left">
            <summary>
            Gets or sets the left margin in inches.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportMargins.Right">
            <summary>
            Gets or sets the right margin in inches.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportMargins.Top">
            <summary>
            Gets or sets the top margin in inches.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReportMargins.Bottom">
            <summary>
            Gets or sets the bottom margin in inches.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISampleRateSettlingParametersCollection">
            <summary>
            Represents the settling parameters for the Sample Rate measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISampleRateSettlingParametersCollection.SampleRate">
            <summary>
            Gets the settling parameters for measuring sample rate.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISampleRateMeasurement">
            <summary>
            Represents the settings for a measurement which measures the input sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISampleRateMeasurement.SampleRate">
            <summary>
            Gets the sample rate meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISampleRateMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISampleRateMeasurement.Generator">
            <summary>
            Gets the settings for the sine wave generator for the DC Level measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISampleRateGenerator">
            <summary>
            Represents the settings for the sine wave generator for the Level Ratio measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceCollection">
            <summary>
            Represents the collection of sequences for this project. The Sequencer contains signal paths, measurements, and steps.
            Each sequence defines which set of signal paths, measurements, and steps will be executed when the sequencer runs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceCollection.Count">
            <summary>
            Gets the number of sequences in the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceCollection.Item(System.Int32)">
            <summary>
            Gets the sequence settings object at the specified index.
            </summary>
            <param name="index">0-based index</param>
            <returns>The sequence settings object</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceCollection.Item(System.String)">
            <summary>
            Gets the sequence settings object at the specified index.
            </summary>
            <param name="sequenceName">The name of the sequence</param>
            <returns>The sequence settings object</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceCollection.ActiveSequence">
            <summary>
            Gets the currently selected sequence for the project.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCollection.Activate(System.String)">
            <summary>
            Makes the specified sequence active.
            </summary>
            <param name="sequenceName">The name of the sequence</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCollection.Add(System.String)">
            <summary>
            Adds a new sequence to the project with default settings for which items are selected.
            </summary>
            <param name="name">A unique name for the new sequence</param>
            <returns>The newly added sequence object</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCollection.Delete(System.String)">
            <summary>
            Removes the specified sequence from the project by name.
            </summary>
            <param name="sequenceName">The name of the sequence</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceCollection.Delete(System.Int32)">
            <summary>
            Removes the specified sequence from the project by 0-based index.
            </summary>
            <param name="index">The 0-based index</param>
        </member>
        <member name="T:AudioPrecision.API.SequencePassBehavior">
            <summary>
            Defines what the sequence engine does next when all measurements in a sequence pass limit checks and have no errors.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequencePassBehavior.EndSequence">
            <summary>
            Ends the sequence and returns to the menu
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequencePassBehavior.WaitForNextDevice">
            <summary>
            Waits for the operator to take the next action
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequencePassBehavior.AutomaticallyRestartSequence">
            <summary>
            Automatically starts the sequence again
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SequenceFailBehavior">
            <summary>
            Defines what the sequence engine does next when at least one measurement fails in a sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceFailBehavior.EndSequence">
            <summary>
            Ends the sequence and returns to the menu
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SequenceFailBehavior.AllowRetry">
            <summary>
            Gives the operator the opportunity to try and run the sequence again
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceSettings">
            <summary>
            Represents the settings for a sequence of signal paths, measurements, and steps which are executed
            by the sequencer engine.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.Name">
            <summary>
            Gets or sets the name of this sequence. Each sequence must have a unique name.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.RequiresPassword">
            <summary>
            Gets or sets whether or not this sequence requires a password when it is started.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.AllMeasurementsPassedBehavior">
            <summary>
            Defines what the sequence engine does next when all measurements in a sequence pass limit checks and have no errors.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.AnyMeasurementFailedBehavior">
            <summary>
            Defines what the sequence engine does next when at least one measurement fails in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.MaxRetries">
            <summary>
            Gets or sets the maximum number of retries allowed when the <see cref="P:AudioPrecision.API.ISequenceSettings.AnyMeasurementFailedBehavior"/> property is is set to
            <see cref="F:AudioPrecision.API.SequenceFailBehavior.AllowRetry"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.ClearOperatorResponseVariablesOnRetry">
            <summary>
            Gets or sets whether variable values that were entered by users on a prompt are retained or 
            cleared when the user retries the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.Statistics">
            <summary>
            Gets the collection of statistics gathered for this sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.Variables">
            <summary>
            Gets the collection of variables gathered for this sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.WriteSequenceLogFile">
            <summary>
            Gets or sets whether or not APx will write a data file containing the selected sequence statistics
            and user defined variables.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.SequenceLogFileName">
            <summary>
            Gets or sets the target file name for the sequence statistics data file.  
            See <see cref="P:AudioPrecision.API.ISequenceSettings.WriteSequenceLogFile">WriteStatisicsToCsvFile</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.StartAuxControlSettings">
            <summary>
            Gets the Aux Control Output settings to be applied when this sequence is started.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceSettings.EndAuxControlSettings">
            <summary>
            Gets the Aux Control Output settings to be applied when this sequence is stopped.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceSettings.MoveUp">
            <summary>
            Moves this sequence up in the list, if it is not already the first item.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceSettings.MoveDown">
            <summary>
            Moves this sequence down in the list, if it is not already the last item.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceSettings.Activate">
            <summary>
            Selects this sequence, changing the selected set of measurements and steps according to the settings for this sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStartAuxControlSettings">
            <summary>
            Represents the Aux Control output settings for sequence start.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartAuxControlSettings.StartSequenceOnAuxControlIn">
            <summary>
            Gets or sets whether APx can automatically start the sequence on an Aux Control Input command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartAuxControlSettings.AuxControlInSettingsForSequenceStart">
            <summary>
            Gets the Aux Control Input settings for automatically starting the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStartAuxControlSettings.AuxControlOutSettingsForSequenceStart">
            <summary>
            Gets the Aux Control Output settings.  APx can issue Aux Control output commands when the 
            sequence starts.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceEndAuxControlSettings">
            <summary>
            Represents the Aux Control output settings for sequence end.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForAllMeasurementsPassed">
            <summary>
            Gets the settings for controlling the Aux Control Output when all measurements
            in the sequence completed successfully.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForAnyMeasurementFailed">
            <summary>
            Gets the settings for controlling the Aux Control Output when any measurement 
            failed during the sequence execution.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceEndAuxControlSettings.AuxControlOutSettingsForSequenceCancelled">
            <summary>
            Gets the settings for controlling the Aux Conrol Output when the user cancelled
            the sequence execution.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStatisticsCollection">
            <summary>
            Represents the collection of statistics to be collected for a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatisticsCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatisticsCollection.Item(System.Int32)">
            <summary>
            Gets the specified statistics object.
            </summary>
            <param name="index">0-based index</param>
            <returns>An object which describes the statistic and its value</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatisticsCollection.Item(AudioPrecision.API.SequenceStatisticType)">
            <summary>
            Gets the specified statistics object.
            </summary>
            <param name="index">The matching enumerated value</param>
            <returns>An object which describes the statistic and its value</returns>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStatistic">
            <summary>
            Represents data collected by the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatistic.Id">
            <summary>
            Describes which statistic this object represents.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatistic.Name">
            <summary>
            Gets the user readable name of the statistic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatistic.Enabled">
            <summary>
            Gets or sets whether or not this statistic will be recorded by sequencer and logged to the data file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStatistic.Value">
            <summary>
            Gets the most recently collected value for this statistic.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceVariablesCollection">
            <summary>
            Represents a collection of variables whose values will be collected and logged for a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariablesCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariablesCollection.Item(System.Int32)">
            <summary>
            Gets the specified variable object.
            </summary>
            <param name="index">0-based index</param>
            <returns>An object which describes the variable and its value</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariablesCollection.Item(System.String)">
            <summary>
            Gets the specified variable object.
            </summary>
            <param name="name">The name of the variable</param>
            <returns>An object which describes the variable and its value</returns>
        </member>
        <member name="T:AudioPrecision.API.ISequenceVariable">
            <summary>
            Represents a user defined or system variable and whether or not its value is recorded by the sequencer for
            a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariable.Name">
            <summary>
            Gets the name of the variable.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariable.Enabled">
            <summary>
            Gets whether or not this variable will be recorded by the sequencer and logged to the data file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceVariable.Value">
            <summary>
            Gets the most recently collected value for this variable.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.AutoSaveReportFileNameType">
            <summary>
            Represents the method APx uses to determine the file name of an automatically saved sequence report.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoSaveReportFileNameType.AutoGenerate">
            <summary>
            APx automatically generates a file name based on the project file name.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoSaveReportFileNameType.PromptUser">
            <summary>
            APx will ask the user to enter a name which will be used for the file name.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.AutoSaveReportFileNameType.CustomPrefix">
            <summary>
            The user specifies the base file name.  APx may append additional tags to ensure the file
            name is unique.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceReport">
            <summary>
            Represents the report produced at the end of a sequence execution.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportPdf(System.String)">
            <summary>
            Exports the report to a PDF file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportHtml(System.String)">
            <summary>
            Exports the report to an HTML file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportXls(System.String)">
            <summary>
            Exports the report to an Excel file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportRtf(System.String)">
            <summary>
            Exports the report to an RTF file which can be read by Microsoft Word.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportText(System.String)">
            <summary>
            Exports the report to a text file.  Only text portions appear in this file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportText(System.String,System.Boolean)">
            <summary>
            Exports the report to a text file, appending to an existing file if requested.  Only text portions appear in this file.
            </summary>
            <param name="fileName">The name of the file</param>
            <param name="append">True to append to an existing file, or False to create a new file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportCustom(System.String,System.Boolean)">
            <summary>
            Exports the report to custom Microsoft Word report file.
            </summary>
            <param name="fileName">The name of the file</param>
            <param name="append">True to append to an existing file, or False to create a new file</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.ExportCustom(System.String,AudioPrecision.API.ReportUpdateBehavior)">
            <summary>
            Exports the report to custom Microsoft Word report file.
            </summary>
            <param name="fileName">The name of the file</param>
            <param name="updateBehavior">Specifies how APx responds when the specified file name already exists</param>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.Definition">
            <summary>
            Gets the parameters for the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.Checked">
            <summary>
            Gets whether or not a report will be produced at the end of a sequence execution.
            </summary>
            <example>See <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReport"/> for an example</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.ShowFailedMeasurementResultsOnly">
            <summary>
            Gets or sets whether the report shows all measurements or 
            only measurements which have failed limit checks.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.IncludeApxInstrumentInfo">
            <summary>
            Gets or sets whether to include the APx instrument info in the 
            sequence report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveReport">
            <summary>
            Gets or sets whether to automatically save the report at the end
            of the sequence.
            </summary>
            <example>
            <code source="Sequence.vb" region="AutoSave" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileFormat">
            <summary>
            Gets or sets the file format used when automatically saving
            the report.
            </summary>
            <example>See <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReport"/> for an example</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.CustomReportLayouts">
            <summary>
            Gets the list of custom report layouts for exporting the sequence report.  There are always two custom layouts
            for Word and Excel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.CustomReportLayout">
            <summary>
            Gets or sets the currently selected custom report layout.  This property is only used when 
            the <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileFormat">AutoSaveReportFileFormat</see> property is Custom.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.LoadCustomReportLayout(System.String)">
            <summary>
            Loads a custom report layout from the specified file name into the report, and selects the layout.  The loaded 
            report layout is added to the project and is available through <see cref="P:AudioPrecision.API.ISequenceReport.CustomReportLayouts">CustomReportLayouts</see> property.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">An exception is thrown if the file does not exist.</exception>
            <param name="layoutFileName">The full path to the custom report layout file</param>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileLocation">
            <summary>
            Gets or sets the location for an automatically saved report
            </summary>
            <example>See <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReport"/> for an example</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveUpdateBehavior">
            <summary>
            Gets or sets how APx should manage a report file when a file with the same name already
            exists on disk.  For .CSV reports, the file can be replaced or appended.
            For custom .DOCX reports, the file can be replaced, appended, or the contents of the report
            can be updated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.ShowAutoSavedReport">
            <summary>
            Gets or sets whether the report is displayed to the user when the report is configured to automatically
            save to a file
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileNameType">
            <summary>
            Gets or sets how APx500 sets the file name for the auto-saved report.
            <example>See <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReport"/> for an example</example>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileNamePrefix">
            <summary>
            Gets or sets the name of the auto-saved report file when <see cref="P:AudioPrecision.API.ISequenceReport.AutoSaveReportFileNameType">AutoSaveReportFileNameType</see> is CustomPrefix.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceReport.Reset">
            <summary>
            Clears all saved data from the report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceReport.ReportType">
            <summary>
            Gets or sets how the APx report will be generated.  The APx Default report appears within the APx software and can
            be exported to multiple export formats.  The Microsoft Word report will be saved to a file.  If an appropriate viewing
            application is installed on the computer, the report will be displayed in the associated program, i.e. Microsoft Word 2003 or higher.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceResult">
            <summary>
            Represents the data of a specific measurement result.  This object contains either
            meter values or X,Y values, but not both.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasMeterValues">
            <summary>
            Gets whether or not this result contains meter data.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example.</example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterValues">
            <summary>
            Gets the meter data in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of values</returns>
            <example>
            This example demonstrates getting settled meter readings out of a measurement.
            <code source="SequenceResult.vb" region="GetMeterValues" lang="vbnet"/>
            </example>
            See also <seealso cref="M:AudioPrecision.API.ISequenceResult.GetMeterLowerLimitValues"/>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterReadingNames">
            <summary>
            Gets the names of all of the meter readings contained in this result.  For most results like "RMS Level", this property
            only contains one value.  For results like "Data Distribution", this property contains "Mean" and "Deviation" meter readings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterValues(System.String)">
            <summary>
            Gets the meter readings for all channels for the specified meter reading name.  See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterReadingNames">GetMeterReadingNames</see>.
            </summary>
            <param name="readingName">Name of meter to read from</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterText">
            <summary>
            Gets the meter data as formatted text with units in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterUpperLimitValues">
            <summary>
            Gets the upper limit values for the meter in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of values</returns>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterLowerLimitValues"/> for an example of comparing limit values for settled meter readings.</example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterUpperLimitText">
            <summary>
            Gets the upper limit values for the meter as formatted text with units in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of formatted text limit values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterLowerLimitValues">
            <summary>
            Gets the lower limit values for the meter in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of values</returns>
            <example>
            This example demonstrates comparing limit values for settled meter readings.
            <code source="SequenceResult.vb" region="MeterLimit" lang="vbnet"/>
            </example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetMeterLowerLimitText">
            <summary>
            Gets the lower limit values for the meter as formatted text with units in the unit represented by the MeterUnit property.
            </summary>
            <returns>An array of formatted text limit values</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.MeterUnit">
            <summary>
            Gets the unit in which the meter data was measured.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasXYValues">
            <summary>
            Gets whether or not this result contains X,Y graph data
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasXYYValues">
            <summary>
            Gets whether or not this result contains X, Y(left), Y(right) graph data
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.HasData(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets whether or not this result contains XY or XYY data for the specified data set.
            </summary>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="index">The 1-based index of the data, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y graph data for a specific channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The channel.</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y graph data for a specific channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The channel.</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of values.</returns>
            <example>
            This example demonstrates extracting the X,Y graph values for a measurement
            <code source="SequenceResult.vb" region="XYValues" lang="vbnet"/>
            </example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X axis values for an X,Y graph for a the specified channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X axis values for an X,Y graph for a the specified channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXText(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X axis values for an X,Y graph as formatted text with unit strings for a the specified channel 
            in the units represented by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X axis values for an X,Y graph as formatted text with unit strings for a the specified channel 
            in the units represented by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the Y axis values for an X,Y graph for a the specified channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the Y axis values for an X,Y graph for a the specified channel in the units represented 
            by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetYText(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the Y axis values for an X,Y graph as formatted text with unit strings for a the specified channel 
            in the units represented by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the Y axis values for an X,Y graph as formatted text with unit strings for a the specified channel 
            in the units represented by the XUnit and YUnit properties.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y graph data as text formatted with unit strings for a specific channel 
            in the units represented by the XUnit and YUnit properties on the specified axis.
            The default is the Left Axis.
            </summary>
            <param name="ch">The channel.</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetXYText(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y graph data as text formatted with unit strings for a specific channel 
            in the units represented by the XUnit and YUnit properties on the specified axis.
            The default is the Left Axis.
            </summary>
            <param name="ch">The channel.</param>
            <param name="axis">Left or Right axis</param>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="dataIndex">The 1-based index of the data, i.e. Measured 1</param>
            <returns>An array of values.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.XUnit">
            <summary>
            Gets the X axis unit in which the data was measured.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.YUnit">
            <summary>
            Gets the Y axis unit in which the data was measured.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.LeftUnit">
            <summary>
            Gets the Left axis unit in which the data was measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.RightUnit">
            <summary>
            Gets the Right axis unit in which the data was measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.ResultType">
            <summary>
            Indicates the type of result which generated the data.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.Name">
            <summary>
            Indicates the name of the result which generated the data.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.SignalPathName">
            <summary>
            Indicates the name of the signal path which contains this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.MeasurementName">
            <summary>
            Indicates the name of the measurement which contains this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.MeasurementType">
            <summary>
            Indicates the type of the measurement which contains this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.PassedResult">
            <summary>
            Gets whether or not this result passed all limit checks. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.UpperLimitCheckEnabled">
            <summary>
            Gets whether or not the upper limits were enabled for this measurement result when 
            the measurement was taken.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.LowerLimitCheckEnabled">
            <summary>
            Gets whether or not the lower limits were enabled for this measurement result when 
            the measurement was taken.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.PassedUpperLimitCheck">
            <summary>
            Gets whether or not the data passed any applicable upper limit.
            </summary>
            <example>See ISequence.<see cref="M:AudioPrecision.API.ISequence.Run"/> for an example.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.PassedLowerLimitCheck">
            <summary>
            Gets whether or not the data passed any applicable lower limit.
            </summary>
            <example>See ISequence.<see cref="M:AudioPrecision.API.ISequence.Run"/> for an example.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedUpperLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether the data passed the upper limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedUpperLimitCheckOnChannel(System.Int32)">
            <summary>
            Gets whether the data passed the upper limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedLowerLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether the data passed the lower limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedLowerLimitCheckOnChannel(System.Int32)">
            <summary>
            Gets whether the data passed the lower limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.LimitCheckEnabled(AudioPrecision.API.LimitType,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets whether or not the limit was enabled for this measurement result when 
            the measurement was taken.
            </summary>
            <param name="limit">Type of limit</param>
            <param name="axis">Left or Right axis</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedLimitCheck(AudioPrecision.API.LimitType,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets whether or not the data passed the limit.
            </summary>
            <param name="limit">Type of limit</param>
            <param name="axis">Left or Right axis</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.LimitType,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets whether the data passed the upper limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="limit">Upper or Lower limit</param>
            <param name="axis">Left or Right axis</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedLimitCheckOnChannel(System.Int32,AudioPrecision.API.LimitType,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets whether the data passed the upper limit for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="limit">Upper or Lower limit</param>
            <param name="axis">Left or Right axis</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.UserPassed">
            <summary>
            Gets whether the measurement has been marked as fail by the user if prompted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.UserActive">
            <summary>
            Determine if the particular measurement results passage is determined by the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.ChannelCount">
            <summary>
            Indicates the number of channels of data contained in the result. 
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.ChannelNames">
            <summary>
            Gets the names of the measured input channels.  These names may represent files when the input is specified to be WAV files.
            This array must have the same length as the <see cref="P:AudioPrecision.API.ISequenceResult.ChannelCount">ChannelCount</see> property.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.ExportData(System.String)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasRawTextResults">
            <summary>
            Gets whether or not this result contains raw text result data.
            </summary>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetRawTextResults"/> for an example.</example>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetRawTextResults">
            <summary>
            Returns the results as comma separated value text.
            Not all results provide raw text results.  
            </summary>
            <exception cref="T:AudioPrecision.API.APException"> 
            Exception of type APError.DataNotAvailable will be thown if the result does not support raw text.
            </exception>
            <returns>Returns an array of string values representing the raw text results for this measurement.  This type of
            data is returned for the Metadata Recorder measurment.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasErrorMessage">
            <summary>
            Gets whether or not the sequence result failed with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.ErrorMessage">
            <summary>
            If this sequence result failed with an error, this property returns the error message.  If 
            no error occurred, this property returns an empty string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResult.HasThieleSmallValues">
            <summary>
            Gets whether or not this sequence result has Thiele-Small parameter values.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetThieleSmallValue(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter value, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetThieleSmallValueText(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter value as formatted text, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetThieleSmallLowerLimitValue(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter lower limit value, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.GetThieleSmallUpperLimitValue(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter upper limit value, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedThieleSmallLowerLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets whether or not the specified Thiele-Small parameter value passed the lower limit, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>True if passed, False if not</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResult.PassedThieleSmallUpperLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets whether or not the specified Thiele-Small parameter value passed the upper limit, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>True if passed, False if not</returns>
        </member>
        <member name="T:AudioPrecision.API.ISequenceResultCollection">
            <summary>
            Represents a collection of sequence results.
            <seealso cref="T:AudioPrecision.API.ISequenceResult"/>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.Count">
            <summary>
            Gets the number of results in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.Item(System.Int32)">
            <summary>
            Gets a specific result.
            </summary>
            <param name="index">The index of the result.</param>
            <returns>The specified reusult.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.Item(AudioPrecision.API.MeasurementResultType)">
            <summary>
            Gets a specific result.
            </summary>
            <param name="index">The index of the result.</param>
            <returns>The specified reusult.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.Item(System.String)">
            <summary>
            Gets a specific result.
            </summary>
            <param name="resultName">The name of the result.  If more than one result has the same name, the first result is returned.</param>
            <returns>The specified result.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResultCollection.ContainsResult(AudioPrecision.API.MeasurementResultType)">
            <summary>
            Gets whether or not the collection contains a result of the specified type.
            </summary>
            <param name="resultType">The result type</param>
            <returns>True if a result of the specified type exists.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceResultCollection.ContainsResult(System.String)">
            <summary>
            Gets whether or not the collection contains a result with the specified name.
            </summary>
            <param name="resultName">The result name</param>
            <returns>True if a result with the requested name exists in the collection</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.PassedLimitChecks">
            <summary>
            Gets whether or every sequence result in the collection passed limit checks.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.HasErrors">
            <summary>
            Gets whether one or more sequence results failed due to an error condition.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultCollection.ErrorMessage">
            <summary>
            Gets the error message from the sequence results.  This string will be blank if no errors occurred.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStep">
            <summary>
            Represents the base class for all sequence step types.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStep.Name">
            <summary>
            Gets the name of the sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStep.StepType">
            <summary>
            Gets the type of the sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStep.CanDelete">
            <summary>
            Gets whether or not this sequence step can be removed from the measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStep.Delete">
            <summary>
            If the <see cref="P:AudioPrecision.API.ISequenceStep.CanDelete">CanDelete</see> property indicates that this step can be removed, this
            function removes the step from the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStep.StepIndex">
            <summary>
            Gets the 0-based index of the step in the list of steps for a measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStep.CopyToClipboard">
            <summary>
            Copies the step to the clipboard so it can be pasted into another measurement.  
            See <see cref="M:AudioPrecision.API.ISequenceStepCollectionBase.PasteStepsFromClipboard(System.Int32)">ISequenceStepCollection.PasteStepsFromClipboard</see>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStep.MoveTo(System.Int32)">
            <summary>
            Moves the sequence step to the specified index in the list of steps for the measurement.
            </summary>
            <param name="index">The 0-based requested index.</param>
        </member>
        <member name="T:AudioPrecision.API.IMessageStepBase">
            <summary>
            Represents settings for sequence steps which have a prompt
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMessageStepBase.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMessageStepBase.Text">
            <summary>
            Gets or sets the unformatted text of the prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMessageStepBase.RTF">
            <summary>
            Gets or sets the text of the prompt formatted with RTF characters.  
            RTF may include information about fonts and special characters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMessageStepBase.Image">
            <summary>
            Gets the image associated with this prompt. This value is Null if no image is specified.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMessageStepBase.LoadImageFile(System.String,System.Boolean)">
            <summary>
            Loads an image into the project and selects it into the <see cref="P:AudioPrecision.API.IMessageStepBase.Image">Image</see> property.
            </summary>
            <param name="fileName">The path to an image file</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing image attached
            to the project with this image file.</param>
        </member>
        <member name="P:AudioPrecision.API.IMessageStepBase.SelectedImage">
            <summary>
            Gets or sets the name of the image for the prompt.  Images can be added to the project using the <see cref="M:AudioPrecision.API.IMessageStepBase.LoadImageFile(System.String,System.Boolean)">LoadImageFile</see> function.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPromptStepBase">
            <summary>
            Represents the settings for sequence steps which display a prompt to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepBase.PlayAlertSound">
            <summary>
            Gets or sets whether or not to play a sound when the prompt is displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepBase.TimeoutEnabled">
            <summary>
            Gets or sets whether or not the prompt will dismiss itself automatically after a the time specified in 
            the <see cref="P:AudioPrecision.API.IPromptStepBase.TimeoutInSeconds">TimeoutInSeconds</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepBase.TimeoutInSeconds">
            <summary>
            Gets or sets the amount of time before the prompt automatically dismisses itself.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStepBase.Icon">
            <summary>
            Gets or sets the icon to display on the prompt.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPromptStep">
            <summary>
            Represents an informative prompt to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.ShowOK">
            <summary>
            Gets or sets whether the prompt displays an OK button to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.ShowCancel">
            <summary>
            Gets or sets wether or not the prompt displays a Cancel button to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.EditGeneratorSettingsEnabled">
            <summary>
            Gets or sets whether or not the user can edit generator settings when a prompt is displayed. This property only
            applies to measurements which have a "Generator On" button.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.SetdBrA">
            <summary>
            Gets or sets whether or not to save the current input level on the specified channel to the dBrA reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.dBrAChannel">
            <summary>
            Gets or sets whether or the channel to use to measure the input level for the dBrA reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.SetdBrB">
            <summary>
            Gets or sets whether or not to save the current input level on the specified channel to the dBrB reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.dBrBChannel">
            <summary>
            Gets or sets whether or the channel to use to measure the input level for the dBrB reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.SetdBSpl1">
            <summary>
            Gets or sets whether or not to save the current input level on the specified channel to the dBSPL1 reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            When the signal path is acoustic, the property enables storing a single dBSPL value for the channel specified by the
            <see cref="P:AudioPrecision.API.IPromptStep.dBSpl1Channel">dBSpl1Channel</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.dBSpl1Channel">
            <summary>
            Gets or sets whether or the channel to use to measure the input level for the dBSPL1 reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            When the signal path is acoustic, the property specifies which channel to observe for setting dBSPL reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.SetdBSpl2">
            <summary>
            Gets or sets whether or not to save the current input level on the specified channel to the dBSPL2 reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.dBSpl2Channel">
            <summary>
            Gets or sets whether or the channel to use to measure the input level for the dBSPL2 reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.SetdBrG">
            <summary>
            Gets or sets whether or not to save the current output level on the specified channel to the dBrG reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.dBrGChannel">
            <summary>
            Gets or sets whether or the channel to use for the output level for the dBrG reference value.
            This property only applies when the prompt is attached to the Reference Levels measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptStep.Inputs">
            <summary>
            Gets the collection of user entered input responses.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPromptInputCollection">
            <summary>
            Represents the set of user input responses on a prompt dialog.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInputCollection.Count">
            <summary>
            Gets the number of PromptInputs in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInputCollection.Item(System.Int32)">
            <summary>
            Gets a prompt input.
            </summary>
            <param name="index">The index of the prompt input</param>
            <returns>A IPromptInput.</returns>
        </member>
        <member name="M:AudioPrecision.API.IPromptInputCollection.Add(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Adds a new prompt input
            </summary>
            <param name="label">Prompt Label</param>
            <param name="persist">Retain input between each sequence run.</param>
            <param name="required">Require input to dismiss the prompt.</param>
            <param name="variableName">Name of variable that retains the input response.</param>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IPromptInputCollection.Remove(System.Int32)">
            <summary>
            Remove a prompt input
            </summary>
            <param name="index">Index of the prompt input.</param>
        </member>
        <member name="M:AudioPrecision.API.IPromptInputCollection.Remove(AudioPrecision.API.IPromptInput)">
            <summary>
            Remove a prompt input
            </summary>
            <param name="input">IPromptInput to remove</param>
        </member>
        <member name="M:AudioPrecision.API.IPromptInputCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move an prompt input
            </summary>
            <param name="fromIndex">Index of prompt input to move.</param>
            <param name="toIndex">Index of destination</param>
        </member>
        <member name="P:AudioPrecision.API.IPromptInputCollection.VariableNames">
            <summary>
            Gets all available User Variable names.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPromptInput">
            <summary>
            Represents the settings for a user response on a prompt dialog box.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInput.Label">
            <summary>
            Gets or sets the input prompt label.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInput.Persist">
            <summary>
            Gets or sets whether the input is retained between sequence runs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInput.Required">
            <summary>
            Gets or sets whether the input is required before the sequence can continue.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInput.VariableName">
            <summary>
            Gets or sets the name of the variable whose value will be set by the input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPromptInput.DefaultResponse">
            <summary>
            Gets or sets the default response of the user.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.InputStepType">
            <summary>
            Specifies whether the user is prompted to type in a response, or to press a Pass or Fail button.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputStepType.PromptUserForInput">
            <summary>
            User is prompted to type in a response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputStepType.PromptUserForPassFail">
            <summary>
            User is prompted to press a Pass or Fail button
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInputStep">
            <summary>
            Represents a prompt the user which requires the user's input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStep.InputType">
            <summary>
            Gets or sets the type or response expected from the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStep.PassButtonLabel">
            <summary>
            Gets or sets the label of the Pass button.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStep.FailButtonLabel">
            <summary>
            Gets or sets the label of the Fail button.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputStep.UserResponse">
            <summary>
            Gets the response the user typed into the input prompt edit field.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProgramStep">
            <summary>
            Represents an external program which runs when a measurement is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.Command">
            <summary>
            Gets or sets the command to be executed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProgramStep.CreateCommandChange(System.String)">
            <summary>
            For internal use only.
            </summary>
            <param name="command">New value for the <see cref="P:AudioPrecision.API.IProgramStep.Command">Command</see> property</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.Arguments">
            <summary>
            Gets or sets the command line arguments to the program.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProgramStep.CreateArgumentsChange(System.String)">
            <summary>
            For internal use only.
            </summary>
            <param name="arguments">New value for the <see cref="P:AudioPrecision.API.IProgramStep.Arguments">Arguments</see> property</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.WorkingDirectory">
            <summary>
            Gets or sets the working directory for the program.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IProgramStep.CreateWorkingDirectoryChange(System.String)">
            <summary>
            For internal use only.
            </summary>
            <param name="workingDirectory">New value for the <see cref="P:AudioPrecision.API.IProgramStep.WorkingDirectory">WorkingDirectory</see> property</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.WaitForExitBehavior">
            <summary>
            Gets or sets whether or not the sequence waits for the program to exit before
            moving on to the next step.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.ProgramOutputVariable">
            <summary>
            Gets or sets the name of the variable into which the output of the program will be saved after the program exits.
            This property only applies if the <see cref="P:AudioPrecision.API.IProgramStep.WaitForExitBehavior"/> value is <see cref="F:AudioPrecision.API.ProgramStepWaitBehavior.WaitForExitStoreOutputInVariable"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.ExpectedOutput">
            <summary>
            If the <see cref="P:AudioPrecision.API.IProgramStep.WaitForExitBehavior">WaitForExitBehavior</see> property is set
            to WaitForExitValidateResponse, this property gets or sets the expectd output of the program.
            If the actual output does not match the expected output, the sequence fails with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.ActualOutput">
            <summary>
            Gets the console output from the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.RanToCompletion">
            <summary>
            Gets whether or not the program completed.  This is false if the path to the program was incorrect if the program
            failed due to some other error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProgramStep.Timeout">
            <summary>
            Gets or sets the timeout value in seconds before the sequencer attempts to abort the program step.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementStep">
            <summary>
            Represents the measurement itself. This step cannot be disabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer. For most measurement steps, this property has no effect because the step cannot be disabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStep.DataSetNoteType">
            <summary>
            Gets or sets how data set notes are applied when this step is executed in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStep.DataSetNotePrompt">
            <summary>
            Gets or sets the text to display on the input prompt when requesting the user to enter a data note.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementStep.DataSetNoteCustomText">
            <summary>
            Gets or sets the custom data note.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDelayStep">
            <summary>
            Represents a user defined delay period between sub-steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDelayStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetAuxControlOutputStep">
            <summary>
            Represents the settings for a sequence step where APx issues an Aux Control Output command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStep.Message">
            <summary>
            Gets or sets the progress message displayed to the user
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISetAuxControlOutputStep.GetPinState(System.Int32)">
            <summary>
            Gets the desired output state of the aux control output pin
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <returns>The desired output state of the requested pin</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetAuxControlOutputStep.SetPinState(System.Int32,AudioPrecision.API.AuxControlState)">
            <summary>
            Sets the desired output state of the aux control output pin.
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <param name="pinState">The desired output state of the requested pin</param>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStep.ByteValue">
            <summary>
            Gets or sets the all bit values.  If one or more bits is AuxControlState.DontCare, the returned value will be 0.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetAuxControlOutputStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetDcxControlOutputStep">
            <summary>
            Represents the settings for a sequence step where APx issues an DCx Control Output command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStep.Message">
            <summary>
            Gets or sets the progress message displayed to the user
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStep.Port">
            <summary>
            Set or get the Port output selection for the DCx.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.ISetDcxControlOutputStep.GetPinState(System.Int32)">
            <summary>
            Gets the desired output state of the aux control output pin
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <returns>The desired output state of the requested pin</returns>
        </member>
        <member name="M:AudioPrecision.API.ISetDcxControlOutputStep.SetPinState(System.Int32,AudioPrecision.API.AuxControlState)">
            <summary>
            Sets the desired output state of the aux control output pin.
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <param name="pinState">The desired output state of the requested pin</param>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxControlOutputStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetDcxDcvOutputStep">
            <summary>
            Represents the settings for a sequence step where APx issues an DCx DCv Output command.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.Message">
            <summary>
            Gets or sets the progress message displayed to the user
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.Port">
            <summary>
            Gets or sets the DCv channel to control
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.Level">
            <summary>
            Gets or sets the level of the given DCV
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.VoltState">
            <summary>
            Gets or sets the state of the DCv
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDcxDcvOutputStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IUserEvaluationOfResultStep">
            <summary>
            Represents the settings of the sequence step for determining the pass or fail of a specific
            measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IUserEvaluationOfResultStep.ResultName">
            <summary>
            Gets or sets the name of the result to be exported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IUserEvaluationOfResultStep.ResultNames">
            <summary>
            Gets the list of results by name that are part of the selected measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IUserEvaluationOfResultStep.UserPassed">
            <summary>
            Gets if the user marked this step as a failure.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMakeResultVisibleStep">
            <summary>
            Represents the settings for a sequence step which makes a user specified result active.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMakeResultVisibleStep.ResultName">
            <summary>
            Gets or sets the name of the result to be exported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMakeResultVisibleStep.ResultNames">
            <summary>
            Gets the list of results by name that are part of the selected measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMakeResultVisibleStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalSyncDelayStep">
            <summary>
            Represents a step which waits for the digital input to lock, waiting for up to the user specified timeout value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStartAnalogSineWaveGeneratorStep">
            <summary>
            Represents a step which allows the user to control the independent analog output generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartAnalogSineWaveGeneratorStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStartAnalogSineWaveGeneratorStep.On">
            <summary>
            Gets or sets whether the analog sine monitor is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStopAnalogSineWaveGeneratorStep">
            <summary>
            Represents the settings for a sequence step which allows the user to turn off the independent analog output generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopAnalogSineWaveGeneratorStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAppendedMeasurementStep">
            <summary>
            Represents an additional call to execute the measurement which appends the new results to the graphs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.Waveform">
            <summary>
            Gets or sets the name of the waveform which will be used when the measurement runs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.Waveforms">
            <summary>
            Gets the list of valid waveforms which can be selected for the measurement step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.DataSetNoteType">
            <summary>
            Gets or sets how data set notes are applied when this step is executed in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.DataSetNotePrompt">
            <summary>
            Gets or sets the text to display on the input prompt when requesting the user to enter a data note.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAppendedMeasurementStep.DataSetNoteCustomText">
            <summary>
            Gets or sets the custom data note.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEnableGeneratorStep">
            <summary>
            Represents an additional call to execute the measurement which appends the new results to the graphs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableGeneratorStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IConnectBluetoothDeviceStep">
            <summary>
            Represents a sequence step for connecting a Bluetooth device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDisconnectBluetoothDeviceStep">
            <summary>
            Represents a sequence step in which the connected Bluetooth device is disconnect from APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDisconnectBluetoothDeviceStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetBluetoothTransmitPowerStep">
            <summary>
            Represents the Bluetooth Transmit Power sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetBluetoothTransmitPowerStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetBluetoothTransmitPowerStep.Power">
            <summary>
            Gets or sets the Transmit Power setting.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStep">
            <summary>
            Represents the Bluetooth AVRCP Absolute Volume sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAvrcpSetAbsoluteVolumeStep.AbsoluteVolume">
            <summary>
            Gets or set the absolute volume level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IA2dpSourceStep">
            <summary>
            Represents a sequence step for controlling the A2DP Source profile for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSourceStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSourceStep.StreamingStarted">
            <summary>
            Gets or sets whether audio streaming is started.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHfpAudioGatewayStep">
            <summary>
            Represents a sequence step for controlling the HFP Audio Gateway profile for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpAudioGatewayStep.Command">
            <summary>
            Gets or sets the desired HFP command.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHspAudioGatewayStep">
            <summary>
            Represents a sequence step for controlling the HSP Audio Gateway profile for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspAudioGatewayStep.Command">
            <summary>
            Gets or sets the desired HSP command.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IA2dpSinkStep">
            <summary>
            Represents a sequence step for controlling the A2DP Sink profile for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSinkStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSinkStep.Command">
            <summary>
            Gets or sets the desired AVRCP command to issue to the connected device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IA2dpSinkStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IATCommandStep">
            <summary>
            Represents a squence step for sending an AT command to a Bluetooth device
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IATCommandStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IATCommandStep.ATCommand">
            <summary>
            Gets or sets the AT command to issue to the connected device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IATCommandStep.Delay">
            <summary>
            Gets or sets the duration of the delay in seconds
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IATCommandStep.Wait">
            <summary>
            Gets or sets whether or not APx waits for an OK/ERROR response from the AT command.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHfpHandsFreeStep">
            <summary>
            Represents a sequence step for sending AT commands to a Bluetooth device when APx is configured
            as an HFP Hands Free device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHspHeadsetATCommandStep">
            <summary>
            Represents a sequence step for sending AT commands to a Bluetooth device when APx
            is configured as an HSP Headset device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHfpAudioGatewayATCommandStep">
            <summary>
            Represents a sequence step for sending AT commands to a Bluetooth device when APx is configured
            as an HFP Audio Gateway device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHspAudioGatewayATCommandStep">
            <summary>
            Represents a sequence step for sending AT commands to a Bluetooth device when APx is configured
            as an HSP Audio Gateway device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHfpHandsFreeCommandStep">
            <summary>
            Represents a sequence step for controlling the HFP Hands Free profile for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeCommandStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHfpHandsFreeCommandStep.Command">
            <summary>
            Gets or sets the hands free command issued to the connected device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHspHeadsetStep">
            <summary>
            Represents a sequence step for controlling the HSP Headset profile for APx.  
            When this step is enabled, APx will simulate pushing the "button" on a HSP Headset device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHspHeadsetStep.Command">
            <summary>
            Gets or sets HSP command issued by APx when APX is configured as an HSP Headset device
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IExportResultDataStep">
            <summary>
            Represents a sequence step for exporting measurement result data in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.ResultName">
            <summary>
            Gets or sets the name of the result to be exported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.ResultNames">
            <summary>
            Gets the list of results by name that are part of the selected measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.DataType">
            <summary>
            Gets or sets the data type to be exported, i.e. Measured or Imported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.DataIndex">
            <summary>
            Gets or sets the 1-based data index, i.e. Measured 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.NumberOfPoints">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IExportResultDataStep.ExportSpecification"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.FileName">
            <summary>
            Gets or sets the file name the data will be written to.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.Append">
            <summary>
            Gets or sets whether or not the file is appended, or replaced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.ExportDataSpecifications">
            <summary>
            Gets all of the X,Y data export specifications that are attached to the project which are compatible with this graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IExportResultDataStep.LoadExportSpecification(System.String,System.Boolean)">
            <summary>
            Loads an export specification from a file and attaches it to the project.  
            </summary>
            <param name="fileName">File name</param>
            <param name="replaceIfExists">True to automatically replace matching item</param>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.ExportSpecification">
            <summary>
            Gets or sets the selected export specification, or "Same as Graph" if none is specified.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IExportResultDataStep.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets the channel enabled for exporting.
            </summary>
            <param name="ch">Channel</param>
            <param name="enabled">True if the channel data should be included in the exported data.</param>
        </member>
        <member name="M:AudioPrecision.API.IExportResultDataStep.GetChannelEnabled(System.Int32)">
            <summary>
            Gets the channel enabled state.
            </summary>
            <param name="ch">Channel</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.AppendYDataOnly">
            <summary>
            Gets or sets whether the X data will appear only in the first column for all channels and all appended measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.IncludeSummarySheet">
            <summary>
            Gets or sets whether to include the summary sheet for the result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.SheetPerChannel">
            <summary>
            Gets or sets whether to create a seperate sheet for each channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.InsertVariableInHeader">
            <summary>
            Gets or sets whether to include a variable in the header.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IExportResultDataStep.VariableInHeader">
            <summary>
            Gets or sets the variable name to include in the header.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImportResultDataStep">
            <summary>
            Represents a sequence step for importing data into a measurement result in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStep.ResultName">
            <summary>
            Gets or sets the name of the result into which the data will be imported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStep.ResultNames">
            <summary>
            Gets the list of results by name that are part of the selected measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStep.FileName">
            <summary>
            Gets or sets the file name to import.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportResultDataStep.Notes">
            <summary>
            Gets or sets the data set note associated with this imported data.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImportLimitsDataStep">
            <summary>
            Represents a sequence step for importing limits into a measurement result in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.ResultName">
            <summary>
            Gets or sets the name of the result into which the limits will be imported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.ResultNames">
            <summary>
            Gets the list of results by name that are part of the selected measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.FileName">
            <summary>
            Gets or sets the file name to import.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.ImportToUpperLimit">
            <summary>
            Gets or sets whether or not the limit data is applied to the upper limit of the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.UpperLimitOffsetCurve">
            <summary>
            Gets or sets the name of the limit offset curve which is applied to shape the imported limit data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.InvertUpperLimitOffsetCurve">
            <summary>
            Gets or sets whether or not the imported limit data curve is inverted before it is applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.ImportToLowerLimit">
            <summary>
            Gets or sets whether or not the limit data is applied to the lower limit of the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.LowerLimitOffsetCurve">
            <summary>
            Gets or sets the name of the limit offset curve which is applied to shape the imported limit data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.InvertLowerLimitOffsetCurve">
            <summary>
            Gets or sets whether or not the limit data is applied to the lower limit of the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.LimitOffsetCurves">
            <summary>
            Gets the set of limit curves that are applicable to the result in the <see cref="P:AudioPrecision.API.IImportLimitsDataStep.ResultName"/> property.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IImportLimitsDataStep.LoadLimitOffsetCurve(System.String,System.Boolean)">
            <summary>
            Adds a limit offset curve to the project (XLS or CSV file). The curve must be specified with units
            which are compatible with the selected result.
            </summary>
            <param name="fileName">The name of the file containing the limit offset curve.</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace an existing limit curve attached
            to the project with this file.</param>
        </member>
        <member name="M:AudioPrecision.API.IImportLimitsDataStep.CreateLimitOffsetCurve(System.String,System.String,System.Double[],System.String,System.Double[],System.Boolean)">
            <summary>
            Creates a new limit offset curve and attaches it to the project using the specified name. The lengths of the x and y 
            value arrays must match. The specified units must be compatible with this result. The y values are always specified in a ratio unit like
            x/y or dB.
            </summary>
            <param name="curveName">Name of the project attachment</param>
            <param name="xUnit">The unit of the x value data</param>
            <param name="xValues">Array of double values which indicate the x-axis points</param>
            <param name="yUnit">The unit of the y value data</param>
            <param name="yValues">Array of double values which indicate the y-axis offset values</param>
            <param name="replaceIfExists">True to replace a curve which matches this description or False to fail with an exception</param>
        </member>
        <member name="P:AudioPrecision.API.IImportLimitsDataStep.TrackFirst">
            <summary>
            Enable or disable the application of limits to first channel.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISendPdmControlCodesStep">
            <summary>
            Represents a sequence step for sending control code values when the output connector is PDM.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStep.Count">
            <summary>
            Gets the number of control codes to send.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.Add(System.Byte,System.Int16)">
            <summary>
            Adds a control code to the list.
            </summary>
            <param name="code">The 8-bit control code value</param>
            <param name="repetitions">The number of repetitions</param>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.Delete(System.Int32)">
            <summary>
            Deletes the specified code from the list.
            </summary>
            <param name="index">The 0-based index to remove</param>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStep.MsbFirst">
            <summary>
            Gets or sets whether control codes are sent MSB or LSB first.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.GetCode(System.Int32)">
            <summary>
            Gets the 8-bit code value at the specified index.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>The code value</returns>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.GetRepetitions(System.Int32)">
            <summary>
            Gets the number of times to send the code.
            </summary>
            <param name="index">The 0-based index</param>
            <returns>The repetition value</returns>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.SetCode(System.Int32,System.Byte)">
            <summary>
            Sets the 8-bit code value at the specified index.
            </summary>
            <param name="index">The 0-based index</param>
            <param name="code">The code value</param>
        </member>
        <member name="M:AudioPrecision.API.ISendPdmControlCodesStep.SetRepetitions(System.Int32,System.Int16)">
            <summary>
            Sets the number of times to send the code at the specified index.
            </summary>
            <param name="index">The 0-based index</param>
            <param name="count">The repetition count</param>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodesStep.Edge">
            <summary>
            Gets or sets whether the control code is sent on the rising or falling edge.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStep">
            <summary>
            Represents a sequence step for sending PDM control codes until the user requests a stop.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStep.MsbFirst">
            <summary>
            Gets or sets whether control codes are sent MSB or LSB first.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStep.CodeValue">
            <summary>
            Gets or sets the 8-bit code value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendPdmControlCodeIndefinitelyStep.Edge">
            <summary>
            Gets or sets whether the control code is sent on the rising or falling edge.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStopSendingPdmControlCodeStep">
            <summary>
            Represents a sequence stop to stop sending PDM control codes continuously.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStopSendingPdmControlCodeStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetSwitcherConfigurationStep">
            <summary>
            Represents a sequence step for configuring Audio Precision switcher devices.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetSwitcherConfigurationStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetSwitcherConfigurationStep.OutputSwitcherConfiguration">
            <summary>
            Gets the settings for output switcher control.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetSwitcherConfigurationStep.InputSwitcherConfiguration">
            <summary>
            Gets the settings for input switcher control.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEnableWidebandSpeechStep">
            <summary>
            Represents a sequence step for enabling or disabling the Bluetooth wideband speech codec for SCO audio connections.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableWidebandSpeechStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableWidebandSpeechStep.WidebandSpeechEnabled">
            <summary>
            Gets or sets whether or not the wideband speech (mSBC) codec is enabled for SCO audio connections.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRefreshDefinedResultsStep">
            <summary>
            Represents a sequence step for refreshing data for one or more user defined measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRefreshDefinedResultsStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISendHdmiCecMessageStep">
            <summary>
            Represents a sequence step for sending HDMI CEC messages.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.SendFrom">
            <summary>
            Gets or sets which physical HDMI connector is used to send the message.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageFollower">
            <summary>
            Gets or sets the target device on the CEC bus to receive the message.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageType">
            <summary>
            Gets or sets the type of CEC message to send.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageOpcode">
            <summary>
            Gets or sets the op code of the CEC message when the <see cref="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageType">CecMessageType</see> property is <see cref="F:AudioPrecision.API.CecMessageSendType.Custom">CecMessageSendType.Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageOperands">
            <summary>
            Gets or sets the operands of the CEC message when the <see cref="P:AudioPrecision.API.ISendHdmiCecMessageStep.MessageType">CecMessageType</see> property is <see cref="F:AudioPrecision.API.CecMessageSendType.Custom">CecMessageSendType.Custom</see>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImportOutputEqCurveStep">
            <summary>
            Represents a sequence step for importing an EQ curve used to level the output signal for a signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportOutputEqCurveStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportOutputEqCurveStep.Filename">
            <summary>
            Gets or sets the full path to the EQ data file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportOutputEqCurveStep.Invert">
            <summary>
            Gets or sets whether or not the data in the file is inverted before it is imported into APx.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImportGeneratorEqCurveStep">
            <summary>
            Represents a sequence step for importing an EQ curve into a measurement generator.
             </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportGeneratorEqCurveStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportGeneratorEqCurveStep.Filename">
            <summary>
            Gets or sets the full path to the EQ data file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportGeneratorEqCurveStep.Invert">
            <summary>
            Gets or sets whether or not the data in the file is inverted before it is imported into APx.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISelectInputEqCurveStep">
            <summary>
            Represents a sequence step for selecting an EQ curve into a signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.Selection">
            <summary>
            Gets or sets whether the EQ curve selection is the path to a file on disk or a curve already attached to the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.ProjectItemName">
            <summary>
            Gets or sets the name of the EQ curve project attachment.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISelectInputEqCurveStep.LoadEqFromFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads an EQ curve from a data file, and selects it for this signal path.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="invertData">True to invert the data when it is loaded into APx</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
        </member>
        <member name="M:AudioPrecision.API.ISelectInputEqCurveStep.LoadEqFromFile(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads an EQ curve from a data file, and selects it in the <see cref="P:AudioPrecision.API.ISelectInputEqCurveStep.Filename"/> property.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="invertData">True to invert the data when it is loaded into APx</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
            <param name="renameIfInverted">True to update the name of the imported EQ curve to indicate the original data was inverted</param>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.EqNames">
            <summary>
            Gets all EQ curves currently available in this project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.Filename">
            <summary>
            Gets or sets the full path to the EQ data file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.Invert">
            <summary>
            Gets or sets whether or not the data in the file is inverted before it is imported into APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISelectInputEqCurveStep.Channel">
            <summary>
            Gets or sets the channel to which this EQ curve will be applied.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetVddOutputStep">
            <summary>
            Represents a sequence step for turning the Vdd output on the PDM module off or on at a specified voltage level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetVddOutputStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetVddOutputStep.VddOn">
            <summary>
            Gets or sets whether or not the Vdd output is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetVddOutputStep.VddLevel">
            <summary>
            Gets or sets the Vdd voltage level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetTransducerInputStep">
            <summary>
            Represents the sequence step for controlling all settings for the Transducer Interface Input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.Enabled">
            <summary>
            Sets or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.Mic1">
            <summary>
            Sets or gets the state of the Transducer Interface Mic 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.Mic2">
            <summary>
            Sets or gets the state of the Transducer Interface Mic2.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.CurrentSense">
            <summary>
            Sets or gets the state of the Power Amp Sense input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.PhantomPower">
            <summary>
            Sets or gets the state of the phantom power to the micrphones.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerInputStep.CcpPower">
            <summary>
            Sets or gets the state of the power to the CCP microphones.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetTransducerOutputStep">
            <summary>
            Represents the sequence step for controlling all settings for the Transducer Interface Output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerOutputStep.Enabled">
            <summary>
            Sets or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerOutputStep.Amplifier1">
            <summary>
            Sets or gets the state of the Transducer Interface Amplifier 1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetTransducerOutputStep.Amplifier2">
            <summary>
            Sets or gets the state of the Transducer Interface Amplifier 2.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImportAmplifierCorrectionCurveStep">
            <summary>
            Represents a sequence step for importing an amplifier correction curve for a Loudspeaker Test or Impedance measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportAmplifierCorrectionCurveStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImportAmplifierCorrectionCurveStep.Filename">
            <summary>
            Gets or sets the full path to the data file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStepCollectionBase">
            <summary>
            Represents a collection sub-steps for the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.Count">
            <summary>
            Gets the number of steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.Item(System.Int32)">
            <summary>
            Gets a step as a base class.
            </summary>
            <param name="index">The index of the step</param>
            <returns>A base class step.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.PromptSteps">
            <summary>
            Gets all of the prompt steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.ProgramSteps">
            <summary>
            Gets all of the program steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.DelaySteps">
            <summary>
            Gets all of the Delay steps in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceStepCollectionBase.SetAuxControlOutputSteps">
            <summary>
            Gets all of the SetAuxControlOutput steps in the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCollectionBase.GetCheckedState">
            <summary>
            Gets the current checked state of all sequence steps in the collection.paths and measurements in the project. This object can be used with the
            <see cref="M:AudioPrecision.API.ISequenceStepCollectionBase.ApplyCheckedState(AudioPrecision.API.ISequenceStepCheckedState)">ApplyCheckedState</see> method to check or uncheck sequence steps in a much faster way.
            </summary>
            <returns>The current checked values for each sequence step</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCollectionBase.ApplyCheckedState(AudioPrecision.API.ISequenceStepCheckedState)">
            <summary>
            Applies the specified checked state for sequence steps.  This method significantly improves performance
            when applying many changes in a large project file.
            </summary>
            <param name="checkedState">The updated state.  This value should have originated from the <see cref="M:AudioPrecision.API.ISequenceStepCollectionBase.GetCheckedState">GetCheckedState</see> method</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCollectionBase.PasteStepsFromClipboard(System.Int32)">
            <summary>
            Pastes sequence steps from the Windows clipboard.  This step has no effect if no sequence step data has been copied.
            See <see cref="M:AudioPrecision.API.ISequenceStep.CopyToClipboard">ISequenceStep.CopyToClipboard</see>.
            </summary>
            <param name="insertIndex">The position to insert the new sequence steps</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCollectionBase.CopyCheckedStepsToClipboard">
            <summary>
            Copies any of the steps which can be copied to the Windows clipboard with the <see cref="M:AudioPrecision.API.ISequenceStep.CopyToClipboard"/> command, and
            which are checked in this collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCollectionBase.CanAddStep(AudioPrecision.API.SequenceStepType)">
            <summary>
            Gets whether or not a step can be added.
            </summary>
            <param name="stepType">The step type to add</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.ISequenceStepCheckedState">
            <summary>
            Represents the checked state of all sequence steps for a particular measurement.  This object is not updated
            as sequence steps are added and removed, so the <see cref="M:AudioPrecision.API.ISequenceStepCollectionBase.GetCheckedState">GetCheckedState</see>
            function should be called just before making changes.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCheckedState.GetCheckedState(System.String)">
            <summary>
            Gets the checked state for the specified sequence step.
            </summary>
            <param name="stepName">Name of the step</param>
            <returns>True if the step is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCheckedState.SetCheckedState(System.String,System.Boolean)">
            <summary>
            Sets the checked state for the specified step.
            </summary>
            <param name="stepName">Step name</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCheckedState.GetCheckedState(System.Int32)">
            <summary>
            Gets the checked state for the specified sequence step.
            </summary>
            <param name="stepIndex">Index of the step</param>
            <returns>True if the step is checked</returns>
        </member>
        <member name="M:AudioPrecision.API.ISequenceStepCheckedState.SetCheckedState(System.Int32,System.Boolean)">
            <summary>
            Sets the checked state for the specified step.
            </summary>
            <param name="stepIndex">Step index</param>
            <param name="checkedState">Desired checked state</param>
        </member>
        <member name="T:AudioPrecision.API.ICalibrateFromTedsAcousticStep">
            <summary>
            Represents the sequence step for setting the microphone sensitivity from a TEDS
            capable transducer connected to the APx1701.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsAcousticStep.Enabled">
            <summary>
            Set or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsAcousticStep.TedsSource">
            <summary>
            Set or get how the TEDS data is to be used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsAcousticStep.ApplyTo">
            <summary>
            Set or get which channel the TEDS data will be applied to.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICalibrateFromTedsStep">
            <summary>
            Represents the sequence step for setting the microphone sensitivity from a TEDS
            capable transducer connected to the APx1701.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStep.Enabled">
            <summary>
            Set or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStep.TedsSource">
            <summary>
            Set or get how the TEDS data is to be used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStep.SetdBSpl1">
            <summary>
            Select to apply the TEDS data to dBSPL1.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICalibrateFromTedsStep.SetdBSpl2">
            <summary>
            Select to apply the TEDS data to dBSPL2.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetDeviceDelayStep">
            <summary>
            Represents the Set Device Delay sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStep.Enabled">
            <summary>
            Set or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStep.Settings">
            <summary>
            Gets the measurement settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStep.Generator">
            <summary>
            Get the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetDeviceDelayStep.MeasuredChannel">
            <summary>
            Gets or sets the channel that is used to set the Device Delay for the signal path.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IClearVariableValueStep">
            <summary>
            Represents the Clear Variable Value sequence step.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClearVariableValueStep.Enabled">
            <summary>
            Sets or gets if this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IClearVariableValueStep.VariableName">
            <summary>
            Gets or sets the name of the variable to clear.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEnableVBiasStep">
            <summary>
            Represents the sequence step for enabling the VBias for the 
            analog balanced ADC Test output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEnableVBiasStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISaveGeneratorWaveformStep">
            <summary>
            Represents a sequence step for saving the measurement's generator waveform to a file on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorWaveformStep.Enabled">
            <summary>
            Gets or sets whether this sub-step will be executed when the measurement
            is run in the sequencer.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorWaveformStep.WaveformSettings">
            <summary>
            Gets the waveform file settings
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISerialDigitalReceiverSettings">
            <summary>
            Represents the settings for the Digital Serial input connector
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Name">
            <summary>
            Ges or sets the name of the current Digital Serial Receiver configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Channels">
            <summary>
            Gets or sets the number of channels to receive.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.SingleDataLine">
            <summary>
            Gets or sets whether the input channels are to be received on a single data line using 
            Time Division Multiplexing (TDM), or whether the channels are to be received in stereo pairs
            on each data line.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">
            <summary>
            Gets or sets the expected format and justification of the incoming bitstream.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.DataJustification">
            <summary>
            Gets or sets how the data is justified relative to the frame clock.  This property supercedes the 
            <see cref="T:AudioPrecision.API.SerialFormat">SerialFormat.LeftJustified</see> and <see cref="T:AudioPrecision.API.SerialFormat">SerialFormat.RightJustified</see> values
            previously used in the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">Format</see> property. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.WordWidth">
            <summary>
            Gets or sets the size of the input word.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.SampleRate">
            <summary>
            Gets the setting for the output sample rate. This setting is only valid when the
            master clock is configured as an output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MasterClockMultiplier">
            <summary>
            Gets or sets the master clock rate multiplier.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MasterClockSource">
            <summary>
            Gets or sets whether the master clock is generated by APx or by the DUT.
            On the Digital Serial Receiver, the master clock can either be generated by APx or by the DUT.  
            On the Digital Serial Transmitter, the master clock is always generated by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MasterClockRate">
            <summary>
            Gets a setting for the master clock rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MasterClockOff">
            <summary>
            Gets or sets whether or not the master clock is generated by APx.  This setting is only valid
            when MasterClockSource is specified to be Internal, meaning APx is generating the clock.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.InvertMasterClock">
            <summary>
            Gets or sets whether the master clock is inverted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.BitFrameClockDirection">
            <summary>
            Gets or sets the direction of the bit clock.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.BitClkSendEdgeSync">
            <summary>
            Gets or sets whether the leading edge of the frame (and data) are synchronized with the rising edge or the 
            falling edge of the bit clock, for DSIO receiver outputs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.BitClkReceiveEdgeSync">
            <summary>
            Gets or sets whether the leading edge of the frame (and data) are synchronized with the rising edge or the 
            falling edge of the bit clock, for DSIO receiver inputs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.EnableOutputs">
            <summary>
            Gets or sets whether the Digital Serial Receiver module is generating any voltage.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.LogicLevel">
            <summary>
            Gets or sets the output voltage level for the Digital Serial Receiver.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalReceiverSettings.Open(System.String)">
            <summary>
            Loads the configuration from a saved file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalReceiverSettings.Save(System.String)">
            <summary>
            Saves the current configuration to a file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MsbFirst">
            <summary>
            Gets or sets whether the MSB or LSB is first in the data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.SelectedDataLine">
            <summary>
            Gets or sets which data line contains the data when the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.SingleDataLine">SingleDataLine</see> property is True.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.FrameClockInvert">
            <summary>
            Gets or sets whether the frame clock is inverted. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.FrameClockPulseWidth">
            <summary>
            Gets or sets the width of the frame clock pulse. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.FrameClockLeftOneBit">
            <summary>
            When true then the frame clock is advanced by one bit clock.
            This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalReceiverSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.MeasureInputSignalType">
            <summary>
            Get or set type of input signal, Audio or Jitter.
            Note: This is only valid when the APx instrument is capable of measuring Jitter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalReceiverSettings.BitDepth">
            <summary>
            Gets or sets the digital output bit depth.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISerialDigitalTransmitterSettings">
            <summary>
            Represents the settings for the Digital Serial output connector
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Name">
            <summary>
            Ges or sets the name of the current Digital Serial Transmitter configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Channels">
            <summary>
            Gets or sets the number of channels to transmit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.SingleDataLine">
            <summary>
            Gets or sets whether the input channels are to be transmitted on a single data line using 
            Time Division Multiplexing (TDM), or whether the channels are to be transmitted in stereo pairs
            on each data line.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">
            <summary>
            Gets or sets the expected format and justification of the outgoing bitstream.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.DataJustification">
            <summary>
            Gets or sets how the data is justified relative to the frame clock.  This property supercedes the 
            <see cref="T:AudioPrecision.API.SerialFormat">SerialFormat.LeftJustified</see> and <see cref="T:AudioPrecision.API.SerialFormat">SerialFormat.RightJustified</see> values
            previously used in the <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">Format</see> property. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.WordWidth">
            <summary>
            Gets or sets the size of the output word.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.SampleRate">
            <summary>
            Gets the setting for the output sample rate. This setting is only valid when the
            master clock is configured as an output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockMultiplier">
            <summary>
            Gets or sets the master clock rate multiplier.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockOff">
            <summary>
            Gets or sets whether or not the master clock is generated by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.InvertMasterClock">
            <summary>
            Gets or sets whether the master clock is inverted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.ScaleFreqBy">
            <summary>
            Gets or sets how the generator frequency is scaled relative to the sample rate. When the clock is driven
            by an external device or by APx, use <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.OutputRate"/>. 
            When the clock has high amounts of jitter applied, use <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.FixedRate"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.ScaleFreqByFixedRate">
            <summary>
            Gets or sets the frame clock (sample) rate in Hz when <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.ScaleFreqBy"/> is set to <see cref="F:AudioPrecision.API.ScaleDigitalOutputFreqBy.FixedRate"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockFrequencyScaling">
            <summary>
            Gets or sets how the master clock rate is computed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockFixedRate">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.ScaleFreqByFixedRate"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockMeasuredRate">
            <summary>
            Gets the currently measured input rate for Transmitter Slave mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockSource">
            <summary>
            Gets or sets whether the master clock is generated by APx or by the DUT.
            On the Digital Serial Receiver, the master clock can either be generated by APx or by the DUT.  
            On the Digital Serial Transmitter, the master clock is always generated by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MasterClockRate">
            <summary>
            Gets a setting for the master clock rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.BitFrameClockDirection">
            <summary>
            Gets or sets the direction of the bit clock.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.BitClkSendEdgeSync">
            <summary>
            Gets or sets whether the leading edge of the frame (and data) are synchronized with the rising edge or 
            the falling edge of the bit clock. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.BitClkReceiveEdgeSync">
            <summary>
            Gets or sets whether the leading edge of the frame (and data) are synchronized with the rising edge or the 
            falling edge of the bit clock, for DSIO receiver inputs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.EnableOutputs">
            <summary>
            Gets or sets whether the Digital Serial Transmitter module is generating any voltage.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.LogicLevel">
            <summary>
            Gets or sets the output voltage level for the Digital Serial Transmitter.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalTransmitterSettings.Open(System.String)">
            <summary>
            Loads the configuration from a saved file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalTransmitterSettings.Save(System.String)">
            <summary>
            Saves the current configuration to a file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.MsbFirst">
            <summary>
            Gets or sets whether the MSB or LSB is first in the data.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalTransmitterSettings.GetDataLineEnabled(AudioPrecision.API.SerialDataLine)">
            <summary>
            Gets whether or not the specified data line carries data.
            </summary>
            <param name="dataLine">The specified data line</param>
            <returns>True if the data line carries data</returns>
        </member>
        <member name="M:AudioPrecision.API.ISerialDigitalTransmitterSettings.SetDataLineEnabled(AudioPrecision.API.SerialDataLine,System.Boolean)">
            <summary>
            Sets whether or not the specified data line carries data.
            </summary>
            <param name="dataLine">The specified data line</param>
            <param name="enabled">True if the data line should be enabled</param>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.FrameClockInvert">
            <summary>
            Gets or sets whether the frame clock is inverted. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.FrameClockPulseWidth">
            <summary>
            Gets or sets the width of the frame clock pulse. This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.FrameClockLeftOneBit">
            <summary>
            When true then the frame clock is advanced by one bit clock. 
            This setting only applies when the <see cref="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Format">Format</see> property
            is <see cref="F:AudioPrecision.API.SerialFormat.Custom">Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.BitDepth">
            <summary>
            Gets or sets the digital output bit depth.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISerialDigitalTransmitterSettings.Dither">
            <summary>
            Gets or sets whether the digital signal is dithered.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SerialDataLine">
            <summary>
            Describes the available data lines for the Digital Serial interface.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialDataLine.DataLine1">
            <summary>
            Data1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialDataLine.DataLine2">
            <summary>
            Data2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialDataLine.DataLine3">
            <summary>
            Data3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SerialDataLine.DataLine4">
            <summary>
            Data4
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISetting">
            <summary>
            Represents an object which is used to control a system configuration variable.
            The value can be represented as text or numeric depending on the type setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetting.Text">
            <summary>
            Gets or sets the text value of the setting.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.ISetting.TextChanged">
            <summary>
            Event fired when the Text property changes.
            </summary>
            <exclude/>
        </member>
        <member name="E:AudioPrecision.API.ISetting.ValueChanged">
            <summary>
            Event fired when the Value property changes.
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.ISetting.Values">
            <summary>
            Gets all possible values for this setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISetting.Active">
            <summary>
            Gets whether or not the user can make changes to this setting
            </summary>
        </member>
        <member name="E:AudioPrecision.API.ISetting.ActiveChanged">
            <summary>
            Event fired when the IsActive property changes.
            </summary>
            <exclude/>
        </member>
        <member name="T:AudioPrecision.API.ISettingUnit">
            <summary>
            Represents a setting which has a unit associated with it.  For example, a generator frequency
            has a unit of "Hz".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettingUnit.TextWithoutUnit">
            <summary>
            Gets the formatted text value of the setting, without the unit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettingUnit.TextWithReferenceValue">
            <summary>
            Gets the formatted text value of the setting, including a reference
            value if the current unit is a referenced unit such as "dBrA".  
            Example: "0.000 dBrA (@1.000 Vrms)"
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettingUnit.Unit">
            <summary>
            Gets or sets the current unit of this setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettingUnit.UnitList">
            <summary>
            Gets a list of all valid units for this setting.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.ISettingUnit.UnitChanged">
            <summary>
            Event fired when the Unit property changes.
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.ISettingUnit.IsLogUnit">
            <summary>
            Indicates whether or not the selected unit is logarithmic.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDoubleSetting">
            <summary>
            Represents a setting where the value is a floating point number.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDoubleSetting.Value">
            <summary>
            Gets or sets the value, in the unit specified by the Unit property.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDoubleSetting.GetValue(System.String)">
            <summary>
            Gets the value converted into the desired unit.  If the specified unit
            is not compatible with the units for this measurement, an exception will be thrown.
            </summary>
            <param name="Unit">The target unit</param>
            <returns>A double for the setting value in the requested unit.</returns>
        </member>
        <member name="M:AudioPrecision.API.IDoubleSetting.GetText(System.String)">
            <summary>
            Gets the formatted text value converted into the desired unit.
            If the specified unit
            is not compatible with the units for this measurement, an exception will be thrown.
            </summary>
            <param name="Unit">The target unit</param>
            <returns>A formatted string value in the requested unit.</returns>
        </member>
        <member name="P:AudioPrecision.API.IDoubleSetting.ValuesWithReferenceValue">
            <summary>
            Gets all possible values for this setting, with the value of a referenced unit if applicable
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISettlingParameters">
            <summary>
            Represents the parameters used to determine how a measurement result is settled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.Name">
            <summary>
            Gets the name of these settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.Enabled">
            <summary>
            Gets or sets whether settling is applied to this measurement result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISettlingParameters.Reset">
            <summary>
            Reset the values to their defaults.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.Mode">
            <summary>
            Gets the mode used to apply settling.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.Algorithm">
            <summary>
            Gets or sets the algorithm used for settling.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.DelayTime">
            <summary>
            Gets the setting which controls the amount of delay in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.DelayCycles">
            <summary>
            Gets the setting which controls the amount of settling in cycles.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.SettlingTime">
            <summary>
            Gets the setting which controls the amount of time when the Algorithm is "Flat".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.SettlingCycles">
            <summary>
            Gets the setting which controls the number of cycles when the Algorithm is "Flat".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.Tolerance">
            <summary>
            Gets the setting which controls the tolerance when the Algorithm is "Flat".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISettlingParameters.AveragingTime">
            <summary>
            Gets the setting which controls the amount of time when the Algorithm is "Average".
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalPathSettings">
            <summary>
            Represents the input and output settings for a signal path.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISignalPathSettings.GetInputChannelName(System.Int32)">
            <summary>
            Get the user customized input channel name for the specified connector and channel.
            </summary>
            <param name="channel">The channel</param>
            <returns>A string for the requested channel name</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalPathSettings.SetInputChannelName(System.Int32,System.String)">
            <summary>
            Sets a user customized channel name for a specific channel and connector.
            </summary>
            <param name="channel">The channel</param>
            <param name="name">The name provided by the user, i.e. "Left"</param>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.OutputConnector">
            <summary>
            Gets the output connector object where the output connector type can be specified.
            </summary>
            <example>
            This example shows how to configure the output connector
            <code source="SignalPathSetup.vb" region="OutputConnector" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.InputConnector">
            <summary>
            Gets the input connector object where the input connector can be specified.
            </summary>
            <example>
            This example shows how to configure the input connector 
            <code source="SignalPathSetup.vb" region="InputConnector" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.DigitalOutput">
            <summary>
            Gets the settings for the digital output connectors such as Digital Balanced, Digital Unbalanced, and Digital Optical.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.DigitalInput">
            <summary>
            Gets the settings for the digital input connectors such as Digital Balanced, Digital Unbalanced, and Digital Optical.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.MaximumBandwidth">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterAnalog">LowpassFilterAnalog</see> or
            <see cref="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterDigital">LowpassFilterDigital</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HighpassFilter">
            <summary>
            Gets or sets the high-pass filter type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HighpassFilterFrequency">
            <summary>
            Gets or sets the high-pass filter frequency in Hz when the <see cref="P:AudioPrecision.API.ISignalPathSettings.HighpassFilter">HighpassFilter</see> property is
            set to <see cref="F:AudioPrecision.API.HighpassFilterMode.Butterworth">Butterworth</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterAnalog">
            <summary>
            Gets or sets the low-pass filter type for analog inputs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterFrequencyAnalog">
            <summary>
            Gets or sets the low-pass filter frequency in Hz when the <see cref="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterAnalog">LowpassFilterAnalog</see> property is
            set to <see cref="F:AudioPrecision.API.LowpassFilterModeAnalog.Butterworth">Butterworth</see> or <see cref="F:AudioPrecision.API.LowpassFilterModeAnalog.Elliptic">Elliptic</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterAnalogBandwidth">
            <summary>
            Gets or sets the analog input bandwidth values which control the rate of the ADC.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterDigital">
            <summary>
            Gets or sets the low-pass filter type for digital inputs.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterFrequencyDigital">
            <summary>
            Gets or sets the low-pass filter frequency in Hz when the <see cref="P:AudioPrecision.API.ISignalPathSettings.LowpassFilterDigital">LowpassFilterDigital</see> property is
            set to <see cref="F:AudioPrecision.API.LowpassFilterModeDigital.Butterworth">Butterworth</see> or <see cref="F:AudioPrecision.API.LowpassFilterModeDigital.Elliptic">Elliptic</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.WeightingFilter">
            <summary>
            Gets or sets the weighting filter applied to the entire input signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.Loopback">
            <summary>
            Gets or sets whether or not the generator signal is automatically looped 
            back to the input of the APx instrument.  This setting only applies in specific
            input and output configurations.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.DCCoupled">
            <summary>
            This property is obsolete.  Use the <see cref="P:AudioPrecision.API.ISignalPathSettings.HighpassFilter">HighpassFilter</see> setting instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.UseOutputSwitcher">
            <summary>
            Gets or sets whether the APx instrument controls one or more output switchers.
            </summary>
            <example>See <see cref="P:AudioPrecision.API.ISignalPathSettings.OutputSwitcherConfiguration"/> for an example of controlling an output switcher.</example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.UseInputSwitcher">
            <summary>
            Gets or sets whether the APx instrument controls one or more input switchers
            </summary>
            <example>See <see cref="P:AudioPrecision.API.ISignalPathSettings.InputSwitcherConfiguration"/> for an example of controlling an input switcher.</example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.OutputSwitcherConfiguration">
            <summary>
            Gets the settings for output switcher control.
            </summary>
            <example>This example demonstrates configuring an output switcher.
            <code source="SignalPathSetup.vb" region="OutputSwitcher" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.InputSwitcherConfiguration">
            <summary>
            Gets the settings for input switcher control.
            </summary>
            <example>This example demonstrates configuring an input switcher.
            <code source="SignalPathSetup.vb" region="InputSwitcher" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HdmiOutput">
            <summary>
            Gets the settings for the HDMI output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HdmiArcOutput">
            <summary>
            Gets the settings for the HDMI ARC output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HdmiInput">
            <summary>
            Gets the settings for the HDMI input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.HdmiArcInput">
            <summary>
            Gets the settings for the HDMI ARC input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.SerialDigitalReceiver">
            <summary>
            Gets the settings for the Digital Serial input connector
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.SerialDigitalTransmitter">
            <summary>
            Gets the settings for the Digital Serial output connector
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AnalogFileInputFullScaleVoltageRatio">
            <summary>
            Gets or sets the ratio of Vrms to FS used to display measured WAV file data in analog units such as Vrms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.Bluetooth">
            <summary>
            Gets the Bluetooth settings for this signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.DeviceDelay">
            <summary>
            Gets or sets a fixed external delay time through the device under test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.InputChannelCount">
            <summary>
            Gets the current input channel count.  This property returns the value for the current input configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.OutputChannelCount">
            <summary>
            Gets the current output channel count.  This property returns the value for the current output configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.PdmOutput">
            <summary>
            Gets the settings for the PDM output connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.PdmInput">
            <summary>
            Gets the settings for the PDM input connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.Asio">
            <summary>
            Gets ASIO device settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AnalogOutput">
            <summary>
            Gets the analog output connector settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AnalogInput">
            <summary>
            Gets the analog input connector settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.MicBiasVoltageOn">
            <summary>
            Gets or sets whether or not the microphone bias voltage is enabled.  This property only applies to 
            instruments with the Microphone Bias Voltage connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.BatteryPowerOn">
            <summary>
            Gets or sets whether or not the battery power emulator is enabled.  This property only applies to 
            instruments with the Battery Power connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.BatteryVoltage">
            <summary>
            Gets a setting for the battery voltage level.  <seealso cref="P:AudioPrecision.API.ISignalPathSettings.BatteryPowerOn">BatteryPowerOn</seealso>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AcousticInput">
            <summary>
            Gets or sets the signal path input is acoustic.  Acoustic input signal paths present measured data in dBSPL instead of voltages.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.InputEq">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ISignalPathSettings.InputEqChannels"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.InputEqChannels">
            <summary>
            Gets the settings for the signal path input EQ curve on each input channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.OutputEq">
            <summary>
            Gets the settings for the signal path output EQ curve.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AcousticOutput">
            <summary>
            Gets or sets whether the output signal for this signal path is expressed in acoustic units such as dBSPL.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AdvancedDigitalOutput">
            <summary>
            Gets the settings for the Advanced Digital I/O module output settings. These settings only apply to APx instruments with the 
            required HW modules.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.Clocks">
            <summary>
            Gets the settings for the jitter and reference clock settings. These settings only apply to APx instruments with the 
            required HW modules.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.Triggers">
            <summary>
            Gets the settings for the external trigger
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.BatteryCurrentInput">
            <summary>
            Gets the settings for the BatteryCurrent input connector type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.References">
            <summary>
            Gets the references object which contains reference values for all measurement domains.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AutoGeneratorLevel">
            <summary>
            Gets access to functionality which automatically finds the required generator level
            to drive the device under test to a specified distortion level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.IsAnalogLoopbackSupported">
            <summary>
            Gets whether or not this APx instrument supports analog loopback.  582 and 58x models do not support
            this feature.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.TransducerInput">
            <summary>
            Gets access to the functionality of the Transducer Interface for Input connections.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.TransducerOutput">
            <summary>
            Gets access to the functionality of the Transducer Interface Output connections.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSettings.AdcTest">
            <summary>
            Get the settings for controlling the VBias while in Analog Balanced output.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAdvancedDigitalOutputSettings">
            <summary>
            Represents the digital output settings for the Advanced Digital I/O module.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.OutputLevelMode">
            <summary>
            Set or get the mode for the output level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.WaveformLevel">
            <summary>
            Gets a setting for the digital interface waveform level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.CommonModeOn">
            <summary>
            Turn on or off the common mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.CommonModeLevel">
            <summary>
            Get or set the level of the common mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.CommonModeFreq">
            <summary>
            Get or set the frequency of the common mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.RiseTimeMode">
            <summary>
            Set or get the mode of how the output is affected by rise time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.RiseTime">
            <summary>
            Set or get the rise time, that is used while in Variable mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.NoiseOn">
            <summary>
            Turn on or off the noise output.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.NoiseLevel">
            <summary>
            Set or get the level of noise.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.Invert">
            <summary>
            Set or get the output inversion.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.ParityError">
            <summary>
            Turn on or off the parity error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.AutoIncLa">
            <summary>
            Turn on or off the auto increment for Local Address.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.AutoIncTod">
            <summary>
            Turn on or off the auto increment for Time of Day.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.UserDefinedCrcChA">
            <summary>
            Get or set the state of the user defined CRC.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.CrcChA">
            <summary>
            Get or set the CRC for ChA when enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.UserDefinedCrcChB">
            <summary>
            Get or set the state of the user defined CRC.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdvancedDigitalOutputSettings.CrcChB">
            <summary>
            Get or set the CRC for ChA when enabled.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEqSettings">
            <summary>
            Represents the settings for an EQ curve used to change the level of the output in a signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqSettings.EqNames">
            <summary>
            Gets all EQ curves currently available in this project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqSettings.Eq">
            <summary>
            Gets or sets the selected EQ curve.  
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IEqSettings.LoadEqFromFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads an EQ curve from a data file, and selects it in the <see cref="P:AudioPrecision.API.IEqSettings.Eq"/> property.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="invertData">True to invert the data when it is loaded into APx</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
        </member>
        <member name="M:AudioPrecision.API.IEqSettings.LoadEqFromFile(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads an EQ curve from a data file, and selects it in the <see cref="P:AudioPrecision.API.IEqSettings.Eq"/> property.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="invertData">True to invert the data when it is loaded into APx</param>
            <param name="renameIfInverted">True to update the name of the imported EQ curve to indicate the original data was inverted</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
        </member>
        <member name="P:AudioPrecision.API.IEqSettings.FrequencyValues">
            <summary>
            Gets the Frequency values for the EQ table.  
            <return>Frequencies in Hz</return>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqSettings.LevelValues">
            <summary>
            Gets the Level values for the EQ table.
            <return>Levels in dB</return>
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInputEqSettings">
            <summary>
            Represents the settings for an EQ curve used to change the level of the input in a signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputEqSettings.EnabledOnChannels">
            <summary>
            Determines whether input EQ is enabled on the available channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IInputEqSettings.EnableOnChannel(System.Int32,System.Boolean)">
            <summary>
            Determines whether input EQ is enabled on the available channels.
            </summary>
            <param name="ch">The channel to enable</param>
            <param name="value">True to enable on given channel</param>
        </member>
        <member name="T:AudioPrecision.API.IInputEqSettingsCollection">
            <summary>
            Represents the settings for the EQ curves on each input channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputEqSettingsCollection.Count">
            <summary>
            Gets the number of channels in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputEqSettingsCollection.Item(System.Int32)">
            <summary>
            Gets the EQ settings for the specified 0-based channel index.
            </summary>
            <param name="index">Index of the channel</param>
            <returns>EQ settings</returns>
        </member>
        <member name="P:AudioPrecision.API.IInputEqSettingsCollection.Item(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the EQ settings for the specified channel index.
            </summary>
            <param name="index">Index of the channel</param>
            <returns>EQ settings</returns>
        </member>
        <member name="P:AudioPrecision.API.IInputEqSettingsCollection.TrackFirst">
            <summary>
            Gets or sets whether all channels share the same EQ settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalPathSetupSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Level and Gain measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupSettlingParametersCollection.Frequency">
            <summary>
            Gets the settling parameters for measuring frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalPathSetup">
            <summary>
            Represents the configuration for a signal path, including input and output connector
            choices as well as channel names and other settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.OutputSampleRate">
            <summary>
            This property is obsolete.  See <see cref="P:AudioPrecision.API.IDigitalOutputSettings.SampleRate">DigitalOutput.SampleRate</see> or
            HdmiOutput.SampleRate instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Generator">
            <summary>
            Gets the generator settings for signal verification.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="SignalPathSetup.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Level">
            <summary>
            Gets the Rms level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="SignalPathSetup.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Gain">
            <summary>
            Gets the gain meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="LevelAndGain.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.ThdNRatio">
            <summary>
            Gets the THD+N ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Frequency">
            <summary>
            Gets the frequency result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Bits">
            <summary>
            Gets the graph which indicates the current digital input bitstream.
            Note: This result is only valid with digital input.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.ErrorRate">
            <summary>
            Gets the Error Rate meter result. 
            Note: This result is only valid with digital input.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.SequenceSettings">
            <summary>
            Gets the settings for this measurement when it is checked in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.VerifyConnectionsVisible">
            <summary>
            Gets or sets whether the Verify Connections panel is displayed in Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.DigitalInterfaceLevel">
            <summary>
            Gets the digital interface level reading expressed in Vpp if the selected input connector
            supports this reading.  If the connector is unlocked, or the connector does not support this 
            reading, the value will be Double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetup.Dcx">
            <summary>
            Gets the settings for controlling an Audio Precision DCX device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SelectBluetoothDeviceType">
            <summary>
            Determines how a Bluetooth device is selected in a sequence.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SelectBluetoothDeviceType.UseConnectedDevice">
            <summary>
            If a device is already connected, the device is used in the sequence.  
            If no device is connected, the user is prompted to select a device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SelectBluetoothDeviceType.AlwaysChooseNewDevice">
            <summary>
            The user is always prompted to select a new device when the signal
            path is activated. The user can select a known device or can scan for a new device.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SelectBluetoothDeviceType.AutoConnect">
            <summary>
            APx automatically scans for a device and connects to a device when the signal path is activated
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothSignalPathSettings">
            <summary>
            Represents Bluetooth configuration settings when either the input or output connector is Bluetooth.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSignalPathSettings.AudioProfile">
            <summary>
            Gets the currently active Bluetooth profile
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSignalPathSettings.IsInputProfileValid">
            <summary>
            Gets whether or not the current input Bluetooth profile is valid.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSignalPathSettings.IsOutputProfileValid">
            <summary>
            Gets whether or not the current output Bluetooth profile is valid.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSignalPathSettings.SelectDeviceInSequence">
            <summary>
            Gets or sets how a Bluetooth device is connected when this signal path is activated
            in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothSignalPathSettings.AutoConnectDeviceSettings">
            <summary>
            Gets the settings to determine how APx should automatically connect to a Bluetooth device in a sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IConnectBluetoothDeviceSettings">
            <summary>
            Represents the settings for automatically connecting to a Bluetooth device in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ScanDuration">
            <summary>
            Length of the inquiry in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.FindAllDevicesInInquiry">
            <summary>
            Gets or sets whether APx returns all devices from the inquiry, or a limited set of devices based on the
            <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.MaxDevicesInInquiry"/> and <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.InquiryDeviceClass"/> properties.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.MaxDevicesInInquiry">
            <summary>
            Gets or sets the maximum number of devices returned by the inquiry. Recommended not to exceed 10.
            This proprerty only applies when the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.FindAllDevicesInInquiry"/> is False.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.InquiryDeviceClass">
            <summary>
            Gets or sets the a device class bit mask to applied to the inquiry results so only devices of the requested type are discoverd.
            This proprerty only applies when the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.FindAllDevicesInInquiry"/> is False.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ConnectType">
            <summary>
            Gets or sets how APx chooses the device it will attempt to connect when the sequence is started.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.SelectFirstDevice">
            <summary>
            If True, APx selects the first device found in the scan.  Otherwise
            if the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.PartialAddress">PartialAddress</see> property is non-blank
            APx attempts to select the first device who's address matches the partial address value.
            This property only applies when the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ConnectType"/> property is <see cref="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromScan"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.PartialAddress">
            <summary>
            Specifies the beginning sequence of a Bluetooth address to use as a match for connection.
            Partial address must contain at least two address segments, i.e. 00:00
            This property only applies when the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ConnectType"/> property is <see cref="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromScan"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.SpecificAddress">
            <summary>
            Specifies the address of the device to connect to, without scanning. This field is only applicable when the <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ConnectType"/>
            property is <see cref="F:AudioPrecision.API.BluetoothDeviceAutoConnectType.FromDeviceAddress"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.DeviceAddressVariable">
            <summary>
            Specifies the name of a user defined variable which contains the Bluetooth address of the device that APx will connect to.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.PinRequired">
            <summary>
            Gets or sets whether or not the device requires a PIN for pairing.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.Pin">
            <summary>
            Gets or sets the PIN for pairing.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.ForcePairing">
            <summary>
            Gets or sets whether or not APx establishes a new pairing request with the remote device,
            even if the device is already in the pairing list for APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.Profile">
            <summary>
            Gets the desired Bluetooth connection profile.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.A2dpSampleRate">
            <summary>
            Gets the desired A2DP sample rate.
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IBluetoothCodecSettings.Sbc"/> or <see cref="P:AudioPrecision.API.IBluetoothCodecSettings.Aptx"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.SbcChannelMode">
            <summary>
            Gets the desired channel encoding mode for the SBC encoder (for A2DP connections only).
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IBluetoothCodecSettings.Sbc"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.A2dpCodec">
            <summary>
            Gets or sets the desired codec when connected to an A2DP device.
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.CodecSettings"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConnectBluetoothDeviceSettings.CodecSettings">
            <summary>
            Gets the settings for the A2DP codecs.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalPathSetupGenerator">
            <summary>
            Represents the generator settings for the signal path verification function on the Signal Path Setup measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.VerificationChannel">
            <summary>
            Gets or sets the channel of interest for signal verification.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.ConstantValues">
            <summary>
            Gets the generator values for use when the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property is set to ConstantValue.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.SamplesPerStep">
            <summary>
            Gets or sets the number of samples per step for the Walking Zeros and Walking Ones digital generator type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.NoiseShape">
            <summary>
            Gets the type of noise to be generated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.AnalogType">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPathSetupGenerator.DigitalType">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> instead.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAdcTestSettings">
            <summary>
            Represents the ADC Test for the Analog Balanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.VBiasEnabled">
            <summary>
            Gets or sets the state of the VBias. If true, the maximum analog amplitude
            will be reduced and the analog balanced outputs can have VBias.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.VBias">
            <summary>
            Sets the generator to the specified VBias in the current level unit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.Unit">
            <summary>
            Get the Unit for the offsets.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.VBiasAutoOn">
            <summary>
            Get or set the Auto On mode for VBias.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.PinVoltageProtection">
            <summary>
            Get or set the Protection mode for ADC Test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.PinVoltageMaximum">
            <summary>
            Get or get the highest voltage allowed on the Analog Balanced pin.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAdcTestSettings.PinVoltageMinimum">
            <summary>
            Get or set the lowest voltage allowed on the Analog Balanced pin.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SignalPathSetupOutputChannelIndex">
            <summary>
            Used to specify an output channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.AllChannels">
            <summary>
            All Channels
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch1">
            <summary>
            Channel 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch2">
            <summary>
            Channel 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch3">
            <summary>
            Channel 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch4">
            <summary>
            Channel 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch5">
            <summary>
            Channel 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch6">
            <summary>
            Channel 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch7">
            <summary>
            Channel 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch8">
            <summary>
            Channel 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch9">
            <summary>
            Channel 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch10">
            <summary>
            Channel 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SignalPathSetupOutputChannelIndex.Ch16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputChannelIndex">
            <summary>
            Used to specify an output channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch1">
            <summary>
            Channel 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch2">
            <summary>
            Channel 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch3">
            <summary>
            Channel 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch4">
            <summary>
            Channel 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch5">
            <summary>
            Channel 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch6">
            <summary>
            Channel 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch7">
            <summary>
            Channel 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch8">
            <summary>
            Channel 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch9">
            <summary>
            Channel 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch10">
            <summary>
            Channel 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelIndex.Ch16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.InputChannelIndex">
            <summary>
            Used to specify an input channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch1">
            <summary>
            Channel 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch2">
            <summary>
            Channel 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch3">
            <summary>
            Channel 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch4">
            <summary>
            Channel 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch5">
            <summary>
            Channel 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch6">
            <summary>
            Channel 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch7">
            <summary>
            Channel 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch8">
            <summary>
            Channel 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch9">
            <summary>
            Channel 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch10">
            <summary>
            Channel 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.InputChannelIndex.Ch16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CursorChannelIndex">
            <summary>
            Used to specify an input channel.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.None">
            <summary>
            No channel
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch1">
            <summary>
            Channel 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch2">
            <summary>
            Channel 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch3">
            <summary>
            Channel 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch4">
            <summary>
            Channel 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch5">
            <summary>
            Channel 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch6">
            <summary>
            Channel 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch7">
            <summary>
            Channel 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch8">
            <summary>
            Channel 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch9">
            <summary>
            Channel 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch10">
            <summary>
            Channel 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CursorChannelIndex.Ch16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBatteryCurrentInputSettings">
            <summary>
            Represents settings for the Battery Current input connector.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBatteryCurrentInputSettings.ZeroAdjust">
            <summary>
            Runs a procedure to improve measurement accuracy with the Battery Current input.
            The procedure turns off the battery voltage output and measures the input level for the
            Battery Current input connector.  
            This function throws an exception if the Battery Current connector is not selected.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalMonitorWindow">
            <summary>
            Represents a real-time input signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMonitorWindow.IsVisible">
            <summary>
            Gets whether or not the signal monitor is visible.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISignalMonitorWindow.Show">
            <summary>
            Makes the signal monitor visible.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMonitorWindow.Name">
            <summary>
            Gets the name of the signal monitor.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IScopeSignalMonitorWindow">
            <summary>
            Represents the time domain scope input signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IScopeSignalMonitorWindow.Scope">
            <summary>
            Gets the graph settings and data for the Scope Time Domain signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IScopeSignalMonitorWindow.Residual">
            <summary>
            Gets or sets the residual display.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IScopeSignalMonitorWindow.Cycles">
            <summary>
            Gets or sets the number of cycles to show.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IScopeSignalMonitorWindow.InterpolationOn">
            <summary>
            Gets or sets whether interpolation is on for this monitor.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow">
            <summary>
            Represents the frequency domain FFT spectrum input signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.FFTSpectrum">
            <summary>
            Gets the graph settings and data for the FFT Spectrum signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.FFTLength">
            <summary>
            Gets of sets the length of the FFT.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.Averages">
            <summary>
            Gets or sets the number of averages.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.ResetAverages">
            <summary>
            Resets the averaging history for the FFT signal monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.WindowType">
            <summary>
            Gets or sets the window type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFFTSpectrumSignalMonitorWindow.ShowResidual">
            <summary>
            Gets or sets whether to show the residual traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalMetersWindow">
            <summary>
            Represents the input signal monitor which displays real-time meter readings for Level, THD+N, and Frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.LevelMeter">
            <summary>
            Gets the meter results for the Rms Level meter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.LevelMeterUnit">
            <summary>
            Gets or sets th display unit for the <see cref="P:AudioPrecision.API.ISignalMetersWindow.LevelMeter">LevelMeter</see> result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.ThdNMeter">
            <summary>
            Gets the meter results for the THD+N meter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.ThdNMeterUnit">
            <summary>
            Gets or sets th display unit for the <see cref="P:AudioPrecision.API.ISignalMetersWindow.ThdNMeterUnit">ThdNMeterUnit</see> result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.FrequencyMeter">
            <summary>
            Gets the meter results for the Freqency meter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalMetersWindow.FrequencyMeterUnit">
            <summary>
            Gets or sets th display unit for the <see cref="P:AudioPrecision.API.ISignalMetersWindow.FrequencyMeter">FrequencyMeter</see> result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStatusBitsMonitor">
            <summary>
            Represents the signal monitor which displays real time status information about the C-Bits and U-Bits received 
            on the SPDIF digital interface.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsMonitor.UserBytes">
            <summary>
            Gets or sets the user bits (U-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsMonitor.StatusBitsA">
            <summary>
            Gets the status bits readings for Channel A.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsMonitor.StatusBitsB">
            <summary>
            Gets the status bits readings for Channel B.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsMonitor.ValidityA">
            <summary>
            Get the validity flag for the given channel status block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsMonitor.ValidityB">
            <summary>
            Get the validity flag for the given channel status block.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStatusBitsValues">
            <summary>
            Represents the status bit values for a digital interface.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsValues.Application">
            <summary>
            Gets the usage of the channel status block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsValues.StatusBytes">
            <summary>
            Gets the raw byte values for the status bits (C-Bits).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsValues.ConsumerValues">
            <summary>
            Gets the values for the current status bit (C-Bits) values interpreted as Consumer bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatusBitsValues.ProfessionalValues">
            <summary>
            Gets the values for the current status bit (C-Bits) values interpreted as Professional bits.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IConsumerStatusBitsValues">
            <summary>
            Represents status bits (C-Bits) settings interpreted for Consumer applications.
            These settings are defined by the IEC 60958-3 specification (Digital audio interface - Consumer applications).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.AudioMode">
            <summary>
            Gets the Audio Mode.  This bit determines the type of data in the audio block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.Copyright">
            <summary>
            Gets whether or not the software copyright is asserted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.Emphasis">
            <summary>
            Gets the pre-Emphasis value when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsValues.AudioMode">AudioMode</see> settings is Audio.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.EmphasisNonAudio">
            <summary>
            Gets the pre-Emphasis value when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsValues.AudioMode">AudioMode</see> setting is Non-Audio.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.ChannelStatusMode">
            <summary>
            Gets the channel status mode. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.CategoryCode">
            <summary>
            Gets the category code which indicates the type of the device which generated the digital audio signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.SourceNumber">
            <summary>
            Gets the source number.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.ChannelNumber">
            <summary>
            Gets the channel number (audio channel).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.SamplingFrequency">
            <summary>
            Gets the audio sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.ClockAccuracy">
            <summary>
            Gets the clock accuracy.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.WordLength">
            <summary>
            Gets the maximum audio sample word length.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.SampleWordLength20Bits">
            <summary>
            Gets the sample word length when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsValues.WordLength">WordLength</see> property is 20 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.SampleWordLength24Bits">
            <summary>
            Gets the sample word length when the <see cref="P:AudioPrecision.API.IConsumerStatusBitsValues.WordLength">WordLength</see> property is 24 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.OriginalSamplingFrequency">
            <summary>
            Gets the original sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConsumerStatusBitsValues.CgmsA">
            <summary>
            Gets the CGMS-A setting for copy protection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IProfessionalStatusBitsValues">
            <summary>
            Represents status bits (C-Bits) settings interpreted for Professional audio applications.
            These settings are defined by the AES-3 specification (AES standard for digital audio).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.AudioMode">
            <summary>
            Gets the Audio Mode.  This bit determines the type of data in the audio block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Emphasis">
            <summary>
            Gets the audio signal emphasis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Lock">
            <summary>
            Gets the lock indication.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.ChannelMode">
            <summary>
            Gets the channel mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.UserBitsManagement">
            <summary>
            Gets the user bits management.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.AuxBits">
            <summary>
            Gets the maximum audio sample word length, and the use of the auxilary sample bit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.SourceWordLength20Bits">
            <summary>
            Gets the sample word length when the <see cref="P:AudioPrecision.API.IProfessionalStatusBitsValues.AuxBits">AuxBits</see> property is 20 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.SourceWordLength24Bits">
            <summary>
            Gets the sample word length when the <see cref="P:AudioPrecision.API.IProfessionalStatusBitsValues.AuxBits">AuxBits</see> property is 24 bits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.AlignmentLevel">
            <summary>
            Gets the indication of alignment level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.MultichannelMode">
            <summary>
            Gets the multi-channel mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.ChannelNumber">
            <summary>
            Gets the channel when <see cref="P:AudioPrecision.API.IProfessionalStatusBitsValues.MultichannelMode">MultichannelMode</see> is undefined.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.SamplingFrequency">
            <summary>
            Gets the audio sampling frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.SamplingFrequencyScaling">
            <summary>
            Gets whether the sample frequency has additional scaling applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.DARS">
            <summary>
            Gets the digital audio reference signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.ChannelOrigin">
            <summary>
            Gets a 4 character alphanumeric channel origin string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.ChannelDest">
            <summary>
            Gets a 4 character alphanumeric channel destination string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.LocalAddress">
            <summary>
            Gets a 32-bit integer value for the address of the first sample in the current block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.TimeOfDay">
            <summary>
            Gets a 32-bit integer value for the time of day of the first sample in the current block.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Reliability0_5">
            <summary>
            Gets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 0-5.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Reliability6_13">
            <summary>
            Gets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 6-13.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Reliability14_17">
            <summary>
            Gets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 14-17.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IProfessionalStatusBitsValues.Reliability18_21">
            <summary>
            Gets a flag indicating whether or not the information carried by the channel status block is reliable for
            bytes 18-21.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHdmiMonitor">
            <summary>
            Represents the HDMI status monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.AudioInfoFrameValues">
            <summary>
            Gets the HDMI Audio Info Frame readings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.SendCecMessageFrom">
            <summary>
            Gets or sets which physical HDMI connector APx will use to send a CEC message.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.CecMessageFollower">
            <summary>
            Gets or sets the target device to receive a CEC message.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.CecMessageType">
            <summary>
            Gets or sets the type of CEC message to send.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.CecMessageOpcode">
            <summary>
            Gets or sets the op code of the CEC message when the <see cref="P:AudioPrecision.API.IHdmiMonitor.CecMessageType">CecMessageType</see> property is <see cref="F:AudioPrecision.API.CecMessageSendType.Custom">CecMessageSendType.Custom</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiMonitor.CecMessageOperands">
            <summary>
            Gets or sets the operands of the CEC message when the <see cref="P:AudioPrecision.API.IHdmiMonitor.CecMessageType">CecMessageType</see> property is <see cref="F:AudioPrecision.API.CecMessageSendType.Custom">CecMessageSendType.Custom</see>.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHdmiMonitor.SendCecMessage">
            <summary>
            Sends a CEC message to the target device and waits for a response.
            </summary>
            <returns>A response indicating a success of failure to recieve the sent message.</returns>
        </member>
        <member name="T:AudioPrecision.API.IHdmiAudioInfoFrameValues">
            <summary>
            Represents the values in the HDMI Audio Info Frame
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.SpeakerAllocation">
            <summary>
            Gets the HDMI speaker allocation
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.InfoFrameBytes">
            <summary>
            Gets the raw HDMI Audio InfoFrame bytes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.CodingType">
            <summary>
            Gets the audio type transmitted by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.ChannelCount">
            <summary>
            Gets the number of audio channels transmitted by APx.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.SamplingFrequency">
            <summary>
            Gets the sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.SampleSize">
            <summary>
            Gets the size of the transmitted audio words.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.LevelShift">
            <summary>
            Gets the level shift value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.Downmix">
            <summary>
            Gets whether downmix is permitted.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.N">
            <summary>
            Gets the N value, or -1 if the input is not HDMI.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.CTS">
            <summary>
            Gets the CTS value, or -1 if the value is not present.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.AvMute">
            <summary>
            Gets the AV Mute flag.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.Hbr">
            <summary>
            Gets the HBR flag.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.AudioLayout">
            <summary>
            Gets the audio layout, Layout 0 or Layout 1.  If the value is not present, the return value is an empty string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHdmiAudioInfoFrameValues.HdcpDecrypting">
            <summary>
            Gets whether or not the HDMI input is HDCP encrypted.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAuxControlMonitor">
            <summary>
            Represents the Auxillary Input monitor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAuxControlMonitor.AuxControlOutputValue">
            <summary>
            Gets or sets the current Aux Control Output word.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAuxControlMonitor.GetOutputPinState(System.Byte)">
            <summary>
            Gets the desired output state of the aux control output pin
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <returns>The desired output state of the requested pin</returns>
        </member>
        <member name="M:AudioPrecision.API.IAuxControlMonitor.SetOutputPinState(System.Byte,System.Boolean)">
            <summary>
            Sets the desired output state of the aux control output pin.
            </summary>
            <param name="pin">The pin.  Valid values are 0-7</param>
            <param name="pinState">The desired output state of the requested pin</param>
        </member>
        <member name="P:AudioPrecision.API.IAuxControlMonitor.AuxControlInputValue">
            <summary>
            Gets the current Aux Control Input word.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBluetoothMonitor">
            <summary>
            Represents the Bluetooth I/O monitor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBluetoothMonitor.FieldCount">
            <summary>
            Gets the number of readings in the monitor
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothMonitor.GetFieldName(System.Int32)">
            <summary>
            Gets the specifield name.
            </summary>
            <param name="fieldIndex">0 based index</param>
            <returns>The field name</returns>
        </member>
        <member name="M:AudioPrecision.API.IBluetoothMonitor.GetFieldValue(System.Int32)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="fieldIndex">0 based index</param>
            <returns>The field value</returns>
        </member>
        <member name="T:AudioPrecision.API.IPdmMonitor">
            <summary>
            Represents the PDM monitor.  These settings only apply to APx instruments which have a PDM module installed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.VddOn">
            <summary>
            Gets or sets whether or not the Vdd output is enabled when the input or output connector is not PDM.  
            This setting is disabled when the input or output connector is PDM.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.VddLevel">
            <summary>
            Gets a setting for the Vdd output level when the <see cref="P:AudioPrecision.API.IPdmMonitor.VddOn">VddOn</see> property is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.ReceiverBitClockOn">
            <summary>
            Gets or sets whether or not the PDM receiver bit clock is enabled when the input connector is not PDM.
            This setting is disabled when the input connector is PDM.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.BitClockFrequency">
            <summary>
            Gets or sets the bit clock rate when the <see cref="P:AudioPrecision.API.IPdmMonitor.ReceiverBitClockOn">ReceiverBitClockOn</see> property is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.SendCodes">
            <summary>
            Gets the settings for sending PDM control codes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitor.MonitorCode">
            <summary>
            Gets the settings for monitoring an incoming PDM control code.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPdmMonitorControlCodes">
            <summary>
            Represents the settings for sending or monitoring PDM control codes.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.On">
            <summary>
            Gets or sets whether or not APx should monitor the incoming PDM bitstream for a specified control code.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.MsbFirst">
            <summary>
            Gets or sets whether the monitored control code is expected to be sent MSB or LSB first.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.ControlCodeValue">
            <summary>
            Gets or sets the expected 8-bit PDM control code value that APx should observe.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.ControlCodeCount">
            <summary>
            Gets or sets how many repetitions of the expected code need to be observed before the application recognizes the code was received.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.ReceiveEdge">
            <summary>
            Gets or sets which edge the control code is expected to appear upon.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPdmMonitorControlCodes.Observed">
            <summary>
            Gets whether or not the monitored input control code was observed for the specified count.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalSerialMonitor">
            <summary>
            Represents the settings for the Digital Serial monitor and clock sync control.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalSerialMonitor.RefClockOutputEnabled">
            <summary>
            Gets or sets whether the Reference Frame Clock output is enabled when the input connector is not Digital Serial.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalSerialMonitor.RefClockRate">
            <summary>
            Gets or sets the Reference Clock rate in Hz.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalogOutputMonitorSettings">
            <summary>
            Represents the settings for the independent analog sine wave generator. This generator is only available on specific APx instruments
            and is only available when the output connector is not analog.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.Connector">
            <summary>
            Gets or sets which analog output connector is selected.  The only valid choices are <see cref="F:AudioPrecision.API.OutputConnectorType.AnalogUnbalanced">AnalogUnbalanced</see>
            and <see cref="F:AudioPrecision.API.OutputConnectorType.AnalogBalanced">AnalogBalanced</see>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.Frequency">
            <summary>
            Gets the setting which controls the frequency of the sine wave.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.TrackFirstChannel">
            <summary>
            Gets or sets whether all channels have the same value.  If true, all channels
            have the same value as the first channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.ChannelCount">
            <summary>
            Gets the number of output channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.SetLevel(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator to the specified level in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.SetLevel(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified level.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.GetLevel(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.GetLevel(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.GetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IAnalogOutputMonitorSettings.GetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel, in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.Unit">
            <summary>
            Gets or sets the current unit for generator levels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.UnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.BalancedSourceImpedance">
            <summary>
            Gets or sets the impedance value when the output connector is Analog Balanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.UnbalancedSourceImpedance">
            <summary>
            Gets or sets the impedance value when the output connector is Analog Unbalanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.AdcTest">
            <summary>
            Get access to the ADC Test settings while the output connector is Analog Balanced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.AdvancedAnalogOutput">
            <summary>
            Get access to the Advanced Analog Settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.PrecisionTune">
            <summary>
            Get or set the precision tune of the High Performance Sine Generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.Ch1Enabled">
            <summary>
            Sets whether or not Channel 1 of the Analog Sine Monitor is active and will output a signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitorSettings.Ch2Enabled">
            <summary>
            Sets whether or not Channel 2 of the Analog Sine Monitor is active and will output a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAnalogOutputMonitor">
            <summary>
            Represents the settings for the analog sine wave generator on the APx555 instrument.  This monitor is only
            enabled when the current output connector is not already analog.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAnalogOutputMonitor.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalPath">
            <summary>
            Represents a signal path, or a collection of measurements containing a specific
            instrument I/O configuration.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Name">
            <summary>
            Gets or sets the name of the signal path
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Count">
            <summary>
            Gets the number of measurements in the signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Index">
            <summary>
            Gets the integer index position of this signal path in the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Item(System.Int32)">
            <summary>
            Gets the specified measurement.
            </summary>
            <param name="index">The index of the measurement.</param>
            <returns>A measurement object.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Item(System.String)">
            <summary>
            Gets the specified measurement.
            </summary>
            <param name="index">The index of the measurement.</param>
            <returns>A measurement object.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalPath.GetMeasurement(System.Int32)">
            <summary>
            Gets the specified measurement from the signal path
            </summary>
            <param name="index">The 0-based measurement index, within the signal path</param>
            <returns>An object representing measurement settings for a sequence</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalPath.GetMeasurement(System.String)">
            <summary>
            Gets the specified measurement from the signal path
            </summary>
            <param name="measurementName">The name of the measurement, within the signal path</param>
            <returns>An object representing measurement settings for a sequence</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalPath.Contains(System.String)">
            <summary>
            Gets whether or not a specified measurement exists in the signal path.
            </summary>
            <param name="measurement">The name of the measurement.</param>
            <returns>True if the measurement is in the signal path.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalPath.Contains(AudioPrecision.API.MeasurementType)">
            <summary>
            Gets whether or not a specified type of measurement exists in the signal path.
            </summary>
            <param name="measurementType">The type of the measurement.</param>
            <returns>True if at least one measurement of the specified type in the signal path.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISignalPath.Checked">
            <summary>
            Gets or sets whether or not the signal path and its measurements will be executed in the sequence.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISignalPath.Run">
            <summary>
            Runs the signal path, collecting settled results (if applicable).  Any enabled sequence sub steps 
            are executed at this time.
            <exception cref="T:AudioPrecision.API.APException">Throws an APException if an error occurs.  The ErrorCode property on the APException 
            object describes the failure.</exception>
            <example>See ISequenceResult.<seealso cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example of running a measurement to 
            produce settled meter readings.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example of running a measurement and examining the
            X,Y graph values.</example> 
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalProcessing">
            <summary>
            A collection of APx signal procesing functions.
            Some functions may require additional options to be installed and may not be usable in Demo Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalProcessing.ImpedanceThieleSmall">
            <summary>
            Gets access to functions for computing Thiele-Small parameters from an impedance curve.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalProcessingImpedanceThieleSmall">
            <summary>
            Represents signal processing functions for computing Thiele-Small parameters from an impedance curve.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISignalProcessingImpedanceThieleSmall.ComputeFreeAir(System.Double[],System.Double[],System.Double[],System.Double,System.Double,AudioPrecision.API.ThieleSmallModelFit,System.Double)">
            <summary>
            Computes the free-air Thiele-Small parameters from a specified impedance curve.
            </summary>
            <param name="reImf">Array of doubles containing the real part of the measured impedance curve</param>
            <param name="imImp">Array of doubles containing the imaginary part of the measured impedance curve</param>
            <param name="frImp">Array of doubles containing the frequencies at which ReImp and ImImp were measured</param>
            <param name="fFtMin">Lower frequency of range over which curve fitting occurs</param>
            <param name="fFitMax">Upper frequency of range over which curve fitting occurs</param>
            <param name="dcResistance">Optional parameter specifying the DC resistance if it is measured rather than calculated from the curve fit.</param>
            <param name="model">Parameter to specify which model is used (Standard, LR-2 or Wright model).</param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.ISignalProcessingImpedanceThieleSmallResults">
            <summary>
            Represents the set of computed Thiele-Small parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalProcessingImpedanceThieleSmallResults.Parameters">
            <summary>
            Gets the list of all parameters known to this result object.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISignalProcessingImpedanceThieleSmallResults.GetValue(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter value, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.ISignalProcessingImpedanceThieleSmallResults.GetText(AudioPrecision.API.ThieleSmallParameter,System.Boolean)">
            <summary>
            Gets the specified Thiele-Small parameter value as formatted text, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <param name="withUnitString">True to include the unit string, False to remove it</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="T:AudioPrecision.API.SwitcherAddress">
            <summary>
            Represents the address of an APIB switcher.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher0">
            <summary>
            Address 0
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher1">
            <summary>
            Address 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher2">
            <summary>
            Address 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher3">
            <summary>
            Address 3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher4">
            <summary>
            Address 4
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher5">
            <summary>
            Address 5
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher6">
            <summary>
            Address 6
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher7">
            <summary>
            Address 7
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher8">
            <summary>
            Address 8
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher9">
            <summary>
            Address 9
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher10">
            <summary>
            Address 10
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher11">
            <summary>
            Address 11
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher12">
            <summary>
            Address 12
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher13">
            <summary>
            Address 13
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher14">
            <summary>
            Address 14
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SwitcherAddress.Switcher15">
            <summary>
            Address 15
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection">
            <summary>
            Represents the settings for an Audio Precision input switcher.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.GetChannelA(AudioPrecision.API.SwitcherAddress)">
            <summary>
            Gets the assigned channel A selection for the specified switcher address.
            </summary>
            <param name="address">The switcher address</param>
            <returns>The channel selection</returns>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.SetChannelA(AudioPrecision.API.SwitcherAddress,AudioPrecision.API.SwitcherChannelSelection)">
            <summary>
            Sets the channel A selection for the specified switcher address
            </summary>
            <param name="address">The switcher address</param>
            <param name="channelSelection">The channel selection</param>
            <example>See ISignalPathSetup.<see cref="P:AudioPrecision.API.ISignalPathSettings.InputSwitcherConfiguration"/> for an example of controlling an input switcher.</example>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.GetChannelB(AudioPrecision.API.SwitcherAddress)">
            <summary>
            Gets the assigned channel B selection for the specified switcher address.
            </summary>
            <param name="address">The switcher address</param>
            <returns>The channel selection</returns>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.SetChannelB(AudioPrecision.API.SwitcherAddress,AudioPrecision.API.SwitcherChannelSelection)">
            <summary>
            Sets the channel B selection for the specified switcher address
            </summary>
            <param name="address">The switcher address</param>
            <param name="channelSelection">The channel selection</param>
            <example>See ISignalPathSetup.<see cref="P:AudioPrecision.API.ISignalPathSettings.InputSwitcherConfiguration"/> for an example of controlling an input switcher.</example>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.Open(System.String)">
            <summary>
            Loads the switcher configuration from a saved file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.IInputSwitcherConfigurationBaseCollection.Save(System.String)">
            <summary>
            Saves the current switcher configuration to a file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="T:AudioPrecision.API.IInputSwitcherConfigurationCollection">
            <summary>
            Represents a collection of input switcher settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputSwitcherConfigurationCollection.Name">
            <summary>
            Gets or sets the name of the collection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection">
            <summary>
            Represents the settings for an Audio Precision output switcher.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.GetChannelA(AudioPrecision.API.SwitcherAddress)">
            <summary>
            Gets the assigned channel A selection for the specified switcher address.
            </summary>
            <param name="address">The switcher address</param>
            <returns>The channel selection</returns>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.SetChannelA(AudioPrecision.API.SwitcherAddress,AudioPrecision.API.SwitcherChannelSelection)">
            <summary>
            Sets the channel A selection for the specified switcher address
            </summary>
            <param name="address">The switcher address</param>
            <param name="channelSelection">The channel selection</param>
            <example>See ISignalPathSetup.<see cref="P:AudioPrecision.API.ISignalPathSettings.OutputSwitcherConfiguration"/> for an example of controlling an output switcher.</example>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.GetChannelB(AudioPrecision.API.SwitcherAddress)">
            <summary>
            Gets the assigned channel B selection for the specified switcher address.
            </summary>
            <param name="address">The switcher address</param>
            <returns>The channel selection</returns>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.SetChannelB(AudioPrecision.API.SwitcherAddress,AudioPrecision.API.OutputSwitcherChannelBSelection)">
            <summary>
            Sets the channel B selection for the specified switcher address
            </summary>
            <param name="address">The switcher address</param>
            <param name="channelSelection">The channel selection</param>
            <example>See ISignalPathSetup.<see cref="P:AudioPrecision.API.ISignalPathSettings.OutputSwitcherConfiguration"/> for an example of controlling an output switcher.</example>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.Open(System.String)">
            <summary>
            Loads the switcher configuration from a saved file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="M:AudioPrecision.API.IOutputSwitcherConfigurationBaseCollection.Save(System.String)">
            <summary>
            Saves the current switcher configuration to a file.
            </summary>
            <param name="fileName">The name of the file</param>
        </member>
        <member name="T:AudioPrecision.API.IOutputSwitcherConfigurationCollection">
            <summary>
            Represents a collection of output switcher settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOutputSwitcherConfigurationCollection.Name">
            <summary>
            Gets or sets the name of the collection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IOutputConnector">
            <summary>
            Represents the output connector from the APx instrument.  This connector choice determines
            how signals generated by the instrument are sent into the device under test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOutputConnector.Name">
            <summary>
            Gets the name of the connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOutputConnector.Type">
            <summary>
            Gets or sets the type of the connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOutputConnector.IsAnalog">
            <summary>
            Gets whether or not the current output connector is Analog Unbalanced or Analog Balanced.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInputConnector">
            <summary>
            Represents the input connector on the APx instrument.  This connector choices determines
            how signals from the device under test are sent into the APx instrument for analysis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputConnector.Name">
            <summary>
            Gets the name of the connector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInputConnector.Type">
            <summary>
            Gets or sets the type of the connector.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.IInputConnector.TypeChanged">
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.IInputConnector.IsAnalog">
            <summary>
            Gets whether or not the current input connector is Analog.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IVersionInfo">
            <summary>
            Represents the version information for the APx software and any attached APx instrument.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.SoftwareVersion">
            <summary>
            Gets the software version information.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.InstrumentID">
            <summary>
            Gets the attached APx500 series HW instrument serial number.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.HwModel">
            <summary>
            Gets the model of the attached APx500 series HW instrument
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.AdjustmentDate">
            <summary>
            Gets the attached APx500 series HW date of factory adjustment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.MaxAnalogInputChannelCount">
            <summary>
            Gets the maximum number of analog input channels supported by the APx instrument.
            If no instrument is present, this returns the maximum number of channels allowed in Demo Mode.
            The APx585 supports 8 analog input channels.  The APx586 supports 16 analog input channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.MaxAnalogOutputChannelCount">
            <summary>
            Gets the maximum number of analog output channels supported by the APx instrument.
            If no instrument is present, this returns the maximum number of channels allowed in Demo Mode.
            The APx585 supports 8 analog output channels.  The APx525 supports 2 analog output channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.Modules">
            <summary>
            Gets the collection of installed hardware modules
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.IsCalibrationEnabled">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.IsValidBluetoothAddress">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IVersionInfo.IsOptionPresent(AudioPrecision.API.APxOption)">
            <summary>
            Returns true if the specified option is available for use by this instance of APx500.
            In Demo Mode, all hardware options are present for the specified hardware model, 
            i.e. APx585 contains HDMI and Digital Seral I/O
            </summary>
            <param name="option">The requested APx option</param>
            <returns>True if present, otherwise false</returns>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.Is64BitProcess">
            <summary>
            Determines if the application is executing in a 64 bit environment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVersionInfo.APxKeyBoxInfo">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAPxKeyBoxInfo">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxInfo.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxInfo.Item(System.Int32)">
            <summary>
            Gets the specified item
            </summary>
            <param name="index">0-based index of the item</param>
            <returns>An object representing a release or option programmed into the APx KeyBox</returns>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxInfo.SystemClock">
            <summary>
            Gets the current date and time from the APx system clock.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAPxKeyBoxItem">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxItem.Name">
            <summary>
            Gets the name of the release or option
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxItem.ExpirationDate">
            <summary>
            Gets the expiration date, or <see cref="F:System.DateTime.MaxValue"/> if it does not expire.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAPxKeyBoxItem.HasExpirationDate">
            <summary>
            Gets whether or not this item expires.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInstrumentModule">
            <summary>
            Describes an installed hardware module
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.Name">
            <summary>
            Gets the name of the hardware module
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.Info">
            <summary>
            Gets additional information about the module
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.BoardName">
            <summary>
            Returns the 4 char board name such as "BVID" for the Hdmi board.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.SwVersionMajorRevision">
            <summary>
            Returns the major part of the version information for the boards firmware.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.SwVersionMinorRevision">
            <summary>
            Returns the minor part of the version information for the boards firmware.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModule.Signature">
            <summary>
            Returns the signature of the board firmware. If it is not provided by
            the module, this will return "0000".
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInstrumentModuleCollection">
            <summary>
            Represents the collection of installed hardware modules
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModuleCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInstrumentModuleCollection.Item(System.Int32)">
            <summary>
            Gets the specified object from the collection
            </summary>
            <param name="index">The index</param>
            <returns>The module</returns>
        </member>
        <member name="T:AudioPrecision.API.IWaveformFileSettings">
            <summary>
            Represents the settings for playback of a disk-based waveform file through the APx generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.IsEncoded">
            <summary>
            Gets whether or not the selected waveform is encoded.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.FileName">
            <summary>
            Returns the file name chosen.  The waveform file is copied into the project file and the original file remains on disk.  
            This property returns the name of the file without the original path information.
            If no file has been selected, this property returns an empty string.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.Description">
            <summary>
            Returns a text description of audio contents the file.  Example:  DTS 5.1 48000 Hz
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.HasTooManySamples">
            <summary>
            Gets whether or not the waveform contains more samples than allowed by APx.  If the file is too long,
            APx plays up to the internal maximum number of samples of the original file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IWaveformFileSettings.GetMultiWaveChannelAssignment(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the channel mappings for a multi-channel waveform file.  If the file is mono, all channels are mapped to Left (channel 1).
            </summary>
            <param name="ch">The channel of interest</param>
            <returns>Returns the desired output channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IWaveformFileSettings.SetMultiWaveChannelAssignment(AudioPrecision.API.OutputChannelIndex,AudioPrecision.API.WaveMultiChannelAssignment)">
            <summary>
            Sets the desired channel mapping.
            </summary>
            <param name="ch">The channel of interest</param>
            <param name="assignment">Channel number to play the data for the given channel of the multi-channel waveform</param>
            <exception cref="T:AudioPrecision.API.APException">Throws an exception if you attempt to set channel mapping on a mono waveform file or if no waveform file has been loaded.</exception>
        </member>
        <member name="M:AudioPrecision.API.IWaveformFileSettings.ResetChannelAssignments(AudioPrecision.API.WaveformChannelAssignments)">
            <summary>
            Sets all channel assignments to a pre-defined layout
            </summary>
            <param name="setting">The desired channel assignment setting</param>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.BitExactDigitalOutput">
            <summary>
            Gets or sets whether the waveform file is output exactly in its original form, without dither.
            This property only applies when the waveform file is non-encoded and when the output format is digital.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.StartOffsetInSamples">
            <summary>
            Gets or sets the number of samples to skip ahead in the waveform file, before the signal is played.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.StartOffsetInSeconds">
            <summary>
            Gets or sets the amount of time to skip ahead in the waveform file, before the signal is played.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.DtsTransmitRate">
            <summary>
            Gets or sets the output sample rate when the waveform file is a DTS file and the output connector is HDMI or Digital Serial.  
            This setting only applies to DTS files which can be transmitted at 48 kHz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.DtsXTransmitMode">
            <summary>
            Gets or sets the HDMI/Digital Serial packing mode for DTS:X files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.DurationInSamples">
            <summary>
            Gets the file playback duration in samples.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.DurationInSeconds">
            <summary>
            Gets the file playback duration in samples.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IWaveformFileSettings.ShowDurationInSeconds">
            <summary>
            Gets or sets whether to show file playback in seconds or samples.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OutputChannelAssignments">
            <summary>
            Describes how an arbitrary waveform will be applied to the output channels of the APx generator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignments.Default">
            
             <summary>
             All channels incremental
             </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignments.InverseDefault">
            <summary>
            Even channels output ChA, odd channels output ChB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignments.AllChA">
            <summary>
            All channels output ChA
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OutputChannelAssignments.AllChB">
            <summary>
            All channels output ChB
            </summary>
        </member>
        <member name="T:AudioPrecision.API.WaveformChannelAssignments">
            <summary>
            Describes how an arbitrary waveform will be applied to the output channels of the APx generator.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.Default">
            
             <summary>
             All channels incremental
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh1">
            
              <summary>
             Single wave channel selector
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh2">
            
             <summary>
             Multichannel output Ch2
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh3">
            
             <summary>
             Multichannel output Ch3
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh4">
            
             <summary>
             Multichannel output Ch4
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh5">
            
             <summary>
             Multichannel output Ch5
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh6">
            
             <summary>
             Multichannel output Ch6
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh7">
            
             <summary>
             Multichannel output Ch7
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh8">
            
             <summary>
             Multichannel output Ch8
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh9">
            
             <summary>
             Multichannel output Ch9
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh10">
            
             <summary>
             Multichannel output Ch10
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh11">
            
             <summary>
             Multichannel output Ch11
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh12">
            
             <summary>
             Multichannel output Ch12
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh13">
            
             <summary>
             Multichannel output Ch13
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh14">
            
             <summary>
             Multichannel output Ch14
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh15">
            
             <summary>
             Multichannel output Ch15
             </summary>
        </member>
        <member name="F:AudioPrecision.API.WaveformChannelAssignments.AllCh16">
            
             <summary>
             Multichannel output Ch16
             </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYDistortionGraphLimit">
            <summary>
            Represents a graphical limit for an X-Y level vs distortion graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Double[],System.Double[])">
            <summary>
            Sets the limit values for the specified channel of this graph for the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="xValues">The values for points on the X axis</param>
            <param name="yValues">The values for points on the Y axis</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetValues(System.Int32,AudioPrecision.API.DistortionHarmonicIndex,System.Double[],System.Double[])">
            <summary>
            Sets the limit values for the specified channel of this graph for the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="xValues">The values for points on the X axis</param>
            <param name="yValues">The values for points on the Y axis</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the X axis limit values for the graph on the specified channel for the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the Y axis limit values for the graph on the specified channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.GetXValues(System.Int32,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the X axis limit values for the graph on the specified channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.GetYValues(System.Int32,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the Y axis limit values for the graph on the specified channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetX(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.Double)">
            <summary>
            Updates the X value of a specific point for a specifc channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="index">The index of the point</param>
            <param name="x">The new X value</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetX(System.Int32,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.Double)">
            <summary>
            Updates the X value of a specific point for a specifc channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="index">The index of the point</param>
            <param name="x">The new X value</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetY(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.Double)">
            <summary>
            Updates the Y value of a specific point for a specific channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="index">The index of the point</param>
            <param name="y">The new Y value</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.SetY(System.Int32,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.Double)">
            <summary>
            Updates the Y value of a specific point for a specific channel and the specified harmonic.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The specified harmonic</param>
            <param name="index">The index of the point</param>
            <param name="y">The new Y value</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.Clear">
            <summary>
            Removes all points for all channels from this limit for all harmonics.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.RemoveChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Removes all limit points for the specified channel for all harmonics.
            </summary>
            <param name="ch">The channel</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.RemoveChannel(System.Int32)">
            <summary>
            Removes all limit points for the specified channel.
            </summary>
            <param name="ch">The channel</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.RemoveHarmonic(AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Removes all limit points for the specified harmonic index.
            If TrackFirstLimitChannel is enabled, then this harmonic is removed from all channels;
            otherwise, it is only removed from the display channel.
            </summary>
            <param name="harmonicIndex">The specified harmonic index</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.RemoveHarmonic(System.Int32)">
            <summary>
            Removes all limit points for the specified harmonic index.
            If TrackFirstLimitChannel is enabled, then this harmonic is removed from all channels;
            otherwise, it is only removed from the display channel.
            </summary>
            <param name="harmonicIndex">The specified harmonic index</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.ImportData(System.String)">
            <summary>
            Imports data from an Excel file or CSV file for use as a limit.  The data must
            be in units that are compatible with the measurement this limit is attached to.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.ExportData(System.String)">
            <summary>
            Exports the limit data to an Excel or CSV file.  The type of file is determined by the file
            extension.  If the file extension is ".xls" the file is exported to an Excel file, otherwise it
            is exported to a CSV text file.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraphLimit.Enabled">
            <summary>
            Gets or sets whether or not this limit will be checked.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.CopyFromGraphData(AudioPrecision.API.NumberOfGraphPoints)">
            <summary>
            Copies the current graph data to this limit.
            </summary>
            <param name="dataPoints">The number of points to copy</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValues(System.Double)">
            <summary>
            Adjust the data values by a specified amount.  The value is specified in the current
            unit for the measurement.
            </summary>
            <param name="adjustment">+/- value applied to all channels</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValues(AudioPrecision.API.InputChannelIndex,System.Double[])">
            <summary>
            Adjust the data values by a specified amount for the specified channel.  The value is specified in the current
            unit for the measurement.
            </summary>
            <param name="ch">The specified channel</param>
            <param name="adjustment">array of +/- values, with length matching the number of channels in the data</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValues(System.Int32,System.Double[])">
            <summary>
            Adjust the data values by a specified amount for the specified channel.  The value is specified in the current
            unit for the measurement.
            </summary>
            <param name="ch">The specified channel</param>
            <param name="adjustment">array of +/- values, with length matching the number of channels in the data</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValue(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Double)">
            <summary>
            Adjust the data value for a specified channel and harmonic.  The value is specified in the
            current unit for the measurement
            </summary>
            <param name="ch">The specified channel</param>
            <param name="harmonic">The specified harmonic</param>
            <param name="adjustment">+/- value applied to the specified harmonic</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValue(System.Int32,AudioPrecision.API.DistortionHarmonicIndex,System.Double)">
            <summary>
            Adjust the data value for a specified channel and harmonic.  The value is specified in the
            current unit for the measurement
            </summary>
            <param name="ch">The specified channel</param>
            <param name="harmonic">The specified harmonic</param>
            <param name="adjustment">+/- value applied to the specified harmonic</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValue(AudioPrecision.API.InputChannelIndex,System.Int32,System.Double)">
            <summary>
            Adjust the data value for a specified channel and harmonic.  The value is specified in the
            current unit for the measurement
            </summary>
            <param name="ch">The specified channel</param>
            <param name="harmonic">The specified harmonic</param>
            <param name="adjustment">+/- value applied to the specified harmonic</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.OffsetValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Adjust the data value for a specified channel and harmonic.  The value is specified in the
            current unit for the measurement
            </summary>
            <param name="ch">The specified channel</param>
            <param name="harmonic">The specified harmonic</param>
            <param name="adjustment">+/- value applied to the specified harmonic</param>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheck">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnChannel(System.Int32)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnHarmonic(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel and 
            harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnHarmonic(System.Int32,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel and 
            harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnHarmonic(AudioPrecision.API.InputChannelIndex,System.Int32)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel and 
            harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.PassedLimitCheckOnHarmonic(System.Int32,System.Int32)">
            <summary>
            Gets whether the data on the graph associated with this limit falls within the specified range for the specified channel and 
            harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if the value is within range</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not there is limit data for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if there is limit data for the channel</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnChannel(System.Int32)">
            <summary>
            Gets whether or not there is limit data for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if there is limit data for the channel</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnHarmonic(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether or not there is limit data for the specified channel and specified harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if there is limit data for the channel and harmonic index</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnHarmonic(System.Int32,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether or not there is limit data for the specified channel and specified harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if there is limit data for the channel and harmonic index</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnHarmonic(AudioPrecision.API.InputChannelIndex,System.Int32)">
            <summary>
            Gets whether or not there is limit data for the specified channel and specified harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if there is limit data for the channel and harmonic index</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraphLimit.HasLimitOnHarmonic(System.Int32,System.Int32)">
            <summary>
            Gets whether or not there is limit data for the specified channel and specified harmonic index.
            </summary>
            <param name="ch">The channel</param>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if there is limit data for the channel and harmonic index</returns>
        </member>
        <member name="T:AudioPrecision.API.MeasurementResultTypeEnum">
            <summary>
            Specifies the result of a specific measurement. The result is usually represented by a bar graph or X,Y line graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelMeter">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsTime">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsFrequency">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsPhase">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsGeneratorLevel">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsGeneratorOffset">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsOutputSampleRate">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsRefSyncOutputRate">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsJitterLevelUi">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsJitterLevelSec">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsDcxDcv1Level">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsDcxDcv2Level">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DigitalInterfaceLevelVsVBiasLevel">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelMeter">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsTime">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsFrequency">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsPhase">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsGeneratorLevel">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsGeneratorOffset">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsOutputSampleRate">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsRefSyncOutputRate">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsJitterLevelUi">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsJitterLevelSec">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsDcxDcv1Level">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsDcxDcv2Level">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsVBiasLevel">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelMeter">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsTime">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsFrequency">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsPhase">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsGeneratorLevel">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsGeneratorOffset">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsOutputSampleRate">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsRefSyncOutputRate">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsJitterLevelUi">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsJitterLevelSec">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsDcxDcv1Level">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsDcxDcv2Level">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BandpassLevelVsVBiasLevel">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateMeter">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsTime">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsFrequency">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsPhase">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsGeneratorLevel">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsGeneratorOffset">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsOutputSampleRate">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsRefSyncOutputRate">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsJitterLevelUi">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsJitterLevelSec">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsDcxDcv1Level">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsDcxDcv2Level">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ErrorRateVsVBiasLevel">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorMeter">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsTime">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsFrequency">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsPhase">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsGeneratorLevel">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsGeneratorOffset">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsOutputSampleRate">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsRefSyncOutputRate">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsJitterLevelUi">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsJitterLevelSec">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsDcxDcv1Level">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsDcxDcv2Level">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsVBiasLevel">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelMeter">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsTime">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsFrequency">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsPhase">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsGeneratorLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsGeneratorOffset">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsOutputSampleRate">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsRefSyncOutputRate">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsJitterLevelUi">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsJitterLevelSec">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsDcxDcv1Level">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsDcxDcv2Level">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcLevelVsVBiasLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsMeter">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsTime">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsFrequency">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsPhase">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsGeneratorLevel">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsGeneratorOffset">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsOutputSampleRate">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsRefSyncOutputRate">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsJitterLevelUi">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsJitterLevelSec">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsDcxDcv1Level">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsDcxDcv2Level">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxOhmsVsVBiasLevel">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsMeter">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsTime">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsFrequency">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsPhase">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsGeneratorLevel">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsGeneratorOffset">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsOutputSampleRate">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsRefSyncOutputRate">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsJitterLevelUi">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsJitterLevelSec">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsDcxDcv1Level">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsDcxDcv2Level">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DcxVoltsVsVBiasLevel">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyMeter">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsTime">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsFrequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsPhase">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsGeneratorLevel">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsGeneratorOffset">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsOutputSampleRate">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsRefSyncOutputRate">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsJitterLevelUi">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsJitterLevelSec">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsDcxDcv1Level">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsDcxDcv2Level">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyVsVBiasLevel">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainMeter">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsTime">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsFrequency">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsPhase">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsGeneratorLevel">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsGeneratorOffset">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsOutputSampleRate">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsRefSyncOutputRate">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsJitterLevelUi">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsJitterLevelSec">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsDcxDcv1Level">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsDcxDcv2Level">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsVBiasLevel">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioMeter">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsTime">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsFrequency">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsPhase">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsGeneratorLevel">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsGeneratorOffset">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsOutputSampleRate">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsRefSyncOutputRate">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsJitterLevelUi">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsJitterLevelSec">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsDcxDcv1Level">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsDcxDcv2Level">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsVBiasLevel">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioMeter">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsTime">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsFrequency">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsPhase">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsGeneratorLevel">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsGeneratorOffset">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsOutputSampleRate">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsRefSyncOutputRate">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsJitterLevelUi">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsJitterLevelSec">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsDcxDcv1Level">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsDcxDcv2Level">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelRatioVsVBiasLevel">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelMeter">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsTime">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsFrequency">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsPhase">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsGeneratorLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsGeneratorOffset">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsOutputSampleRate">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsRefSyncOutputRate">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsJitterLevelUi">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsJitterLevelSec">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsDcxDcv1Level">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsDcxDcv2Level">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsVBiasLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseMeter">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsTime">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsFrequency">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsPhase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsGeneratorLevel">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsGeneratorOffset">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsOutputSampleRate">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsRefSyncOutputRate">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsJitterLevelUi">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsJitterLevelSec">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsDcxDcv1Level">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsDcxDcv2Level">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PhaseVsVBiasLevel">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelMeter">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsTime">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsFrequency">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsPhase">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsGeneratorLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsGeneratorOffset">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsOutputSampleRate">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsRefSyncOutputRate">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsJitterLevelUi">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsJitterLevelSec">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsDcxDcv1Level">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsDcxDcv2Level">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsVBiasLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateMeter">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsTime">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsFrequency">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsPhase">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsGeneratorLevel">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsGeneratorOffset">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsOutputSampleRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsRefSyncOutputRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsJitterLevelUi">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsJitterLevelSec">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsDcxDcv1Level">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsDcxDcv2Level">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InputSampleRateVsVBiasLevel">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioMeter">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsTime">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsFrequency">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsPhase">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsGeneratorLevel">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsGeneratorOffset">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsOutputSampleRate">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsRefSyncOutputRate">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsJitterLevelUi">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsJitterLevelSec">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsDcxDcv1Level">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsDcxDcv2Level">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsVBiasLevel">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelMeter">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsTime">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsFrequency">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsPhase">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsGeneratorLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsGeneratorOffset">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsOutputSampleRate">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsRefSyncOutputRate">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsJitterLevelUi">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsJitterLevelSec">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsDcxDcv1Level">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsDcxDcv2Level">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsVBiasLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioMeter">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsTime">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsFrequency">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsPhase">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsGeneratorLevel">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsGeneratorOffset">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsOutputSampleRate">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsRefSyncOutputRate">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsJitterLevelUi">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsJitterLevelSec">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsDcxDcv1Level">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsDcxDcv2Level">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsVBiasLevel">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsMeter">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsTime">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsFrequency">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsPhase">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsGeneratorLevel">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsGeneratorOffset">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsOutputSampleRate">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsRefSyncOutputRate">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsJitterLevelUi">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsJitterLevelSec">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsDcxDcv1Level">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsDcxDcv2Level">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.BitsVsVBiasLevel">
            <summary>
            Bits
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelMeter">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelVsFrequency">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelVsTime">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelVsGeneratorLevel">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelVsJitterLevel">
            <summary>
            THD Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdLevelVsMeasuredLevel">
            <summary>
            THD Level vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioMeter">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioVsFrequency">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioVsTime">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioVsGeneratorLevel">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioVsJitterLevel">
            <summary>
            THD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdRatioVsMeasuredLevel">
            <summary>
            THD Ratio vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GainVsJitterLevel">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsJitterLevel">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SinadRatioVsMeasuredLevel">
            <summary>
            SINAD vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelVsJitterLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RmsLevelAcPlusDcVsFrequency">
            <summary>
            RMS Level (AC+DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RmsLevelAcPlusDcVsTime">
            <summary>
            RMS Level (AC+DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RmsLevelAcPlusDcVsGeneratorLevel">
            <summary>
            RMS Level (AC+DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PeakLevelVsJitterLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrestFactorVsMeasuredLevel">
            <summary>
            Crest Factor vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsJitterLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNLevelVsMeasuredLevel">
            <summary>
            THD+N Level vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsJitterLevel">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThdNRatioVsMeasuredLevel">
            <summary>
            THD+N Ratio vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrosstalkMeter">
            <summary>
            Crosstalk
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrosstalkVsFrequency">
            <summary>
            Crosstalk
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GroupDelayMeter">
            <summary>
            Group Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GroupDelayVsFrequency">
            <summary>
            Group Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductLevelVsFrequency">
            <summary>
            Distortion Product Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductLevelVsJitterLevel">
            <summary>
            Distortion Product Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductRatioVsFrequency">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductRatioVsJitterLevel">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.GeneratorLevelVsFrequency">
            <summary>
            Generator Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SignalToNoiseRatioMeter">
            <summary>
            Signal to Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImdRatioVsMeasuredLevel">
            <summary>
            IMD Ratio vs Measured Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DeviationMeter">
            <summary>
            Deviation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DynamicRangeMeter">
            <summary>
            Dynamic Range - AES17
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DimRatioMeter">
            <summary>
            DIM Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DimRatioVsMeasuredLevel">
            <summary>
            DIM Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DelayVsTime">
            <summary>
            Delay vs Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FrequencyShiftMeter">
            <summary>
            Frequency Shift
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.HarmonicSumRatioMeter">
            <summary>
            Harmonic Sum Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.HarmonicSumLevelMeter">
            <summary>
            Harmonic Sum Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.EnobMeter">
            <summary>
            ENOB
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.QpeakLevelMeter">
            <summary>
            Q-peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrMeter">
            <summary>
            PSR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrVsFrequency">
            <summary>
            PSR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrPlusNMeter">
            <summary>
            PSR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrPlusNVsFrequency">
            <summary>
            PSR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrrMeter">
            <summary>
            PSRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrrVsFrequency">
            <summary>
            PSRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrrPlusNMeter">
            <summary>
            PSRR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PsrrPlusNVsFrequency">
            <summary>
            PSRR+N
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PesqMeter">
            <summary>
            PESQ
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PolqaMeter">
            <summary>
            POLQA G.107
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.MosMeter">
            <summary>
            MOS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.MosVsTime">
            <summary>
            MOS vs Time
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.MosAverageMeter">
            <summary>
            MOS Average
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ModulatedNoiseRatioMeter">
            <summary>
            Modulated Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.NoiseLevelMeter">
            <summary>
            Noise Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.NoiseLevelVsGeneratorLevel">
            <summary>
            Noise Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.NoiseRatioMeter">
            <summary>
            Noise Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SampleRateMeter">
            <summary>
            Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FftSpectrumMonitor">
            <summary>
            FFT
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ScopeMonitor">
            <summary>
            Scope
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LevelAndDistortion">
            <summary>
            Level and Distortion
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.EnergyTimeCurve">
            <summary>
            Energy Time Curve
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TdPlusNSpectrum">
            <summary>
            TD+N Spectrum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpulseResponse">
            <summary>
            Impulse Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpulseResponseWithWindow">
            <summary>
            Impulse Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpulseResponseWindow">
            <summary>
            Window
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AmplitudeSpectralDensity">
            <summary>
            Amplitude Spectral Density
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PowerSpectralDensity">
            <summary>
            Power Spectral Density
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FileMos">
            <summary>
            File MOS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PolqaFileMos">
            <summary>
            File MOS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PolqaMosAverageMeter">
            <summary>
            MOS Average
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PolqaMosMeter">
            <summary>
            MOS
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AcquiredWaveform">
            <summary>
            Acquired Waveform
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ReferenceWaveform">
            <summary>
            Reference Waveform
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AcquiredCrosstalkWaveformOneChannelDriven">
            <summary>
            Acquired Crosstalk Waveform One Channel Driven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AcquiredCrosstalkWaveformOneChannelUndriven">
            <summary>
            Acquired Crosstalk Waveform One Channel Undriven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Scope">
            <summary>
            Scope
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.FFTSpectrum">
            <summary>
            FFT Spectrum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.InstantaneousErrorRate">
            <summary>
            Instantaneous Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CumulativeErrors">
            <summary>
            Cumulative Errors
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Linearity">
            <summary>
            Linearity
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RubAndBuzzCrestFactor">
            <summary>
            Rub and Buzz Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RubAndBuzzPeakRatio">
            <summary>
            Rub and Buzz Peak Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RubAndBuzz">
            <summary>
            Rub and Buzz
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpedanceMagnitude">
            <summary>
            Impedance Magnitude
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpedancePhase">
            <summary>
            Impedance Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpedanceReal">
            <summary>
            Impedance Real
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ImpedanceImaginary">
            <summary>
            Impedance Imaginary
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.NoiseDensitySpectrum">
            <summary>
            Noise Density Spectrum
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DelayVsTimeResampled">
            <summary>
            Delay vs Time (Resampled)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CustomXYResult">
            <summary>
            (X, Y)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DimRatioVsLevel">
            <summary>
            DIM Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrosstalkOneChannelUndriven">
            <summary>
            Crosstalk, One Channel Undriven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CrosstalkOneChannelDriven">
            <summary>
            Crosstalk, One Channel Driven
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RelativeLevelVsFrequency">
            <summary>
            Relative Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageJitterLevelVsJitterLevel">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LinearityVsJitterLevel">
            <summary>
            Linearity
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LinearityVsJitterLevelUi">
            <summary>
            Linearity
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.LinearityVsJitterLevelSec">
            <summary>
            Linearity
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Smooth">
            <summary>
            Smooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SmoothTimeDomain">
            <summary>
            Smooth
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.XYStatistics">
            <summary>
            Min/Max/Statistics
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Normalize">
            <summary>
            Normalize/Invert
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.OffsetXY">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CompareXY">
            <summary>
            Compare
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SpecifyXYDataPoints">
            <summary>
            Specify Data Points
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Eq">
            <summary>
            EQ
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageErrorRate">
            <summary>
            Average Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TotalErrors">
            <summary>
            Total Errors
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TotalRmsLevelMeter">
            <summary>
            Total Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ToneRmsLevelMeter">
            <summary>
            Tone Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.MaximumToneLevelMeter">
            <summary>
            Maximum Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ToneInterchannelPhaseMeter">
            <summary>
            Phase (at Tone)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ToneCrosstalkMeter">
            <summary>
            Crosstalk (at Tone)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.Metadata">
            <summary>
            Metadata
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.ThieleSmall">
            <summary>
            Thiele-Small
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CompareBitstream">
            <summary>
            Compare Bitstream
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.AverageDelayMeter">
            <summary>
            Average Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CustomMeterResult">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.NoiseRmsLevelMeter">
            <summary>
            Noise Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CmrrMeter">
            <summary>
            CMRR
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CmrrIecMeter">
            <summary>
            CMRR IEC
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CmrrPin2Meter">
            <summary>
            CMRR Pin2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CmrrPin3Meter">
            <summary>
            CMRR Pin3
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TdPlusNLevelMeter">
            <summary>
            TD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TdPlusNRatioMeter">
            <summary>
            TD+N Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DelayMeter">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.RmsLevelAcPlusDcMeter">
            <summary>
            RMS Level (AC+DC)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.MeterStatistics">
            <summary>
            Min/Max/Statistics
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.OffsetMeter">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CompareMeter">
            <summary>
            Compare
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DataDistribution">
            <summary>
            Data Distribution
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.SpecifyXYSingleDataPoint">
            <summary>
            Specify Data Point
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DimDistortionProductRatio">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductLevelMeter">
            <summary>
            Distortion Product Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductRatioMeter">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PassFailResponse">
            <summary>
            Pass/Fail Response
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.PolqaDataTable">
            <summary>
            POLQA Result Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.TedsDataTable">
            <summary>
            TEDS Data
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductLevelVsGeneratorLevel">
            <summary>
            Distortion Product Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DistortionProductRatioVsGeneratorLevel">
            <summary>
            Distortion Product Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.CorrelationVsTime">
            <summary>
            Cross Correlation
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.DelaySecondsMeter">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementResultTypeEnum.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SettlingMeterType">
            <summary>
            Specifies which meter result type should be settled.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.DigitalInterfaceLevel">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.AverageJitterLevel">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.BandpassLevel">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.BitError">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.CrestFactor">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.DcLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.DcxOhms">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.DcxVolts">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.Gain">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.ImdRatio">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.LevelRatio">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.PeakLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.RmsLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.SampleRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.SinadRatio">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.ThdNLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SettlingMeterType.ThdNRatio">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulationTarget">
            <summary>
            Specifies which meter result is the target of a regulation function.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.AverageJitterLevel">
            <summary>
            Average Jitter Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.BandpassLevel">
            <summary>
            Bandpass Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.CrestFactor">
            <summary>
            Crest Factor
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.DcLevel">
            <summary>
            DC Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.DcxVolts">
            <summary>
            DC Level (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.DigitalInterfaceLevel">
            <summary>
            Digital Interface Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.BitError">
            <summary>
            Error Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.Gain">
            <summary>
            Gain
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.ImdRatio">
            <summary>
            IMD Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.SampleRate">
            <summary>
            Input Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.PeakLevel">
            <summary>
            Peak Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.DcxOhms">
            <summary>
            Resistance (DCX)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.RmsLevel">
            <summary>
            RMS Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.LevelRatio">
            <summary>
            RMS Level Ratio
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.SinadRatio">
            <summary>
            SINAD
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.ThdNLevel">
            <summary>
            THD+N Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationTarget.ThdNRatio">
            <summary>
            THD+N Ratio
            </summary>
        </member>
        <member name="T:AudioPrecision.API.RegulationSource">
            <summary>
            Specifies which field is modified by the regulation function.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.GeneratorFrequency">
            <summary>
            Gen Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DualSineFrequencyA">
            <summary>
            Gen Freq A
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DualSineFrequencyB">
            <summary>
            Gen Freq B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.ImdFrequency1">
            <summary>
            IMD Freq 1
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.ImdFrequency2">
            <summary>
            IMD Freq 2
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DfdMeanFrequency">
            <summary>
            Mean Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DfdDiffFrequency">
            <summary>
            Diff Freq
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.GeneratorPhase">
            <summary>
            Gen Phase B
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.GeneratorLevel">
            <summary>
            Gen Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.GeneratorOffset">
            <summary>
            Gen Offset
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.OutputSampleRate">
            <summary>
            Output Sample Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.RefSyncOutputRate">
            <summary>
            Ref/Sync Output Rate
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.JitterFrequency">
            <summary>
            Jitter Frequency
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.JitterLevelUi">
            <summary>
            Jitter Level (UI)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.JitterLevelSec">
            <summary>
            Jitter Level (sec)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DcxDcv1Level">
            <summary>
            DCX DCV1 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.DcxDcv2Level">
            <summary>
            DCX DCV2 Level
            </summary>
        </member>
        <member name="F:AudioPrecision.API.RegulationSource.VBias">
            <summary>
            VBias
            </summary>
        </member>
        <member name="T:AudioPrecision.API.BenchModeMeasurementType">
            <summary>
            Specifies which measurement panel is active in Bench Mode.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.MonitorsAndMeters">
            <summary>
            Monitors/Meters
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.Sweep">
            <summary>
            Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.FFT">
            <summary>
            FFT
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.Recorder">
            <summary>
            Recorder
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.ContinuousSweep">
            <summary>
            Continuous Sweep
            </summary>
        </member>
        <member name="F:AudioPrecision.API.BenchModeMeasurementType.AcousticResponse">
            <summary>
            Acoustic Response
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDcLevelDcxMeasurement">
            <summary>
            Represents the settings and results for the DCX DC Voltage measurement.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.Volts">
            <summary>
            Gets the DCX DC voltage meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.Range">
            <summary>
            Set or get the range for the DCX DMM voltage measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.DelayTime">
            <summary>
            Gets the settling for controlling the amount of time to wait before measuring the DCX DC voltage level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.AveragingTime">
            <summary>
            Gets the setting for controling the length of time the readings are averaged over.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.Rate">
            <summary>
            Set or get the rate in which voltage conversions are done.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelDcxMeasurement.Generator">
            <summary>
            Gets the settings for the sine wave generator for the DCX measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDcxGenerator">
            <summary>
            Represents the settings for the sine wave generator for the DCX measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IResistanceDcxMeasurement">
            <summary>
            Represents the settings and results for the DCX Ohms measurement.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IResistanceDcxMeasurement.Ohms">
            <summary>
            Gets the DCX Ohms meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IResistanceDcxMeasurement.Range">
            <summary>
            Set or get the range for the DCX DMM ohms measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IResistanceDcxMeasurement.DelayTime">
            <summary>
            Gets the settling for controlling the amount of time to wait before measuring the DCX ohms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IResistanceDcxMeasurement.AveragingTime">
            <summary>
            Gets the setting for controling the length of time the readings are averaged over.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IResistanceDcxMeasurement.Rate">
            <summary>
            Set or get the rate in which voltage conversions are done.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDutDelayMeasurement">
            <summary>
            Represents the Delay Measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelayMeasurement.Generator">
            <summary>
            Get the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelayMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelayMeasurement.Delay">
            <summary>
            Gets the results which contains the measured delay.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelayMeasurement.Correlation">
            <summary>
            Gets the cross correlation graph;
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelayMeasurement.AcquiredWaveform">
            <summary>
            Gets the acquired waveform graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDutDelaySettings">
            <summary>
            Represents the Delay settings
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDutDelaySettings.AcquisitionSeconds">
            <summary>
            Gets or sets the acquisition length in seconds.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImpedanceThieleSmallMeasurement">
            <summary>
            Represents the settings for the Impedance Thiele-Small measurement.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Magnitude">
             <summary>
             Gets the Impedance Magnitude result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Phase">
             <summary>
             Gets the Impedance Phase result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Real">
             <summary>
             Gets the Impedance Real result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Imaginary">
             <summary>
             Gets the Impedance Imaginary result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ThieleSmall">
            <summary>
            Gets the Thiele-Small parameters result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.TestConfiguration">
            <summary>
            Gets or sets the resistor configuration used to measure impedance.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.AmplifierGain">
            <summary>
            Gets a setting to determine the gain of the amplifier, if applicable.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.AmplifierCorrectionCurve">
            <summary>
            Gets or sets the currently selected amplifier correction curve.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.AmplifierCorrectionCurves">
            <summary>
            Gets all amplifier correction curves available in this project.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IImpedanceThieleSmallMeasurement.LoadAmplifierCorrectionCurveFromFile(System.String,System.Boolean)">
            <summary>
            Loads an amplifier correction curve from a data file, and selects it for this measurement.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
        </member>
        <member name="M:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ExportAmplifierCorrectionCurve(System.String,System.String,System.String,System.String)">
            <summary>
            Exports the selected amplifier correction curve.
            </summary>
            <param name="fileName">The full path of the filename.</param>
            <param name="xUnit">Unit for X values</param>
            <param name="gainUnit">Unit for Gain values</param>
            <param name="phaseUnit">Unit for Phase values</param>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.PrimaryChannel">
            <summary>
            Gets or sets the first channel used to measure impedance.  In some modes, this is the only channel required.
            When two channels are required, the <see cref="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ExternalSenseResistorChannel">ExternalSenseResistorChannel</see> will specify 
            the secondary channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ExternalSenseResistorChannel">
            <summary>
            Gets the secondary channel used to measure impdedance when the <see cref="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.TestConfiguration">TestConfiguration</see> property is set to 
            <see cref="F:AudioPrecision.API.ImpedanceConfiguration.External2Ch">ImpedanceConfiguration.ExternalUnknownGain</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ExternalSenseResistance">
            <summary>
            Gets or sets the external sense resistance value in Ohms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.CalculateTsParameters">
            <summary>
            Specifies whether or not the Thiele/Small parameter values are calculated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ThieleSmallMode">
            <summary>
            Gets or sets the measurement mode used to compute Thiele-Small parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.AddedMass">
            <summary>
            Gets a setting for the added mass value, when applicable.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Volume">
            <summary>
            Gets a setting for the speaker container volume, when applicable.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.Mmd">
            <summary>
            Gets a setting for the known Mmd value, when applicable
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ModelFit">
            <summary>
            Gets or sets the model APx uses to fit the measured impedance data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ReType">
            <summary>
            Gets or sets how APx determines the Re of the driver.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.FixedDcr">
            <summary>
            Gets a setting for measured DCR value in Ohms when the <see cref="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.ReType">ReType</see> value is <see cref="F:AudioPrecision.API.ThieleSmallReType.Fixed">Fixed</see>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.DriverDiameter">
            <summary>
            Gets a setting for the diameter of the speaker driver.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IImpedanceThieleSmallMeasurement.MeasureAddedMassKnownVolume">
            <summary>
            Measures the Thiele-Small parameters using the Added Mass or Known Volume settings.  
            The Free-Air impedance must be measured first, otherwise, this function throws an exception.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.FitRangeType">
            <summary>
            Gets or sets the range type for the fit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.FitMinimumFrequency">
            <summary>
            Gets or sets the minimum frequency for the fit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceThieleSmallMeasurement.FitMaximumFrequency">
            <summary>
            Gets or sets the maximum frequency for the fit.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImpedanceXYGraph">
            <summary>
            Represents the settings for an X,Y graph from the Impedance Thiele-Small measurement which can display processed and unprocessed data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImpedanceXYGraph.Display">
            <summary>
            Gets or sets the display type for this graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterFrequencySweepMeasurement">
            <summary>
            Represents the settings and results for the Stepped Frequency Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Generator">
            <summary>
            Gets the generator settings for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.ThdNRatio">
             <summary>
             Gets the THD+N Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.ThdNLevel">
             <summary>
             Gets the THD+N Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Deviation">
            <summary>
            Gets the Deviation result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="SteppedFreqSweep.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Phase">
             <summary>
             Gets the Phase result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Phase" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.ThdRatio">
             <summary>
             Gets the THD Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.ThdLevel">
             <summary>
             Gets the THD Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.DistortionProductLevel">
             <summary>
             Gets the Harmonic Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.DistortionProductRatio">
             <summary>
             Gets the Harmonic Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Sinad">
            <summary>
            Gets the SINAD X,Y result settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.PhaseReferenceChannel">
            <summary>
            Gets or sets the reference channel used to measure phase.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Stepped Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepSettlingParametersCollection.Phase">
            <summary>
            Gets the settling parameters for measuring phase.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterFrequencySweepGenerator">
            <summary>
            Represents the generator settings for the Jitter Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepGenerator.JitterGeneratorSettings">
            <summary>
            Gets the jitter generator settings for the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterFrequencySweepGenerator.NoiseShape">
            <summary>
            Gets the type of noise to be generated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterLevelSweepMeasurement">
            <summary>
            Represents the settings and results for the Stepped Level Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdRatio">
            <summary>
            Gets the THD Ratio result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdLevel">
            <summary>
            Gets the THD Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdNRatio">
             <summary>
             Gets the THD+N Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdNLevel">
             <summary>
             Gets the THD+N Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Linearity">
             <summary>
             Gets teh Linearity result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Linearity" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdRatioVsMeasuredLevel">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdLevelVsMeasuredLevel">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdNRatioVsMeasuredLevel">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.ThdNLevelVsMeasuredLevel">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Sinad">
            <summary>
            Gets the SINAD X,Y result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.DistortionProductRatio">
            <summary>
            Gets the Distortion Product Ratio result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.DistortionProductLevel">
            <summary>
            Gets the Distortion Product Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.FilterTuningMode">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IJitterLevelSweepMeasurement.NotchTuningMode">NotchTuningMode</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.NotchTuningMode">
            <summary>
            Gets or sets the notch filter tuning behavior.
            The filter can be set to follow the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.NotchFilterFrequency">
            <summary>
            Gets or sets the center frequency for the notch filter.
            This value is used only when the FilterTuningModes is set to Fixed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepMeasurement.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterLevelSweepSettlingParametersCollection">
            <summary>
            Represents the settling parameters for the Jitter Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IJitterLevelSweepGenerator">
            <summary>
            Represents the generator settings for the Stepped Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepGenerator.StartPeakLevel">
            <summary>
            Gets a setting for the sweep start jitter level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepGenerator.StopPeakLevel">
            <summary>
            Gets a setting for the sweep stop jitter level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep in the analog output configuration
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IJitterLevelSweepGenerator.JitterGeneratorSettings">
            <summary>
            Gets the jitter generator settings for the sweep.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILoudspeakerProductionTestMeasurement">
            <summary>
            Represents the settings for the Loudspeaker Test measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.Level">
             <summary>
             Gets the Level response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ThdRatio">
            <summary>
            Gets the THD Ratio result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ThdLevel">
            <summary>
            Gets the THD Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.Phase">
             <summary>
             Gets the Phase settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="Phase" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.DistortionProductLevel">
             <summary>
             Gets the Harmonic Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="DistortionProductLevel" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.DistortionProductRatio">
             <summary>
             Gets the Harmonic Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="DistortionProductRatio" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.RubAndBuzz">
            <summary>
            Gets the Rub and Buzz result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ImpedanceMagnitude">
             <summary>
             Gets the Impedance Magnitude result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ImpedancePhase">
             <summary>
             Gets the Impedance Phase result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ThieleSmall">
            <summary>
            Gets the Thiele-Small parameters result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ImpulseResponse">
             <summary>
             Gets the Impulse Response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="ImpulseResponse" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.TestConfiguration">
            <summary>
            Gets or sets the resistor configuration used to measure impedance.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.AmplifierGain">
            <summary>
            Gets a setting to determine the gain of the amplifier, if applicable.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.AmplifierCorrectionCurve">
            <summary>
            Gets the currently selected amplifier correction curve.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.AmplifierCorrectionCurves">
            <summary>
            Gets or sets all amplifier correction curves available in this project.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.LoadAmplifierCorrectionCurveFromFile(System.String,System.Boolean)">
            <summary>
            Loads an amplifier correction curve from a data file, and selects it for this measurement.
            </summary>
            <param name="fileName">The full path to the data file</param>
            <param name="replaceIfExists">True to replace a matching file that is already in the project</param>
        </member>
        <member name="M:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ExportAmplifierCorrectionCurve(System.String,System.String,System.String,System.String)">
            <summary>
            Exports the selected amplifier correction curve.
            </summary>
            <param name="fileName">The full path of the filename.</param>
            <param name="xUnit">Unit for X values</param>
            <param name="gainUnit">Unit for Gain values</param>
            <param name="phaseUnit">Unit for Phase values</param>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.PrimaryChannel">
            <summary>
            Gets or sets the first channel used to measure impedance.  In some modes, this is the only channel required.
            When two channels are required, the <see cref="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ExternalSenseResistorChannel">ExternalSenseResistorChannel</see> will specify 
            the secondary channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ExternalSenseResistorChannel">
            <summary>
            Gets the secondary channel used to measure impdedance when the <see cref="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.TestConfiguration">TestConfiguration</see> property is set to 
            <see cref="F:AudioPrecision.API.ImpedanceConfiguration.External2Ch">ImpedanceConfiguration.ExternalUnknownGain</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ExternalSenseResistance">
            <summary>
            Gets or sets the external sense resistance value in Ohms.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.TimeWindow">
            <summary>
            Gets the setting for the impulse window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.ModelFit">
            <summary>
            Gets or sets the model APx uses to fit the measured impedance data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.CalculateTsParameters">
            <summary>
            Specifies whether or not the Thiele/Small parameter values are calculated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.FitRangeType">
            <summary>
            Gets or sets whether to automatically determine the fit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.FitMinimumFrequency">
            <summary>
            Gets or sets the minimum frequency for the fit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.FitMaximumFrequency">
            <summary>
            Gets or sets the maximum frequency for the fit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.RubAndBuzzPeakRatio">
            <summary>
            Gets the Rub and Buzz Peak Ratio result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.RubAndBuzzCrestFactor">
            <summary>
            Gets the Rub and Buzz Crest Factor result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILoudspeakerProductionTestMeasurement.AcquiredWaveform">
             <summary>
             Gets the Acquired Waveform.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph
             <code source="AcousticResponse.vb" region="AcquiredWaveform" lang="vbnet"/> 
            </example>
        </member>
        <member name="T:AudioPrecision.API.INoiseWeightingMeasurement">
            <summary>
            Represents a measurement which has a weighting filter for noise results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">
            <summary>
            Gets or sets the noise filter.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILowpassFilterMeasurement">
            <summary>
            Represents a measurement which has a low-pass filter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterFrequency">
            <summary>
            Gets a setting for the lowpass filter frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">
            <summary>
            Gets or sets the shape or behavior of the low-pass filter.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHighpassFilterMeasurement">
            <summary>
            Represents a measurement which has a high-pass filter
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterFrequency">
            <summary>
            Gets a setting for the highpass filter frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">
            <summary>
            Gets or sets the shape or behavior of the high-pass filter.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IModulatedNoiseMeasurement">
            <summary>
            Represents the settings and results for the Modulated Noise measurement.
            
            Generator settings can be modified via the Generator property.
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IModulatedNoiseMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IModulatedNoiseMeasurement.AcquisitionTime">
            <summary>
            Gets or sets the acquisition time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IModulatedNoiseMeasurement.LineRejection">
            <summary>
            Gets or sets the line rejection mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IModulatedNoiseMeasurement.HighpassFilter">
            <summary>
            Gets or sets the highpass filter setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IModulatedNoiseMeasurement.ModulatedNoiseRatio">
            <summary>
            Gets the results which contains the Modulated Noise Ratio.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IModulatedNoiseGenerator">
            <summary>
            Represents the generator settings for the Modulated Noise measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaMeasurement">
            <summary>
            Represents the settings for a measurement which uses the POLQA algorithm to measure perceptual audio quality
            of complex audio signals like speech which are sampled at 8 kHz, 16 kHz or 48kHz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.ExtendAcquisition">
            <summary>
            Gets a setting to control the extra acquisition time for the measurement.  
            Extra time may be required if the device under test has delay or is a playback
            only device.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPolqaMeasurement.LoadReferenceFile(System.String,System.Boolean)">
            <summary>
            When the signal path output connector is None (External), this method loads a reference
            waveform from a file and selects it for the measurement.  The file must be a .WAV file
            sampled at 8 kHz, 16 or 48kHz.
            </summary>
            <param name="fileName">The fully qualified path to the WAV file.</param>
            <param name="replaceIfExists">True if you wish to replace a file in the project which matches this file.</param>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.ReferenceFile">
            <summary>
            Gets or sets the currently selected reference file with the output is None (External).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.ReferenceFileNames">
            <summary>
            Gets the list of reference files attached to the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.AutoResamplingAdjustment">
            <summary>
            Gets or sets control to adjust sampling rate in reference file. Non compliant. Disabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.AutoLevelAlignmentAdjustment">
            <summary>
            Gets or sets control to adjust signal levels in reference file. Non compliant. Disabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.Mode">
            <summary>
            Gets or sets the analysis mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.ItuVersion">
            <summary>
            Gets or sets which version of the ITU model for P.863 to use when computing POLQA results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.HighAccuracyMode">
            <summary>
            Gets or sets whether or not POLQA high accuracy mode is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.OverloadReference">
            <summary>
            Gets a setting for the overload reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.G107">
            <summary>
            Gets the result which contains a G.107 meter reading (narrowband only.)
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.Mos">
            <summary>
            Gets the result which contains a MOS-LQO meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.MosVsTime">
            <summary>
            Gets the result which contains the MOS-LQO vs Time graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.AverageDelay">
            <summary>
            Gets the result which contains the average delay per channel meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.DelayVsTime">
            <summary>
            Gets the result which contains the Delay vs Time graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.DelayVsTimeResampled">
            <summary>
            Gets the result which contains the Delay vs Time graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.ReferenceWaveform">
            <summary>
            Gets the result which contains the reference waveform graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.AcquiredWaveform">
            <summary>
            Gets the result which contains the acquired waveform graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.PolqaResultData">
            <summary>
            Gets a tabular results which describes the measured POLQA parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaMeasurement.NumberOfLicensedChannels">
            <summary>
            Gets maximum number of POLQA channels allowed in iButton
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaAcquiredWaveformGraph">
            <summary>
            Represents an XY Graph which displays the acquired waveform data for a POLQA measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAcquiredWaveformGraph.ShowVAD">
            <summary>
            Gets or sets whether dropouts are displayed on the graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaMeterGraph">
            <summary>
            Represents a meter reading for G.107 or MOS-LQO for POLQA measurements.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaGenerator">
            <summary>
            Gets the settings for the signal generator used for POLQA measurements.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaAverageMeasurement">
            <summary>
            Represents the settings for a measurement which uses the POLQA algorithm to measure perceptual audio quality
            of complex audio signals like speech which are sampled at 8 kHz, 16 kHz or 48kHz.
            This measurement performs POLQA analysis on a list of one or more files and produces an average MOS-LQO score.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.ExtendAcquisition">
            <summary>
            Gets a setting to control the extra acquisition time for the measurement.  
            Extra time may be required if the device under test has delay or is a playback
            only device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.ReferenceFileNames">
            <summary>
            Gets or sets the list of reference files used for this measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPolqaAverageMeasurement.LoadReferenceFile(System.String,System.Boolean)">
            <summary>
            This method loads a reference waveform from a file and selects it for the measurement.  
            The file must be a .WAV file sampled at 8 kHz or 16 kHz.
            </summary>
            <param name="fileName">The fully qualified path to the WAV file.</param>
            <param name="replaceIfExists">True if you wish to replace a file in the project which matches this file.</param>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.Mode">
            <summary>
            Gets or sets the analysis mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.ItuVersion">
            <summary>
            Gets or sets which version of the ITU model for P.863 to use when computing POLQA results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.OverloadReference">
            <summary>
            Gets a setting for the overload reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.HighAccuracyMode">
            <summary>
            Gets or sets whether or not POLQA high accuracy mode is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.AutoResamplingAdjustment">
            <summary>
            Gets or sets control to adjust sampling rate in reference file. Non compliant. Disabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.AutoLevelAlignmentAdjustment">
            <summary>
            Gets or sets control to adjust signal levels in reference file. Non compliant. Disabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.MosAverage">
            <summary>
            Gets the result which contains the average MOS-LQO meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPolqaAverageMeasurement.FileMos">
            <summary>
            Gets the result which contains the MOS-LQO score for each file as an XY graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaAverageXYGraph">
            <summary>
            Represents an XY Graph which displays the MOS-LQO score per file for the POLQA Averaged measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPolqaAverageGenerator">
            <summary>
            Gets the settings for the signal generator used for the POLQA Averaged measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodedBitstreamMeasurement">
            <summary>
            Represents the settings and results for the Compare Encoded Bitstream to Reference measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.InitialSyncFrameLimit">
            <summary>
            Gets or sets the number of frames allowed to be incorrect or mismatched before the measurement ends with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.InitialSyncLimitInSeconds">
            <summary>
            Gets the number of seconds in which the data is allowed to be incorrect or mismatched before the measurement
            ends with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.LossOfSyncFrameLimit">
            <summary>
            Gets or sets the number fo frames allowed to be incorrect at the end of a successful comparison.  For playback 
            devices such as DVD players, this allows the device to drop frames as the disc or track comes to completion.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.LossOfSyncLimitInSeconds">
            <summary>
            Gets the amount of time in seconds when the data is allowed to be incorrect at the end of a successful comparison. For playback 
            devices such as DVD players, this allows the device to drop frames as the disc or track comes to completion.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.TimeoutSeconds">
            <summary>
            Gets the amount of time in seconds to wait before encoded data is received by the APx instrument.  If data does not arrive by 
            the specified time, the measurement aborts with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.ReferenceFrameCount">
            <summary>
            Gets the number of audio frames in the reference file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.LoadReferenceFile(System.String,System.Boolean)">
            <summary>
            When the signal path output connector is None (External), this method loads a reference
            waveform from a file and selects it for the measurement.  The file must be a .WAV file
            sampled at 8 kHz or 16 kHz.
            </summary>
            <param name="fileName">The fully qualified path to the WAV file.</param>
            <param name="replaceIfExists">True if you wish to replace a file in the project which matches this file.</param>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.ReferenceFile">
            <summary>
            Gets or sets the currently selected reference file with the output is None (External).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.ReferenceFileNames">
            <summary>
            Gets the list of reference files attached to the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.ShowPrompt">
            <summary>
            Gets whether or not a prompt is displayed to the user prior to analyzing the incoming reference data.
            The prompt can be configured via the <see cref="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.PromptSettings">PromptSettings</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.PromptSettings">
            <summary>
            Gets the settings for the user prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamMeasurement.CompareBitstream">
            <summary>
            Gets the results of the comparison.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings">
            <summary>
            Represents the settings for a user prompt used by the Compare Bitstream to Encoded Reference measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.Text">
            <summary>
            Gets or sets the unformatted text of the prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.RTF">
            <summary>
            Gets or sets the text of the prompt formatted with RTF characters.  
            RTF may include information about fonts and special characters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.Image">
            <summary>
            Gets the image associated with this prompt. This value is Null if no image is specified.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.ImageName">
            <summary>
            Gets or sets the name of the image file attached to the project which is used in the prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.ImageNames">
            <summary>
            Gets the list of images already attached to the project.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.LoadImage(System.String,System.Boolean)">
            <summary>
            Loads an image file from disk into the project and selects that image into the <see cref="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.Image">Image</see> property.
            </summary>
            <param name="fileName">The name of the file on disk.  Supported file types include JPG, PNG, BMP</param>
            <param name="replaceIfExists">APx does not allow duplicate file names or files with the same content to exist in the project.  If 
            this file matches one already in the project, this flag indicates whether APx replaces the existing file, or returns with an error.</param>
        </member>
        <member name="M:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.ClearImage">
            <summary>
            Removes the image selected in the <see cref="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.Image">Image</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.ShowCancel">
            <summary>
            Gets or sets whether or not the prompt displays a Cancel button to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.PlayAlertSound">
            <summary>
            Gets or sets whether or not to play a sound when the prompt is displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.TimeoutEnabled">
            <summary>
            Gets or sets whether or not the prompt will dismiss itself automatically after a the time specified in 
            the <see cref="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.TimeoutInSeconds">TimeoutInSeconds</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodeBitstreamPromptSettings.TimeoutInSeconds">
            <summary>
            Gets or sets the amount of time before the prompt automatically dismisses itself.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodedBitstreamGenerator">
            <summary>
            Represents the generator settings for the Compare Encoded Bitstream to Reference measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamGenerator.TotalFrameCount">
            <summary>
            Gets the total number of audio frames in the reference file. APx has a maximum number of frames that
            can be transmitted which is determined by the audio connector and the encoded audio format.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamGenerator.UsableFrameCount">
            <summary>
            Gets the usable number of audio farmes in the reference file. APx has a maximum number of frames that
            can be transmitted which is determined by the audio connector and the encoded audio format.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodedBitstreamResult">
            <summary>
            Represents the comparison information for the Compare Encoded Bitstream to Reference measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.ReceivedFrameCount">
            <summary>
            Gets the total number of encoded audio frames recieved. Returns -1 if the data never matched the reference data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.FirstSyncFrame">
            <summary>
            Gets the first encoded audio frame where the data matched the reference data. Returns -1 if the data never matched the reference data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.LastSyncFrame">
            <summary>
            Gets the last encoded audio frame where the data matched the reference data. Returns -1 if the data never matched the reference data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.Passed">
            <summary>
            Gets whether or not the received audio matched the reference file within the frame synchronization limtis
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.Error">
            <summary>
            Gets information about the comparison error which caused the measurement to fail, if any.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.InvalidFrames">
            <summary>
            Gets the collection of frames which were calculated to be invalid for reasons such as having data which did not match the reference data, 
            or having an incorrect frame length.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamResult.SkippedFrames">
            <summary>
            Gets the collection of frames which were not transmitted by the device under test.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodedBitstreamError">
            <summary>
            Represents an encoded audio frame which did not match the reference data
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamError.ErrorFrame">
            <summary>
            Represents the audio frame which did not match the reference data, or -1 if the data never matched.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamError.ErrorFrameWordOffset">
            <summary>
            Returns the 0-based index of the 16-bit word within the reference frame where the comparison failed.
            Returns -1 if the data never matched.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamError.ErrorData">
            <summary>
            Returns the received data for the specified frame which did not match the reference.  This could be an empty array.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamError.ReferenceData">
            <summary>
            Returns the reference data for the specified frame.  This could be an empty array.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamError.ErrorMessage">
            <summary>
            Returns a descriptive error message indicating why the frame did not match the reference data.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareEncodedBitstreamErrorCollection">
            <summary>
            Represents a collection of frame data which describes mismatches between encoded audio transmitted by the device under test, and the original
            reference file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamErrorCollection.Item(System.Int32)">
            <summary>
            Gets the specified item from the collection.
            </summary>
            <param name="index">The 0-based index of the item</param>
            <returns>The requested item</returns>
        </member>
        <member name="P:AudioPrecision.API.ICompareEncodedBitstreamErrorCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkCustomMeasurement">
            <summary>
            Represents the settings and results for the Crosstalk All To One measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkCustomMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkCustomMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="CrosstalkAllToOne.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkCustomMeasurement.Crosstalk">
            <summary>
            Gets the crosstalk meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="CrosstalkAllToOne.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkCustomMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkCustomGenerator">
            <summary>
            Represents the generator settings for the Crosstalk All to One measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkCustomSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Crosstalk measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkCustomSettlingParametersCollection.Crosstalk">
            <summary>
            Gets the settling parameters for measuring crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkFrequencySweepGenerator">
            <summary>
            Represents the generator settings for the Crosstalk Frequency Sweep measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Crosstalk Frequency Sweep measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepSettlingParametersCollection.CrosstalkSettlingParams">
            <summary>
            Gets the settling parameters for crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelUndrivenSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Crosstalk measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelUndrivenSettlingParametersCollection.Crosstalk">
            <summary>
            Gets the settling parameters for measuring crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelUndrivenMeasurement">
            <summary>
            Represents the settings and results for the Crosstalk measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelUndrivenMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelUndrivenMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Crosstalk.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelUndrivenMeasurement.Crosstalk">
            <summary>
            Gets the crosstalk meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Crosstalk.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelUndrivenMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelUndrivenGenerator">
            <summary>
            Represents the generator settings for the Crosstalk measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement">
            <summary>
            Represents the settings and results for the Crosstalk Single Channel measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="CrosstalkChannelSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement.OneToOneSourceChannel">
            <summary>
            Gets or sets the channel to drive.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement.Crosstalk">
            <summary>
            Gets the crosstalk meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="CrosstalkChannelSweep.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelDrivenGenerator">
            <summary>
            Represents the generator settings for the Crosstalk Single Channel measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkOneChannelDrivenSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Crosstalk Single Channel measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkOneChannelDrivenSettlingParametersCollection.Crosstalk">
            <summary>
            Gets the settling parameters for measuring crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkFrequencySweepCustomMeasurement">
             <summary>
             Represents the settings and results for the Crosstalk Frequency Sweep, Custom measurement.
            
             Results can be examined, and result measurement parameters can be configured
             by accessing the property with the same name as the name of the result.  See the 
             Measurement Navigator or the Measurement Selector in the APx500 user interface 
             for the name of the result.
             Example:  APx.LevelAndGain.Level
             </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepCustomMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a frequency sweep generator
            <code source="SteppedFreqSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepCustomMeasurement.Crosstalk">
            <summary>
            Gets the Crosstalk result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepCustomMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelDrivenMeasurement">
             <summary>
             Represents the settings and results for the Crosstalk Frequency Sweep, One Channel Driven measurement.
            
             Results can be examined, and result measurement parameters can be configured
             by accessing the property with the same name as the name of the result.  See the 
             Measurement Navigator or the Measurement Selector in the APx500 user interface 
             for the name of the result.
             Example:  APx.LevelAndGain.Level
             </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelDrivenMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a frequency sweep generator
            <code source="SteppedFreqSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelDrivenMeasurement.Crosstalk">
            <summary>
            Gets the Crosstalk result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelDrivenMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelUndrivenMeasurement">
             <summary>
             Represents the settings and results for the Crosstalk Frequency Sweep, One Channel Undriven measurement.
            
             Results can be examined, and result measurement parameters can be configured
             by accessing the property with the same name as the name of the result.  See the 
             Measurement Navigator or the Measurement Selector in the APx500 user interface 
             for the name of the result.
             Example:  APx.LevelAndGain.Level
             </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelUndrivenMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a frequency sweep generator
            <code source="SteppedFreqSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelUndrivenMeasurement.Crosstalk">
            <summary>
            Gets the Crosstalk result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkFrequencySweepOneChannelUndrivenMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticResponseResults">
            <summary>
            Represents the set of results Acoustic Response measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.EnergyTimeCurve">
             <summary>
             Gets the Energy Time Curve settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="EnergyTimeCurve" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.ImpulseResponse">
             <summary>
             Gets the Impulse Response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="ImpulseResponse" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.Level">
             <summary>
             Gets the Level response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.RelativeLevel">
             <summary>
             Gets the Relative Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.Deviation">
            <summary>
            Gets the Deviation settings and results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="AcousticResponse.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.Phase">
             <summary>
             Gets the Phase settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="Phase" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.ThdLevel">
             <summary>
             Gets the THD Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="ThdLevel" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.ThdRatio">
             <summary>
             Gets the THD Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="ThdRatio" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.DistortionProductLevel">
             <summary>
             Gets the Harmonic Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="DistortionProductLevel" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.DistortionProductRatio">
             <summary>
             Gets the Harmonic Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="DistortionProductRatio" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.GroupDelay">
             <summary>
             Gets the Group Delay settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="AcousticResponse.vb" region="GroupDelay" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.AcquiredWaveform">
             <summary>
             Gets the Acquired Waveform.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph
             <code source="AcousticResponse.vb" region="AcquiredWaveform" lang="vbnet"/> 
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.LevelAndDistortion">
            <summary>
            Gets the Acquired Waveform.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.Delay">
            <summary>
            Gets the Delay settings and results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="AcousticResponse.vb" region="Delay" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.RubAndBuzz">
            <summary>
            Gets the Rub and Buzz result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.RubAndBuzzPeakRatio">
            <summary>
            Gets the Rub and Buzz Peak Ratio result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.RubAndBuzzCrestFactor">
            <summary>
            Gets the Rub and Buzz Crest Factor result and settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseResults.FrequencyShift">
            <summary>
            Get the Frequency shift result when Frequency Correction is enabled.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticResponseSettings">
            <summary>
            Represents the settings for Acoustic Response measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseSettings.Averages">
            <summary>
            Gets or sets the number of averages performed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseSettings.TimeWindowAutoStart">
            <summary>
            Gets or sets whether the time window start is automatically calculated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAcousticResponseMeasurement">
            <summary>
            Represents the Acoustic Response measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticResponseMeasurement.Generate">
            <summary>
            The generator runs synchronously and does not return control to the user
            until the signal has been played out the generator. This method is only valid for open loop configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IAcousticResponseMeasurement.Analyze">
            <summary>
            Analyze the signal when running an open loop measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseMeasurement.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseMeasurement.Generator">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IAcousticResponseMeasurement.GeneratorWithPilot"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAcousticResponseMeasurement.GeneratorWithPilot">
            <summary>
            Gets the settings for the generator.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Bandpass measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassLevelMeasurement">
            <summary>
            Represents the settings and results for the Bandpass measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.Bandpass.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Bandpass.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.Level">
            <summary>
            Gets the Rms level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Bandpass.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.Selectivity">
            <summary>
            Gets or sets the bandpass filter width.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.FilterTuningMode">
            <summary>
            Gets or sets the bandpass filter tuning behavior.
            The filter can be set to follow the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.RectangularBandMinFrequency">
            <summary>
            Gets or sets the lower frequency for the rectangular bandpass filter.
            This value is used only when the FilterTuningMode is set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.RectangularBandMaxFrequency">
            <summary>
            Gets or sets the upper frequency for the rectangular bandpass filter.
            This value is used only when the FilterTuningMode is set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.FixedTuningFrequency">
            <summary>
            Gets or sets the center frequency for the bandpass filter.
            This value is used only when the FilterTuningModes is set to Fixed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassGenerator">
            <summary>
            Represents the generator settings for the Bandpass Level measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassFrequencySweepMeasurement">
            <summary>
            Represents the settings and results for the Bandpass Frequency Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.Deviation">
            <summary>
            Gets the Deviation result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="FrequencyResponse.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.Selectivity">
            <summary>
            Gets or sets the bandpass filter width.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Bandpass Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassFrequencySweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassLevelSweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Bandpass Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBandpassLevelSweepMeasurement">
            <summary>
            Represents the settings and results for the Bandpass Level Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Linearity">
             <summary>
             Gets teh Linearity result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Linearity" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Selectivity">
            <summary>
            Gets or sets the bandpass filter width.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.RectangularBandMinFrequency">
            <summary>
            Gets or sets the lower frequency for the rectangular bandpass filter.
            This value is used only when the FilterTuningMode is set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.RectangularBandMaxFrequency">
            <summary>
            Gets or sets the upper frequency for the rectangular bandpass filter.
            This value is used only when the FilterTuningMode is set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.FilterTuningMode">
            <summary>
            Gets or sets the bandpass filter tuning behavior.
            The filter can be set to follow the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.FixedTuningFrequency">
            <summary>
            Gets or sets the center frequency for the bandpass filter.
            This value is used only when the FilterTuningModes is set to Fixed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBandpassLevelSweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDcLevelSweepMeasurement">
            <summary>
            Represents the settings and results for the DC Level measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.DelayTime">
            <summary>
            Gets the setting for controlling the amount of time to wait before measuring DC level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.AcquisitionTime">
            <summary>
            Gets the setting for controling the length of time the noise floor is measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.DcLevel">
            <summary>
            Gets the Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.Noise">
            <summary>
            Gets the Noise result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDcLevelSweepGenerator">
            <summary>
            Represents the generator settings for the DC Level Sweep measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepGenerator.AmplitudeStart">
            <summary>
            Gets a setting for the sweep start amplitude..
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepGenerator.AmplitudeStop">
            <summary>
            Gets a setting for the sweep stop amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDcLevelSweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep in the analog output configuration
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalErrorRateMeasurement">
            <summary>
            Represents the settings and results for the Digital Error Rate measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.Duration">
            <summary>
            Gets a setting which controls the duration of the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.AverageErrorRate">
            <summary>
            Gets the Average Error Rate meter result. 
            Note: This result is only valid with digital input.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="DigitalErrorRate.vb" region="GetMeterValues" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.InstantaneousErrorRate">
             <summary>
             Gets the Instantaneous Error Rate graph result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="DigitalErrorRate.vb" region="GetXYValuesInst" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.TotalErrors">
            <summary>
            Gets the Total Errors meter result. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.CumulativeErrors">
             <summary>
             Gets the Cumulative Errors graph result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="DigitalErrorRate.vb" region="GetXYValuesCumulative" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDigitalErrorRateGenerator">
            <summary>
            Represents a generator which supports arbitrary waveforms and produces a bit test waveform.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDigitalErrorRateGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.  This property is only applicable
            when the input is File.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICmrrSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the CMRR measurement.
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.ICmrrSettlingParametersCollection.Signal">
            <summary>
            Gets the settling parameters for measuring the signal level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICmrrSettlingParametersCollection.CommonMode">
            <summary>
            Gets the settling parameters for measuring the common mode level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICmrrMeasurement">
            <summary>
            Represents the settings and results for the CMRR measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.ICmrrMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICmrrMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Cmrr.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrMeasurement.Cmrr">
            <summary>
            Gets the meter for Cmrr results.  
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Cmrr.vb" region="Cmrr" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICmrrGenerator">
            <summary>
            Represents the generator settings for the CMRR measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICmrrIecMeasurement">
            <summary>
            Represents the settings and results for the CMRR IEC measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
            <exclude/>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Cmrr.vb" region="IecGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.Cmrr">
            <summary>
            Gets the meter for Cmrr results.  
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Cmrr.vb" region="IecSettled" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.CmrrPin2">
            <summary>
            Gets the CMRR with resistor in series with pin 2.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Cmrr.vb" region="IecSettledPin2" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.CmrrPin3">
            <summary>
            Gets the CMRR with resistor in series with pin 3.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Cmrr.vb" region="IecSettledPin3" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ICmrrIecMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICmrrIecGenerator">
            <summary>
            Represents the generator settings for the CMRR IEC measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepMeasurementBase">
            <summary>
            Represents a class of measurements which uses the Continuous Sweep measurement technique
            to make many measurements vs frequency at the same time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementBase.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementBase.Generator">
            <summary>
            Gets the generator settings for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a frequency sweep generator
            <code source="ContinuousSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase">
            <summary>
            Represents a class of measurements which uses the Continuous Sweep measurement technique
            to make many measurements vs frequency at the same time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.AdditionalAcquisitionTime">
            <summary>
            Gets the setting which control the seconds of time beyond the length of the generated signal
            to acquire data.  Used for devices which have inherent delay.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.TriggerSettings">
            <summary>
            Gets the Trigger settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.Generator">
            <summary>
            Gets the settings for the generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.OpenLoop">
            <summary>
            Gets or sets whether the measurement is open loop.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.FrequencyCorrectionEnabled">
            <summary>
            Gets or sets whether to correct frequency shift in open loop
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.HasWarnings">
            <summary>
            Gets whether there are warnings associated with the signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithAdditionalAcqTimeBase.Warnings">
            <summary>
            Gets the warnings associated with the signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepMeasurementWithAdditionalAcqTimeBase">
            <summary>
            Represents a class of measurements which uses the Continuous Sweep measurement technique
            to make many measurements vs frequency at the same time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementWithAdditionalAcqTimeBase.AdditionalAcquisitionTime">
            <summary>
            Gets the setting which control the seconds of time beyond the length of the generated signal
            to acquire data.  Used for devices which have inherent delay.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepSettingsWithCrosstalk">
            <summary>
            Represents a class of measurements which uses the Continuous Sweep measurement technique
            to make many measurements vs frequency at the same time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithCrosstalk.CrosstalkType">
            <summary>
            Gets or sets the method of measuring crosstalk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepSettingsWithCrosstalk.ChannelDelay">
            <summary>
            Gets or sets the interchannel delay for high accuracy crosstalk modes.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepResults">
            <summary>
            Represents the collection of results available for Continuous Sweep measurements
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.Level">
             <summary>
             Gets the Level response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.Gain">
             <summary>
             Gets the Gain response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.ImpulseResponse">
             <summary>
             Gets the Impulse Response settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="ImpulseResponse" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.GroupDelay">
             <summary>
             Gets the Group Delay settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="GroupDelay" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.ThdLevel">
             <summary>
             Gets the THD Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="ThdLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.ThdRatio">
             <summary>
             Gets the THD Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="ThdRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.DistortionProductLevel">
             <summary>
             Gets the Harmonic Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.DistortionProductRatio">
             <summary>
             Gets the Harmonic Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.CrosstalkOneChannelUndriven">
             <summary>
             Gets the Crosstalk, One Channel Undriven settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="CrosstalkOneChannelUndriven" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.CrosstalkOneChannelDriven">
             <summary>
             Gets the Crosstalk, One Channel Driven settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="CrosstalkOneChannelDriven" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.Phase">
             <summary>
             Gets the Phase settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="Phase" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.AcquiredWaveform">
            <summary>
            Gets the Acquired Waveform.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.RelativeLevel">
             <summary>
             Gets the Relative Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.Deviation">
            <summary>
            Gets the Deviation settings and results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="ContinuousSweep.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.AcquiredCrosstalkWaveformOneChannelDriven">
            <summary>
            Gets the Acquired Crosstalk Waveform for CrosstalkOneChannelDriven
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.AcquiredCrosstalkWaveformOneChannelUndriven">
            <summary>
            Gets the Acquired Crosstalk Waveform for Crosstalk OneChannelUndriven
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepResults.FrequencyShift">
            <summary>
            Get the Frequency shift result when Frequency Correction is enabled.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepMeasurement">
            <summary>
            Represents the Continuous Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepMeasurement.Generate">
            <summary>
            The generator runs synchronously and does not return control to the user
            until the signal has been played out the generator. This method is only valid for open loop configuration.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepMeasurement.Analyze">
            <summary>
            Analyze the signal when running an open loop measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurement.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurement.Generator">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IContinuousSweepMeasurement.GeneratorWithPilot"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurement.GeneratorWithPilot">
            <summary>
            Gets the settings for the generator.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHarmonicXYGraph">
            <summary>
            Represents the single channel Harmonic Level results with each of the
            individual harmonics.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicXYGraph.HarmonicNumber">
            <summary>
            Gets or sets the reference channel for Harmonic results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicXYGraph.MinHarmonicNumber">
            <summary>
            Gets the minimum harmonic number that can be selected in the <see cref="M:AudioPrecision.API.IHarmonicXYGraph.GetHarmonicSelected(System.Int32)">GetHarmonicSelected</see> and
            <see cref="M:AudioPrecision.API.IHarmonicXYGraph.SetHarmonicSelected(System.Int32,System.Boolean)">SetHarmonicSelected</see> functions.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicXYGraph.MaxHarmonicNumber">
            <summary>
            Gets the maximum harmonic number that can be selected in the <see cref="M:AudioPrecision.API.IHarmonicXYGraph.GetHarmonicSelected(System.Int32)">GetHarmonicSelected</see> and
            <see cref="M:AudioPrecision.API.IHarmonicXYGraph.SetHarmonicSelected(System.Int32,System.Boolean)">SetHarmonicSelected</see> functions.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicXYGraph.HarmonicSelectionType">
            <summary>
            Gets or sets how the harmonic result is computed.  The harmonic result is either a plot of a single harmonic value at each 
            frequency, or a sum of the selected harmonics at each frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicXYGraph.AllHarmonics">
            <summary>
            When <see cref="P:AudioPrecision.API.IHarmonicXYGraph.HarmonicSelectionType">HarmonicSelectionType</see> is SumOfHarmonics, this property gets or sets
            whether the sum is of all harmonics or a subset of user selected harmonics.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHarmonicXYGraph.GetHarmonicSelected(System.Int32)">
            <summary>
            Gets whether or not the specified harmonic is included in the harmonic sum calculation.
            </summary>
            <param name="harmonicIndex">The harmonic index</param>
            <returns>True if selected, otherwise False.</returns>
        </member>
        <member name="M:AudioPrecision.API.IHarmonicXYGraph.SetHarmonicSelected(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not to include thie specified harmonic in the harmonic sum calculation.
            </summary>
            <param name="harmonicIndex">The harmonic index</param>
            <param name="selected">True to include in the sum, False to exclude.</param>
        </member>
        <member name="T:AudioPrecision.API.ICrosstalkXYGraph">
            <summary>
            Represents the results for crosstalk measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICrosstalkXYGraph.SourceChannel">
            <summary>
            Gets or sets the source channel for One to One crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPhaseXYGraph">
            <summary>
            Represents the results for a Continuous Sweep Phase measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPhaseXYGraph.Mode">
            <summary>
            Gets or sets the mode used to measure phase.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPhaseXYGraph.DelayMinFrequency">
            <summary>
            Gets a setting for the minimum frequency used to calculate the excess phase when 
            <see cref="P:AudioPrecision.API.IPhaseXYGraph.Mode">Mode</see> is <see cref="F:AudioPrecision.API.PhaseMode.Excess">PhaseMode.Excess</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPhaseXYGraph.DelayMaxFrequency">
            <summary>
            Gets a setting for the maximumfrequency used to calculate the excess phase when 
            <see cref="P:AudioPrecision.API.IPhaseXYGraph.Mode">Mode</see> is <see cref="F:AudioPrecision.API.PhaseMode.Excess">PhaseMode.Excess</see>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRubAndBuzzGraph">
            <summary>
            Represents the results for a AcousticResponse Rub And Buzz measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRubAndBuzzGraph.HPFactor">
            <summary>
            Gets or sets the High pass factor.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IRubAndBuzzGraph.Split">
            <summary>
            This method is obsolete. 
            </summary>
            <returns>The left axis result</returns>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepGenerator">
            <summary>
            Represents the settings for the Continuous Sweep generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepGenerator.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IAudioFileSettings">
            <summary>
            Represents the settings for the waveform file
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAudioFileSettings.SampleRate">
            <summary>
            Sample rate of the output chirp
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IAudioFileSettings.ChannelCount">
            <summary>
            Gets or sets the total number of channels generated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDurations">
            <summary>
            Represents the settings for the Continuous Sweep generator durations.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDurations.Pilot">
            <summary>
            Gets the pilot tone duration setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDurations.PostPilotSilence">
            <summary>
            Gets the post pilot tone silence duration setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDurations.PreSweep">
            <summary>
            Gets the pre sweep duration setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDurations.Sweep">
            <summary>
            Gets the sweep duration setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDurations.AdditionalPostSweepSilence">
            <summary>
            Gets the post sweep silence duration setting.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFrequencies">
            <summary>
            Represents the settings for the Continuous Sweep generator frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencies.Pilot">
            <summary>
            Gets the Pilot frequency setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencies.Start">
            <summary>
            Gets the Start frequency setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencies.Stop">
            <summary>
            Gets the Stop frequency setting.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevels">
            <summary>
            Represents the settings for the Continuous Sweep generator levels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.Sweep">
            <summary>
            Gets the Sweep level settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.Pilot">
            <summary>
            Gets the Pilot level settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.Offset">
            <summary>
            Gets the offset level settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.TrackFirstChannel">
            <summary>
            Gets or sets whether all channels have the same value.  If true, all channels
            have the same value as the first channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.Count">
            <summary>
            Gets the number of channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ILevels.SetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator to the specified level in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.ILevels.SetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified level.
            </summary>
            <param name="ch">The output channel</param>
            <param name="level">The desired level.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator level</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the level of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the level of the generator for the specified channel, in the current level unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the level and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.ILevels.Unit">
            <summary>
            Gets or sets the current unit for generator levels
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.UnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ILevels.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator offset to the specified value in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.ILevels.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified offset.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetOffsetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetOffsetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.ILevels.GetOffsetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel, in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.ILevels.OffsetUnit">
            <summary>
            Gets or sets the current unit for generator offsets.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevels.OffsetUnitList">
            <summary>
            Gets the list of available units for the generator offsets.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepPilotGenerator">
            <summary>
            Represents the settings for a continuous log-chirp sweep generator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.Iterations">
            <summary>
            Gets or sets the number of iterations of the chirp.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.SaveWaveformFileSettings">
            <summary>
            Generator file settings for saving the file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.SaveWaveform">
            <summary>
            Saves the generator waveform based on the settings in <see cref="P:AudioPrecision.API.IContinuousSweepPilotGenerator.SaveWaveformFileSettings"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.SaveWaveform(System.String,System.String,AudioPrecision.API.FileAudioType,AudioPrecision.API.WavExportBitDepth,System.Boolean)">
            <summary>
            Saves the generator waveform with the following settings.
            </summary>
            <param name="folder">Folder where the file should be saved</param>
            <param name="filename">Name of the file</param>
            <param name="audioType">Type of audio file <see cref="T:AudioPrecision.API.FileAudioType"/></param>
            <param name="bitdepth">Bitdepth of the audio file <see cref="T:AudioPrecision.API.WavExportBitDepth"/></param>
            <param name="replaceexisting">Replace existing file.</param>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.Durations">
            <summary>
            Gets the settings for durations
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.Frequencies">
            <summary>
            Gets the settings for frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.Levels">
            <summary>
            Gets the settings for levels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepPilotGenerator.AudioFileSettings">
            <summary>
            Gets the audio file settings when output is external.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IContinuousSweepPilotGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="T:AudioPrecision.API.ITriggerSettings">
            <summary>
            Represents the settings for the Continuous Sweep trigger settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggerSettings.LevelThreshold">
            <summary>
            Gets or sets the level threshold for detecting the pilot tone.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggerSettings.Channel">
            <summary>
            Gets or sets the channel trigger for the pilot tone.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggerSettings.Timeout">
            <summary>
            Gets or sets the timeout in seconds
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IContinuousSweepMeasurementSettings">
            <summary>
            Represents the settings for a Continuous Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementSettings.StartFrequency">
            <summary>
            Gets the setting for the Start frequency. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementSettings.StopFrequency">
            <summary>
            Gets the setting for the End frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementSettings.Duration">
            <summary>
            Gets the setting for the duration of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IContinuousSweepMeasurementSettings.PreMeasurementDelay">
            <summary>
            Gets the setting for the delay before the sweep starts.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDCLevelSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the DC Level measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelSettlingParametersCollection.DCLevel">
            <summary>
            Gets the settling parameters for measuring DC level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDCLevelMeasurement">
            <summary>
            Represents the settings and results for the DC Level measurement.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelMeasurement.DCLevel">
            <summary>
            Gets the DC level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="DCLevel.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelMeasurement.DelayTime">
            <summary>
            Gets the setting for controlling the amount of time to wait before measuring DC level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelMeasurement.AcquisitionTime">
            <summary>
            Gets the setting for controling the length of time the noise floor is measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDCLevelMeasurement.Generator">
            <summary>
            Gets the settings for the sine wave generator for the DC Level measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDCLevelGenerator">
            <summary>
            Represents the settings for the sine wave generator for the DC Level measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDelayCalibrationMeasurement">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDelayChirpCalibrationMeasurement">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDimSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the DIM IMD measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimSettlingParametersCollection.DimSettlingParameters">
            <summary>
            Gets the settling parameters for measuring IMD.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDimImdMeasurement">
            <summary>
            Represents the settings and results for the DFD IMD measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.Generator">
            <summary>
            Gets the dual sine wave generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.DimRatio">
            <summary>
            Gets the DFD Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Dim.vb" region="GetMeterValues" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.DistortionProductRatio">
            <summary>
            Gets the Distortion Product Ratio result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimImdMeasurement.MeasurementMode">
            <summary>
            Gets or sets the measurement algorithm used to compute the DIM IMD value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDynamicRangeSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Signal to Noise Ratio measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeSettlingParametersCollection.Noise">
            <summary>
            Gets the settling parameters for measuring noise.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeSettlingParametersCollection.Signal">
            <summary>
            Gets the settling parameters for measuring the signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDynamicRangeGenerator">
            <summary>
            Represents the generator settings for the Dynamic Range measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeGenerator.LevelRatio">
            <summary>
            Gets the setting for the ratio in dB between the full signal level and the reduced signal level
            required for measuring the dynamic range of the device.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDynamicRangeMeasurement">
            <summary>
            Represents the settings and results for the Signal to Noise Ratio measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="DynamicRange.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.DynamicRange">
            <summary>
            Gets the dynamic range meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="DynamicRange.vb" region="GetMeterValues" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDynamicRangeMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFrequencySettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Frequency measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencySettlingParametersCollection.Frequency">
            <summary>
            Gets the settling parameters for measuring frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFrequencyMeasurement">
            <summary>
            Represents the settings and results for the Level and Gain measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Frequency.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyMeasurement.Frequency">
            <summary>
            Gets the frequency meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Frequency.vb" region="GetMeterValues" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFrequencyGenerator">
            <summary>
            Represents the generator settings for the Frequency measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFrequencyResponseMeasurement">
            <summary>
            Represents the setting and results for the Frequency Response measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyResponseMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyResponseMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyResponseMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="FrequencyResponse.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyResponseMeasurement.Deviation">
            <summary>
            Gets the Deviation result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="FrequencyResponse.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFrequencyResponseMeasurement.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdFrequencySweepMeasurement">
             <summary>
             Represents the settings and results for the IMD Frequency Sweep measurement.
            
             Results can be examined, and result measurement parameters can be configured
             by accessing the property with the same name as the name of the result.  See the 
             Measurement Navigator or the Measurement Selector in the APx500 user interface 
             for the name of the result.
             Example:  APx.LevelAndGain.Level
             </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepMeasurement.ImdType">
            <summary>
            Gets or sets 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepMeasurement.MeasurementMode">
            <summary>
            Gets or sets the measurement algorithm used to compute the IMD value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepMeasurement.Generator">
            <summary>
            Gets the generator for the SteppedImdLevel measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepMeasurement.ImdRatio">
            <summary>
            Gets the IMD result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IIMDFrequencySweepGenerator">
            <summary>
            Represents the signal generator settings for the IMD Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.Frequency1">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.Frequency2">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.SmpteAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdFrequencySweepMeasurement.ImdType">ImdType</see> is SMPTE.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.ModAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdFrequencySweepMeasurement.ImdType">ImdType</see> is MOD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.SweepType">
            <summary>
            Gets or sets which frequency will be swept.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDFrequencySweepGenerator.Split">
            <summary>
            Gets whether or not the IMD frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the IMD Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdFrequencySweepSettlingParametersCollection.ImdRatioSettlingParams">
            <summary>
            Gets the settling parameters for settling IMD.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the IMD measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdSettlingParametersCollection.Imd">
            <summary>
            Gets the settling parameters for measuring IMD.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdMeasurement">
            <summary>
            Represents the IMD measurement which is used to measure SMPTE, MOD, or DFD intermodulation distortion
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.ImdType">
            <summary>
            Gets or sets the type of IMD measurement to make.  Choices are DFD, MOD, SMPTE.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.ImdRatio">
            <summary>
            Gets the IMD Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Imd.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.DistortionProductRatio">
            <summary>
            Gets the Distortion Product Ratio result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.Generator">
            <summary>
            Gets the dual sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring an IMD wave generator
            <code source="Imd.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.MeasurementMode">
            <summary>
            Gets or sets the IMD mode for this measurement.  This setting only applies when
            <see cref="P:AudioPrecision.API.IImdMeasurement.ImdType">ImdType</see> is MOD or DFD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdMeasurementGenerator">
            <summary>
            Represents the generator settings for the IMD measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.Frequency1">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.Frequency2">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.SmpteAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdMeasurement.ImdType">ImdType</see> is SMPTE.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.ModAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdMeasurement.ImdType">ImdType</see> is MOD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdMeasurementGenerator.Split">
            <summary>
            Gets whether or not the IMD frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInterchannelPhaseSettlingParametersCollection">
            <summary>
            Represents the settling parameters for the Interchannel Phase measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseSettlingParametersCollection.Phase">
            <summary>
            Gets the settling parameters for measuring interchannel phase.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInterchannelPhaseMeasurement">
            <summary>
            Represents the settings and results for the Interchannel Phase measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="InterchannelPhase.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.ReferenceChannel">
            <summary>
            Gets or sets the channel used when measuring phase .
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.Phase">
            <summary>
            Gets the interchannel phase meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="InterchannelPhase.vb" region="Phase" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IInterchannelPhaseMeasurement.MeterRange">
            <summary>
            Gets or sets the allowable range of phase meter values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IInterchannelPhaseGenerator">
            <summary>
            Represents the generator settings for the Interchannel Phase measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevelAndGainSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Level and Gain measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevelAndGainMeasurement">
            <summary>
            Represents the settings and results for the Level and Gain measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="LevelAndGain.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.Level">
            <summary>
            Gets the Rms level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="LevelAndGain.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.Gain">
            <summary>
            Gets the gain meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="LevelAndGain.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILevelAndGainMeasurement.AverageJitterLevel">
            <summary>
            Gets the Average Jitter Level meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILevelAndGainGenerator">
            <summary>
            Represents the generator settings for the Level and Gain measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementRecorderMeasurement">
            <summary>
            Represents the settings and results for the Measurement Recorder measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="MeasurementRecorder.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.SweepTime">
            <summary>
            Gets a setting which controls the length of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.ReadingRate">
            <summary>
            Gets or sets the rate at which the measurement takes readings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.FixNotchFrequency">
            <summary>
            Gets or sets a flag indicating whether the measurement places a notch
            filter at a specified frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.NotchTuningMode">
            <summary>
            Gets or sets the notch filter tuning behavior.
            The filter can be set to follow: the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.NotchFrequency">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IMeasurementRecorderMeasurement.NotchFilterFrequency">NotchFilterFrequency</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.NotchFilterFrequency">
            <summary>
            Gets a setting which controls the notch filter frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.PhaseReferenceChannel">
            <summary>
            Gets or sets the reference channel used to measure phase.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.LevelVsTime">
             <summary>
             Gets the Level vs Time result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.RmsLevelAcPlusDcVsTime">
            <summary>
            Gets the Rms Level (AC+DC) vs Time results.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.ThdNLevelVsTime">
             <summary>
             Gets the THD+N Level vs Time result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.ThdNRatioVsTime">
             <summary>
             Gets the THD+N Ratio vs Time result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.ThdLevelVsTime">
            <summary>
            Gets the THD Level vs Time result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.ThdRatioVsTime">
            <summary>
            Gets the THD Ratio vs Time result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.DcLevelVsTime">
             <summary>
             Gets the DC Level vs Time result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="DCLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.GainVsTime">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.PhaseVsTime">
             <summary>
             Gets the Phase result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="Phase" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.FrequencyVsTime">
             <summary>
             Gets the Frequency result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="Frequency" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassLevelVsTime">
            <summary>
            Gets the Bandpass Level vs Time result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.SinadRatioVsTime">
            <summary>
            Gets the SINAD vs Time result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.AnalogInputBandwidth">
            <summary>
            Gets or set the bandwidth to be used in place of the InputBandwidth as specified in the SignalPathSetup.
            The maximum value is limited by the number of channels specified in the SignalPathSetup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassFilterTuning">
            <summary>
            Gets or sets the Bandpass Filter Tune Mode
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassSelectivity">
            <summary>
            Gets or sets the Bandpass Filter Selectivity
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassFixedFilterFrequency">
            <summary>
            Gets a setting for the Bandpass Filter frequency when the <see cref="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassFilterTuning">BandpassFilterTuning</see> is set to FixedFrequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassRectangularBandMinFrequency">
            <summary>
            Gets a setting for the Bandpass Filter rectangular band minimum frequency value when the <see cref="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassSelectivity">BandpassSelectivity</see> is 
            set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassRectangularBandMaxFrequency">
            <summary>
            Gets a setting for the Bandpass Filter rectangular band maximum frequency value when the <see cref="P:AudioPrecision.API.IMeasurementRecorderMeasurement.BandpassSelectivity">BandpassSelectivity</see> is 
            set to RectangularBand.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.StopOnUnlock">
            <summary>
            Gets or sets whether the measurement silently stops without an error. The default behavior is
            that the measurement aborts with an error. This setting is not persistent.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementRecorderGenerator">
            <summary>
            Represents the generator settings for the Measurement Recorder measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.  This property is only applicable
            when the input is File.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementRecorderGenerator.LoopWaveform">
            <summary>
            Gets or sets whether the generator loops the waveform selected in the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFileAnalysisSettings">
            <summary>
            Represents settings for analyzing .WAV files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFileAnalysisSettings.SampleRateMode">
            <summary>
            Gets or sets how APx analyzes files in file input mode if one 
            or more files has a different sample rate.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFileAnalysisSettings.FixedSampleRate">
            <summary>
            Gets or sets the sample rate used for file analysis when the <see cref="P:AudioPrecision.API.IFileAnalysisSettings.SampleRateMode">AnalyzeFilesSampleRateMode</see> 
            property is set to <see cref="F:AudioPrecision.API.FileAnalysisSampleRateMode.UseFixedRate">UseFixedRate</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFileAnalysisSettings.WavFiles">
            <summary>
            Gets or sets the full path to .WAV files for use when the input configuration is File.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementBase">
            <summary>
            Represents common settings for Sequence Mode measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementBase.Graphs">
            <summary>
            Gets the collection of all results for this measurement.  Each item in the collection can be of a different result type.
            For example, in the Frequency Response measurement, the "Level" graph is an XY graph, while the "Deviation" graph is a Meter.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ShowGraph(System.Int32)">
            <summary>
            Makes the specified result the active result for this measurement.
            </summary>
            <param name="index">The 0 based index of the result</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ShowGraph(System.String)">
            <summary>
            Makes the specified result the active result for this measurement.
            </summary>
            <param name="name">The name of the result.  If more than one graph has the same name, 
            the first matching item is displayed</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.SetDataVisible(AudioPrecision.API.SourceDataType,System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified data is displayed on the graph.
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
            <param name="show">True to show the data, False to hide it</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.GetDataVisible(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets whether or not the specified data is displayed on the garph
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
            <returns>True if visible, otherwise False</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.SetDataNotes(AudioPrecision.API.SourceDataType,System.Int32,System.String)">
            <summary>
            Sets a text note for the specified data set.
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
            <param name="notes">A text note describing the data set.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.GetDataNotes(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the text note for the specified data set.
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
            <returns>The text note</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.GetDataTimestamp(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the date and time the specified data set was measured.
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
            <returns>An object reprensenting the measurement time</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ClearData(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Clears the specified data set from all measurement results.
            </summary>
            <param name="dataType">The type of data, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data, i.e. 1, 2, etc.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ClearData">
            <summary>
            Clears all recorded measurement results.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ExportData(System.String,AudioPrecision.API.NumberOfGraphPoints,System.Boolean)">
            <summary>
            Exports measurement data to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls" or ".xlsx"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="numberOfGraphPoints">The number of data points to export</param>
            <param name="appendIfExists">If the output is a CSV text file, this flag determines whether the file is appended or if a new file is created</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.ExportData(System.String,AudioPrecision.API.IMeasurementExportSettings)">
            <summary>
            Exports measurement data to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls" or ".xlsx"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="settings">Describes which data is exported. Create the settings using <see cref="M:AudioPrecision.API.IMeasurementBase.CreateExportSettings"/>CreateExportSettings.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementBase.CreateExportSettings">
            <summary>
            Creates an export settings object to control which results, which channels, and which data is exported.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IMeasurementExportSettings">
            <summary>
            Represents the selections for exporting one or more results from a measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Instructs the exporter to include or exclude the specified channel.
            </summary>
            <param name="ch">0-based index of the channel</param>
            <param name="enabled">True to include the channel, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.SetChannelEnabled(AudioPrecision.API.InputChannelIndex,System.Boolean)">
            <summary>
            Instructs the exporter to include or exclude the specified channel.
            </summary>
            <param name="ch">Index of the channel</param>
            <param name="enabled">True to include the channel, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the exporter will include the specified channel
            </summary>
            <param name="ch">0-based index of the channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.GetChannelEnabled(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not the exporter will include the specified channel
            </summary>
            <param name="ch">Index of the channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementExportSettings.DataType">
            <summary>
            Gets or sets the desired data type (Measured or Imported) to export.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementExportSettings.DataIndex">
            <summary>
            Gets or sets the 1-based index, i.e. Measured 1
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementExportSettings.AppendIfExists">
            <summary>
            If the file type supports appending, this flag indicates whether exported data is added to an existing
            file or whether the file is replaced.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurementExportSettings.ResultNames">
            <summary>
            Gets the names of all available results to export.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.SetResultEnabled(System.String,System.Boolean)">
            <summary>
            Informs the exporter to include or exclude a specified result from the exported data.
            </summary>
            <param name="resultName">Name of the result</param>
            <param name="enabled">True if the result will be exported</param>
        </member>
        <member name="M:AudioPrecision.API.IMeasurementExportSettings.GetResultEnabled(System.String)">
            <summary>
            Gets whether or not the specified result is included in the exported data.
            </summary>
            <param name="resultName">Name of the result</param>
            <returns>True if the result will be exported</returns>
        </member>
        <member name="T:AudioPrecision.API.IMeasurement">
            <summary>
            Represents a measurement which can be displayed to the user.  For example: Frequency Response.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.PassedLimitChecks">
            <summary>
            Returns true if the recorded measurement results are within the
            specified pass/fail limits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.IsValid">
            <summary>
            Gets whether or not this measurement is available in the current I/O configuration.
            For example: some measurements are not available when the output connector is set to None.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.MeasurementType">
            <summary>
            Gets the type of the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.Name">
            <summary>
            Gets or sets the name of the measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeasurement.AnalyzeFiles">
            <summary>
            Starts the measurement and analyzes the specified .WAV files.  This function does not return until the measurement has completed
            or until an error has occurred.  This function will throw an exception if the measurement does not support analyzing files, or
            if the input configuation is not set to File.
            </summary>
            <returns>True if the measurement ran successfully, or False if the user the measurement failed to complete
            due to the user cancelling or due to an error.
            </returns>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.AnalyzeFilesSampleRateMode">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IFileAnalysisSettings.SampleRateMode">FileAnalysisSettings.SampleRateMode</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.AnalyzeFilesFixedSampleRate">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IFileAnalysisSettings.FixedSampleRate">FileAnalysisSettings.FixedSampleRate</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.WavFilesForAnalysis">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IFileAnalysisSettings.WavFiles">FileAnalysisSettings.WavFiles</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.FileAnalysisSettings">
            <summary>
            Gets the list of files and associated settings for measuring the audio performance of one or more recorded .WAV files.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.SelectorVisible">
            <summary>
            Gets or sets the visible state of the result selector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.DataSetsGridVisible">
            <summary>
            Gets or sets the visible state of the data selector.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeasurement.SequenceMeasurement">
            <summary>
            Gets the sequencer settings and results for this measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGraphCollection">
            <summary>
            Represents the collection of results for a measurement.  For example, within the Frequency Response measurement, 
            the default set of results is "Level", "Gain", "Relative Level", and "Deviation"
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphCollection.Count">
            <summary>
            Gets the number of results in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphCollection.Item(System.Int32)">
            <summary>
            Gets the specified result from the collection.
            </summary>
            <param name="index">The 0-based index of the result</param>
            <returns>The result</returns>
        </member>
        <member name="P:AudioPrecision.API.IGraphCollection.Item(System.String)">
            <summary>
            Gets the specified result from the collection.
            </summary>
            <param name="resultName">The name of the result.  If there are multiple results with the same name, 
            the first result in the collection is returned</param>
            <returns>The result</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Contains(System.String)">
            <summary>
            Gets whether a result with the specified name exists in the collection.
            </summary>
            <param name="resultName">The name of the result.</param>
            <returns>True if the result is in the collection.</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Add(AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a result of the specified type if it is allowed for this measurement type. Refer to <see cref="P:AudioPrecision.API.IGraphCollection.ResultTypes">ResultTypes</see> 
            for the list of results which can be added.
            </summary>
            <param name="resultType">Result Type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Add(System.String)">
            <summary>
            Adds a result of the specified type if it is allowed for this measurement type. Refer to <see cref="P:AudioPrecision.API.IGraphCollection.ResultTypeNames"/> 
            for the list of results which can be added.
            </summary>
            <param name="resultTypeName">Name of the result type</param>
            <returns>The newly added result</returns>
        </member>
        <member name="P:AudioPrecision.API.IGraphCollection.ResultTypes">
            <summary>
            Returns all possible result types which can be added to this collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphCollection.ResultTypeNames">
            <summary>
            Returns all possible result types which can be added to this collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Delete(System.Int32)">
            <summary>
            Removes the specified graph from the collection.
            </summary>
            <param name="index">The 0 base index of the result</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Delete(System.String)">
            <summary>
            Removes the specified graph from the collection.
            </summary>
            <param name="resultName">The name of the result.  If more than one result with this name exists, the first match is used.</param>
        </member>
        <member name="M:AudioPrecision.API.IGraphCollection.Delete(System.String[])">
            <summary>
            Removes the specified graphs from the collection
            </summary>
            <param name="resultNames">The names of the results. If more than one result with this name exists, the first match is used.</param>
        </member>
        <member name="T:AudioPrecision.API.MeasurementFailureBehavior">
            <summary>
            Represents the possible behaviors for a sequence step when that step fails for any reason.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementFailureBehavior.CancelSequence">
            <summary>
            Stop the sequence immediately upon failure
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementFailureBehavior.AllowRetry">
            <summary>
            Prompt the user to try to run the failed step again.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementFailureBehavior.ContinueSequence">
            <summary>
            Ignore the failure, and continue to the next sequence step.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.MeasurementFailureBehavior.AutoRetry">
            <summary>
            Automatically run the measurement again until it passes or until the maximum number
            of attempts is reached.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceMeasurement">
            <summary>
            Represents a measurement which is part of a sequence.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.IsValid">
            <summary>
            Gets whether or not this measurement is available in the current I/O configuration.
            For example: some measurements are not available when the output connector is set to None.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.MeasurementType">
            <summary>
            Gets the type of the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.Name">
            <summary>
            Gets or sets the name of the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.Index">
            <summary>
            Gets the integer index position of this measurement in the signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.Checked">
            <summary>
            Gets or sets whether or not the measurement will be executed in the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.SequenceSteps">
            <summary>
            Gets the collection of substeps which run before and after the measurement when
            the measurement is executed in a sequence.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceMeasurement.Run">
            <summary>
            Runs the measurement once, collecting settled results (if applicable).  Any enabled sequence sub steps 
            are executed at this time.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">Throws an APException if an error occurs.  The ErrorCode property on the APException 
            object describes the failure.</exception>
            <example>See ISequenceResult.<seealso cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example of running a measurement to 
            produce settled meter readings.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example of running a measurement and examining the
            X,Y graph values.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.HasSequenceResults">
            <summary>
            Gets whether or not this measurement ran during the last sequence execution.  Returns true
            if one or more results were checked to be included in the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.SequenceResults">
            <summary>
            Gets the collection of measurement results recorded during the last sequence execution.
            </summary>
            <example>See ISequenceResult.<seealso cref="M:AudioPrecision.API.ISequenceResult.GetMeterValues"/> for an example of running a measurement to 
            produce settled meter readings.</example>
            <example>See <see cref="M:AudioPrecision.API.ISequenceResult.GetXYValues(System.Int32,AudioPrecision.API.VerticalAxis,AudioPrecision.API.SourceDataType,System.Int32)"/> for an example of running a measurement and examining the
            X,Y graph values.</example>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.FailureBehavior">
            <summary>
            Gets or sets the action the APx500 sequencer will take if this measurement step fails for any reason.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.AutoRetryFailureBehavior">
            <summary>
            Gets or sets how the APx sequencer responds to a measurement failure when running a sequence with automatic retry enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.AutoRetryMaxAttempts">
            <summary>
            Gets or sets how many times the APx sequence re-runs a measurement when it has failed if the <see cref="P:AudioPrecision.API.ISequenceMeasurement.FailureBehavior">FailureBehavior</see> 
            value is <see cref="F:AudioPrecision.API.MeasurementFailureBehavior.AutoRetry">MeasurementFailureBehavior.AutoRetry</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceMeasurement.ResultGraphs">
            <summary>
            Gets the collection of measurement results as represented by the Measurement Navigator.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISequenceMeasurement.Show">
            <summary>
            Makes this measurement the active measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISequenceResultGraphCollection">
            <summary>
            Represents the collection of measurement results as displayed in the Measurement Navigator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraphCollection.Count">
            <summary>
            Gets the number of results in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraphCollection.Item(System.Int32)">
            <summary>
            Gets a specific result.
            </summary>
            <param name="index">The index of the result.</param>
            <returns>The specified reusult.</returns>
        </member>
        <member name="T:AudioPrecision.API.IBatchMeasurement">
            <summary>
            Represents a measurement which can start, acquire data, and produce a result.  For example:  Stepped Freqency Sweep.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBatchMeasurement.Start">
            <summary>
            The measurement runs synchronously and does not return control to the user
            until the measurement has completed.  
            </summary>
            <returns>True if the measurement ran successfully, or False if the user the measurement failed to complete
            due to the user cancelling or due to an error.
            </returns>
        </member>
        <member name="T:AudioPrecision.API.IBatchMeasurementWithAppend">
            <summary>
            Represents a measurement which can start, acquire multiple data sets, and produce a result.  
            For example:  Stepped Freqency Sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBatchMeasurementWithAppend.Append">
            <summary>
            Gets or sets whether new data will be appended to the existing graph, or whether
            the data will be cleared each time the measuremen starts.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMetadataRecorderMeasurement">
            <summary>
            Represents the settings and results for the Metadata Recorder measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMetadataRecorderMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="MetadataRecorder.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMetadataRecorderMeasurement.SweepTime">
            <summary>
            Gets a setting which controls the length of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMetadataRecorderMeasurement.MetadataGraph">
            <summary>
            Gets the Metadata settings and results.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMetadataRecorderGenerator">
            <summary>
            Represents the generator settings for the Metadata Recorder measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMaxOutputSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the MOLBurst measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuing level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMaxOutputBase">
            <summary>
            Represents the common settings and results for the Maximum Output Level measurements.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.Level">
            <summary>
            Gets the Level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="MaxOutput.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.ThdNLevel">
            <summary>
            Gets the THD+N Level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="MaxOutput.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.ThdNRatio">
            <summary>
            Gets the THD+N Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="MaxOutput.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.MaximumGeneratorAmplitude">
            <summary>
            This property is obsolete. Use RegulationSettings.<see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> or RegulationSettings.<see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.MeasuredChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.TargetThdN">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.GeneratorTolerance">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBase.RegulationSettings">
            <summary>
            Gets the settings for the regulation algorithm.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMaxOutputMeasurement">
            <summary>
            Represents the settings and results for the Max Output measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputMeasurement.Generator">
             <summary>
             Gets the generator for this measurement.
             </summary>
             <example>
             This example demonstrates configuring a sine wave generator
             <code source="MaxOutput.vb" region="MaxOutputGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMaxOutputGenerator">
            <summary>
            Represents the generator settings for the Maximum Output measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputGenerator.Type">
            <summary>
            Gets the current generator type
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMaxOutputBurstMeasurement">
            <summary>
            Represents the setttings and results for Max Output Burst measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMaxOutputBurstMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
            <example>
            <code source="MaxOutput.vb" region="MaxOutputBurstGenerator" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.IBurstGenerator">
            <summary>
            Represents the generator controls for the Multitone measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBurstGenerator.SignalType">
            <summary>
            Gets the setting for the delay before the sweep starts.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMultitoneAnalyzerMeasurement">
            <summary>
            Represents the settings and results for the Multitone Analyzer measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.MultitoneSignalNames">
            <summary>
            Gets the list of Multitone Signal Definitions that are part of the APx project file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.MultitoneSignal">
            <summary>
            Specifies the multitone signal when the output connector for the signal path is None (External).
            The waveform parameters from this signal definition are used to perform the multitone analysis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.MultitoneSignalDefinition">
            <summary>
            Gets the settings for the selected signal definition.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneAnalyzerMeasurement.LoadMultitoneSignalFile(System.String,System.Boolean)">
            <summary>
            Loads a file which represents a multitone signal from a specified file on disk.  
            Multitone signal files can be waveform files in .WAV, .AGM, or .AGS formats.
            Multitone signal files can also be descriptive files in .CSV or .XLS format.
            </summary>
            <param name="fileName">The full path to the file on disk.</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a signal definition file attached
            to the project with this signal definition file.</param>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Generator">
            <summary>
            Gets the generator settings for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a multitone generator
            <code source="Multitone.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="Multitone.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="Multitone.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="Multitone.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Deviation">
            <summary>
            Gets the Deviation result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Multitone.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.FFTSpectrum">
            <summary>
            Gets the FFT Spectrum result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.NoiseDensity">
            <summary>
            Gets the Noise Density result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TotalRmsLevel">
            <summary>
            Gets the Total RMS Level result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.ToneRmsLevel">
            <summary>
            Gets the RMS Level at a specific tone result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.MaximumToneLevel">
            <summary>
            Gets the Maximum Level at a specific tone result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.NoiseLevel">
            <summary>
            Gets the Noise result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TdPlusNSpectrum">
            <summary>
            Gets the TD+N Spectrum result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TotalDistortionPlusNoiseRatio">
            <summary>
            Gets the TD+N Ratio result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TotalDistortionPlusNoiseLevel">
            <summary>
            Gets the TD+N Level result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.DCLevel">
            <summary>
            Gets the DC Level result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.SignalToNoiseRatio">
            <summary>
            Gets the Signal to Noise Ratio result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.CrosstalkVsFrequency">
            <summary>
            Gets the Crosstalk result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.ToneCrosstalk">
            <summary>
            Gets the Crosstalk at a specified tone result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Phase">
            <summary>
            Gets the Phase result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.ToneInterchannelPhase">
            <summary>
            Gets the Phase at a specified tone result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.FrequencyShift">
            <summary>
            Gets the Frequency Shift result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.AcquiredWaveform">
            <summary>
            Gets the Acquired Waveform.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerType">
            <summary>
            Gets or sets the triggering method.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerDelay">
            <summary>
            Gets the setting for the delay time before triggering.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.SignalTrigger">
            <summary>
            Gets the settings for the Signal type trigger which waits until the incoming signal matches a known
            signal definition.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerLevel">
            <summary>
            Gets the setting for the trigger level when the <see cref="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerType">TriggerType</see> is <see cref="F:AudioPrecision.API.MultitoneTriggerType.Level">MultitoneTriggerType.Level</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerTimeoutEnabled">
            <summary>
            Gets or sets whether the trigger timeout is enabled.  If the timeout is not enabled, the trigger waits forever.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerTimeout">
            <summary>
            Gets or sets the trigger timeout value, in seconds.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.MaxFrequencyShift">
            <summary>
            Gets the setting for the maximum frequency shift allowed.  In certain input conditions, APx will attempt to correct the sample
            rate of the device.  This setting indicates the maximum amount of correction allowed before the measurement fails with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.FrequencyCorrectionEnabled">
            <summary>
            Gets or sets whether or not frequency correction is enabled for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.SkirtWidth">
            <summary>
            Gets the setting for the maximum skirt width around tones to include for level measurements or exclude for noise measurements.
            See the APx application help for more description of the Skirt Width field in the Multitone Analyzer, Advanced Settings topic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TriggerChannel">
            <summary>
            Gets or sets the channel used for signal triggering.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.Averages">
            <summary>
            Gets or sets the number of averages to perform in the frequency domain.  Valid choices are 1-8.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.PhaseReferenceChannel">
            <summary>
            Gets or sets the reference channel used to measure phase.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TdPlusNFilter">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.TdPlusNFilterEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.NoiseWeightingEnabled">NoiseWeightingEnabled</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneAnalyzerMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IToneMeterGraph">
            <summary>
            Represents the settings for a meter result which allows the user to choose a specific tone at which
            to provide a measured value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneMeterGraph.ToneCount">
            <summary>
            Gets the number of available tones 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneMeterGraph.IsSelectedToneCrosstalk">
            <summary>
            Gets whether or not the tones at the specified index are crosstalk tones.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneMeterGraph.SelectedToneIndex">
            <summary>
            Gets or sets which tone is selected
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneMeterGraph.Tones">
            <summary>
            Gets the list of tones in text format.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IToneCrosstalkMeterGraph">
            <summary>
            Represents the settings for a meter result which allows the user to choose a pair of tones which are designated
            as crosstalk tones.  The selected tones are used to provide the measured values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneCrosstalkMeterGraph.CrosstalkToneCount">
            <summary>
            Gets the number of available tones
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneCrosstalkMeterGraph.CrosstalkToneIndex">
            <summary>
            Gets or sets the selected tones
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IToneCrosstalkMeterGraph.Tones">
            <summary>
            Gets the list of tones in text format.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRatioToneMeterGraph">
            <summary>
            Represents the settings for a meter result which can compute a ratio based on the <see cref="P:AudioPrecision.API.IRatioToneMeterGraph.RatioType">RatioType</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRatioToneMeterGraph.RatioType">
            <summary>
            Gets or sets how the result is computed.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMultitoneSignalTrigger">
            <summary>
            Represents the settings for the Signal trigger in the Multitone Analyzer.  This trigger attempts to match the input
            signal to the user specified signal in the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalTrigger.ToneMatchPercent">
            <summary>
            Gets or sets the percentage of tone matching, between 25-100%.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalTrigger.ToneSignalToNoiseRatio">
            <summary>
            Gets or sets how much the level of a tone must be above the noise floor (in dB) to be considered part of the signal match.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMultitoneSignalDefinition">
            <summary>
            Represents the settings for a multitone signal definition
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.Name">
            <summary>
            Gets the name of the signal definition.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.SampleRate">
            <summary>
            Gets the sample rate of the signal definition in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.Length">
            <summary>
            Gets the sequence length of the signal definition.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.HasCrosstalkTones">
            <summary>
            Gets whether or not the signal definition has crosstalk tones.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.MinFrequency">
            <summary>
            Gets the minimum frequency in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.MaxFrequency">
            <summary>
            Gets the maximum frequency in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.NumberOfTones">
            <summary>
            Gets the number of tones.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.StepType">
            <summary>
            Gets the step spacing type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMultitoneSignalDefinition.StepSize">
            <summary>
            When the <see cref="P:AudioPrecision.API.IMultitoneSignalDefinition.StepType">StepType</see> property is Linear, this value indicates the step size in Hz.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetToneBins(System.Int32)">
            <summary>
            Gets the frequency bin values for the tones in the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of bins</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetFrequency(System.Int32)">
            <summary>
            Gets the frequency values in Hz for the tones in the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of frequency values in Hz</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetAmplitude(System.Int32)">
            <summary>
            Gets the relative amplitude values as a ratio in the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of relative amplitude values as a ratio</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetAmplitude(System.Int32,System.String)">
            <summary>
            Gets the relative amplitude values as a ratio in the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <param name="unit">The specified unit</param>
            <returns>An array of relative amplitude values in the specified unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetPhase(System.Int32)">
            <summary>
            Gets the phase values in degrees in the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of phase values in degrees</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.GetCrestFactor(System.Int32)">
            <summary>
            Gets the crest factor for the specified channel.
            </summary>
            <param name="ch">The channel</param>
            <returns>If the signal is a waveform file, the crest factor is unknown.  In this case, this function returns Double.NaN.  
            Otherwise the crest factor of the signal is returned in dB.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.Export(System.String)">
            <summary>
            Exports the signal definition to an Excel (.xls) or CSV Text (.csv) file, depending on the file extension.
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:AudioPrecision.API.IMultitoneSignalDefinition.ExportWav(System.String,AudioPrecision.API.WavExportBitDepth,System.Double)">
            <summary>
            Exports the signal definition to a .WAV file.  If the signal is a waveform file already, this function throws an exception.
            </summary>
            <param name="fileName">The file name</param>
            <param name="bitDepth">The desired bit depth</param>
            <param name="durationInSeconds">The duration in seconds.  Only Complete sequences are exported, so the actual exported duration may be longer to ensure a complete multitone sequence.</param>
        </member>
        <member name="T:AudioPrecision.API.INoiseMeasurement">
            <summary>
            Represents the settings and results for the Noise measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.Level">
            <summary>
            Gets the Rms level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Noise.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) meter results.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.AcquisitionTime">
            <summary>
            Gets the setting for controling the length of time the noise floor is measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.DelayTime">
            <summary>
            Gets the setting for controlling the amount of time to wait before measuring noise.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.INoiseGenerator">
            <summary>
            Represents the settings for the generator for the Noise measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseGenerator.NoiseShape">
            <summary>
            Gets the type of noise to be generated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISaveAcquisitionToFileSettings">
            <summary>
            Represents the settings for measuremments where users record the input signal to a file on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SaveAcquisitionToFile">
            <summary>
            Gets or sets whether the measurement will save the incoming signal to a file on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.ReplaceSavedFile">
            <summary>
            Gets or sets whether or not a file will be replaced, or a new file name generated when 
            the <see cref="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SaveAcquisitionToFile">SaveAcquisitionToFile</see> is enabled.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SavedAcquisitionAudioType">
            <summary>
            Gets or sets the type of audio the recorder should record.  The recorder ignores audio of any type that does not
            match this setting.  This setting is only applicable in digital input mode.  
            If no audio of the expected type is found, the measurement aborts with an error.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SavedAcquisitionAnalogBitDepth">
            <summary>
            Gets or sets the BitDepth for output file.  This setting is only applicable in Analog input mode.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SavedAcquisitionFolderName">
            <summary>
            Gets or sets where the saved audio data will be saved on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveAcquisitionToFileSettings.SavedAcquisitionFileName">
            <summary>
            Gets or sets the file name for the saved audio data.  The file extension will be determined automatically
            by APx500 depending on the detected audio data.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISaveGeneratorFileSettings">
            <summary>
            Represents the settings for measuremments where users save the generator waveform to a file on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorFileSettings.ReplaceSavedFile">
            <summary>
            Gets or sets whether or not a file will be replaced, or a new file name generated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorFileSettings.AudioType">
            <summary>
            Gets or sets the type of audio to be saved
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorFileSettings.BitDepth">
            <summary>
            Gets or sets the BitDepth for saved generated file.  This setting is only applicable in Analog input mode.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorFileSettings.FolderName">
            <summary>
            Gets or sets where the saved generated file will be saved on disk.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISaveGeneratorFileSettings.FileName">
            <summary>
            Gets or sets the file name for the saved generated file. 
            </summary>
        </member>
        <member name="T:AudioPrecision.API.INoiseRecorderMeasurement">
            <summary>
            Represents the settings and results for the Noise Recorder measurement.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.SweepTime">
            <summary>
            Gets a setting which controls the length of the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.ReadingRate">
            <summary>
            Gets or sets the rate at which the measurement takes readings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.RmsLevelVsTime">
             <summary>
             Gets the RMS Level vs Time result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="MeasurementRecorder.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.RmsLevelAcPlusDcVsTime">
            <summary>
            Gets the Rms Level (AC+DC) vs Time results.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderMeasurement.AnalogInputBandwidth">
            <summary>
            Gets or set the bandwidth to be used in place of the InputBandwidth as specified in the SignalPathSetup.
            The maximum value is limited by the number of channels specified in the SignalPathSetup.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.INoiseRecorderGenerator">
            <summary>
            Represents the generator settings for the Noise Recorder measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.  This property is only applicable
            when the input is File.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INoiseRecorderGenerator.NoiseShape">
            <summary>
            Gets the type of noise to be generated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPassFailMeasurement">
            <summary>
            Represents the settings for a measurement which prompts the user to provide a pass or fail response.  This measurement
            is useful for sequences where the operator of the system needs to provide feedback for something that cannot be measured
            in the APx software.  For example, an operator may be prompted to indicate if an LED is lit on the device under test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.Text">
            <summary>
            Gets or sets the unformatted text of the prompt.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.RTF">
            <summary>
            Gets or sets the text of the prompt formatted with RTF characters.  
            RTF may include information about fonts and special characters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.Image">
            <summary>
            Gets the image associated with this prompt. This value is Null if no image is specified.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPassFailMeasurement.LoadImage(System.String,System.Boolean)">
            <summary>
            Loads an image file from disk into the project and selects that image into the <see cref="P:AudioPrecision.API.IPassFailMeasurement.Image">Image</see> property.
            </summary>
            <param name="fileName">The name of the file on disk.  Supported file types include JPG, PNG, BMP</param>
            <param name="replaceIfExists">APx does not allow duplicate file names or files with the same content to exist in the project.  If 
            this file matches one already in the project, this flag indicates whether APx replaces the existing file, or returns with an error.</param>
        </member>
        <member name="M:AudioPrecision.API.IPassFailMeasurement.ClearImage">
            <summary>
            Removes the image selected in the <see cref="P:AudioPrecision.API.IPassFailMeasurement.Image">Image</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.ShowCancel">
            <summary>
            Gets or sets whether or not the prompt displays a Cancel button to the user.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.PlayAlertSound">
            <summary>
            Gets or sets whether or not to play a sound when the prompt is displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.TimeoutEnabled">
            <summary>
            Gets or sets whether or not the prompt will dismiss itself automatically after a the time specified in 
            the <see cref="P:AudioPrecision.API.IPassFailMeasurement.TimeoutInSeconds">TimeoutInSeconds</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.TimeoutInSeconds">
            <summary>
            Gets or sets the amount of time before the prompt automatically dismisses itself.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.PassButtonLabel">
            <summary>
            Gets or sets a custom label on the Pass button.  If this value is blank, the default APx label appears.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.FailButtonLabel">
            <summary>
            Gets or sets a custom label on the Fail button.  If this value is blank, the default APx label appears.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.RunMode">
            <summary>
            Gets or sets the action for the Pass/Fail measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.ProgramSettings">
            <summary>
            Gets the settings for running an external program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailMeasurement.TextFileSettings">
            <summary>
            Gets the settings for validating the contents of a text file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPassFailProgramSettings">
            <summary>
            Represents the settings for a running an external program from the Pass/Fail measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.Command">
            <summary>
            Gets or sets the command to be executed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.Arguments">
            <summary>
            Gets or sets the command line arguments to the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.WorkingDirectory">
            <summary>
            Gets or sets the working directory for the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.ExpectedOutput">
            <summary>
            This property gets or sets the expectd output of the program.
            If the actual output does not match the expected output, the measurement fails.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.ActualOutput">
            <summary>
            Gets the console output from the program.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailProgramSettings.RanToCompletion">
            <summary>
            Gets whether or not the program completed.  This is false if the path to the program was incorrect if the program
            failed due to some other error.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPassFailTextFileSettings">
            <summary>
            Represents the settings for validating the contents of a text file from the Pass/Fail measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailTextFileSettings.FilePath">
            <summary>
            Gets or sets the absolute path to the text file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailTextFileSettings.ExpectedFileContents">
            <summary>
            Gets or sets the expected text contents of the file.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPassFailTextFileSettings.ActualFileContents">
            <summary>
            Returns the actual contents of the file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqAverageMeasurement">
            <summary>
            Represents the settings for a measurement which uses the PESQ algorithm to measure perceptual audio quality
            of complex audio signals like speech which are sampled at 8 kHz or 16 kHz.
            This measurement performs PESQ analysis on a list of one or more files and produces an average MOS-LQO score.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.ExtendAcquisition">
            <summary>
            Gets a setting to control the extra acquisition time for the measurement.  
            Extra time may be required if the device under test has delay or is a playback
            only device.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.ReferenceFileNames">
            <summary>
            Gets or sets the list of reference files used for this measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPesqAverageMeasurement.LoadReferenceFile(System.String,System.Boolean)">
            <summary>
            This method loads a reference waveform from a file and selects it for the measurement.  
            The file must be a .WAV file sampled at 8 kHz or 16 kHz.
            </summary>
            <param name="fileName">The fully qualified path to the WAV file.</param>
            <param name="replaceIfExists">True if you wish to replace a file in the project which matches this file.</param>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.Mode">
            <summary>
            Gets or sets the analysis mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.ConformanceAdjustment">
            <summary>
            Gets or sets control to adjust silence in reference file, according to ITU conformance. Enabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.MosAverage">
            <summary>
            Gets the result which contains the average MOS-LQO meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageMeasurement.FileMos">
            <summary>
            Gets the result which contains the MOS-LQO score for each file as an XY graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqAverageXYGraph">
            <summary>
            Represents an XY Graph which displays the MOS-LQO score per file for the PESQ Averaged measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAverageXYGraph.AnalysisRegion">
            <summary>
            Gets or sets the portion of the acquired audio to analyze.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqAverageGenerator">
            <summary>
            Gets the settings for the signal generator used for the PESQ Averaged measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqMeasurement">
            <summary>
            Represents the settings for a measurement which uses the PESQ algorithm to measure perceptual audio quality
            of complex audio signals like speech which are sampled at 8 kHz or 16 kHz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.ExtendAcquisition">
            <summary>
            Gets a setting to control the extra acquisition time for the measurement.  
            Extra time may be required if the device under test has delay or is a playback
            only device.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IPesqMeasurement.LoadReferenceFile(System.String,System.Boolean)">
            <summary>
            When the signal path output connector is None (External), this method loads a reference
            waveform from a file and selects it for the measurement.  The file must be a .WAV file
            sampled at 8 kHz or 16 kHz.
            </summary>
            <param name="fileName">The fully qualified path to the WAV file.</param>
            <param name="replaceIfExists">True if you wish to replace a file in the project which matches this file.</param>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.ReferenceFile">
            <summary>
            Gets or sets the currently selected reference file with the output is None (External).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.ReferenceFileNames">
            <summary>
            Gets the list of reference files attached to the project.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.ConformanceAdjustment">
            <summary>
            Gets or sets control to adjust silence in reference file, according to ITU conformance. Enabled by default.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.Mode">
            <summary>
            Gets or sets the analysis mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.Pesq">
            <summary>
            Gets the result which contains a PESQ meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.Mos">
            <summary>
            Gets the result which contains a MOS-LQO meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.MosVsTime">
            <summary>
            Gets the result which contains the MOS-LQO vs Time graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.AverageDelay">
            <summary>
            Gets the result which contains the average delay per channel meter reading.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.DelayVsTime">
            <summary>
            Gets the result which contains the Delay vs Time graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.ReferenceWaveform">
            <summary>
            Gets the result which contains the reference waveform graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeasurement.AcquiredWaveform">
            <summary>
            Gets the result which contains the acquired waveform graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqAcquiredWaveformGraph">
            <summary>
            Represents an XY Graph which displays the acquired waveform data for a PESQ measurment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqAcquiredWaveformGraph.ShowDropouts">
            <summary>
            Gets or sets whether dropouts are displayed on the graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqMeterGraph">
            <summary>
            Represents a meter reading for PESQ or MOS-LQO for PESQ measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPesqMeterGraph.AnalysisRegion">
            <summary>
            Gets or sets the portion of the acquired audio to analyze.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPesqGenerator">
            <summary>
            Gets the settings for the signal generator used for PESQ measurements.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPsrMeasurement">
            <summary>
            Represents the settings for a measurement which calculates the Power Supply Rejection for a device under test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.Settling">
            <summary>
            Gets the settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.Psr">
            <summary>
            Gets the PSR meter graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.PsrPlusN">
            <summary>
            Gets the PSR+N meter graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.Psrr">
            <summary>
            Gets the PSRR meter graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrMeasurement.PsrrPlusN">
            <summary>
            Gets the PSRR+N meter graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPsrGenerator">
            <summary>
            Represents the settings for the PSR signal genererator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrGenerator.GeneratorType">
            <summary>
            Gets or sets the generated signal type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrGenerator.VddLevel">
            <summary>
            Gets the setting for the DC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrGenerator.AcLevel">
            <summary>
            Gets the setting for the AC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrGenerator.Frequency">
            <summary>
            Gets the setting for the sine generator frequency when the <see cref="P:AudioPrecision.API.IPsrGenerator.GeneratorType">GeneratorType</see> property is set to Sine.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPsrSweepMeasurement">
            <summary>
            Represents the settings for a measurement which calculates the Power Supply Rejection for a device under test 
            accross a specified frequency range.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.Generator">
            <summary>
            Gets the generator settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.Settling">
            <summary>
            Gets the settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.Psr">
            <summary>
            Gets the PSR vs Frequency XY graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.PsrPlusN">
            <summary>
            Gets the PSR+N vs Frequency XY graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.Psrr">
            <summary>
            Gets the PSRR vs Frequency XY graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepMeasurement.PsrrPlusN">
            <summary>
            Gets the PSRR+N vs Frequency XY graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPsrSweepGenerator">
            <summary>
            Represents the settings for the signal generator for the PSRR Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepGenerator.VddLevel">
            <summary>
            Gets the setting for the DC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepGenerator.AcLevel">
            <summary>
            Gets the setting for the AC voltage level provided at the Vdd connector on the PDM module front panel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IPsrSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for PSR measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IPsrSettlingParametersCollection.Psr">
            <summary>
            Gets the settling parameters for the PSR reading.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IQpeakNoiseMeasurement">
            <summary>
            Represents the settings and results for the Noise measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseMeasurement.Level">
            <summary>
            Gets the Rms level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="Noise.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseMeasurement.AcquisitionTime">
            <summary>
            Gets the setting for controling the length of time the noise floor is measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseMeasurement.DelayTime">
            <summary>
            Gets the setting for controlling the amount of time to wait before measuring noise.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseMeasurement.Generator">
            <summary>
            Gets the generator for this measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IQpeakNoiseGenerator">
            <summary>
            Represents the generator settings for the Q-Peak noise measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseGenerator.NoiseShape">
            <summary>
            Gets or sets the type of noise generated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IQpeakNoiseGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalAcquisitionMeasurement">
            <summary>
            Represents a measurement which acquires any input signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAcquisitionMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAcquisitionMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAcquisitionMeasurement.AcquiredWaveform">
            <summary>
            Gets the Acquired Waveform.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAcquisitionMeasurement.Properties">
            <summary>
            Gets the collection of properties provided by a custom processing plug-in. The collection is empty if this measurement
            is not part of a plug-in measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAcquisitionMeasurement.GeneratorProperties">
            <summary>
            Gets the collection of generator properties provided by a custom processing plug-in.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferenceLevelsThdNMeterGraph">
            <summary>
            Represents the meter on the Reference Levels measurement for measuring THD+N.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsThdNMeterGraph.TargetDistortion">
            <summary>
            Gets the setting for the target distortion.  Target distortion is used
            to determine if the device is performing within the requested range.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferenceLevelsMeasurement">
            <summary>
            This object is obsolete.  All functionality has moved to <see cref="P:AudioPrecision.API.ISignalPathSettings.References">ISignalPathSetup.References</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.Level">
            <summary>
            Gets the RMS Level result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.Frequency">
            <summary>
            Gets the frequency result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.ThdNRatio">
            <summary>
            Gets the THD+N result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.NoiseWeighting">
            <summary>
            Gets or sets the noise filter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.NoiseWeightingEnabled">
            <summary>
            Gets or sets whether or not the <see cref="P:AudioPrecision.API.IReferenceLevelsMeasurement.NoiseWeighting">NoiseWeighting</see> is applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.LowpassFilterFrequency">
            <summary>
            Gets a setting for the lowpass filter frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            Gets or sets whether or not the <see cref="P:AudioPrecision.API.IReferenceLevelsMeasurement.LowpassFilterFrequency">LowpassFilterFrequency</see> is applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            Gets or sets whether or not the <see cref="P:AudioPrecision.API.IReferenceLevelsMeasurement.HighpassFilterFrequency">HighpassFilterFrequency</see> is applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.HighpassFilterFrequency">
            <summary>
            Gets a setting for the highpass filter frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.AutoGeneratorLevel">
            <summary>
            Gets access to functionality which automatically finds the required generator level
            to drive the device under test to a specified distortion level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.References">
            <summary>
            Gets the references object which contains reference values for all measurement domains.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsMeasurement.SequenceSettings">
            <summary>
            Gets the settings for this measurement when it is checked in a sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferenceLevelsGenerator">
            <summary>
            Represents the internal signal generator of the APx instrument for the Reference Levels measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferenceLevelsSequenceSettings">
            <summary>
            Represents the settings and actions for the Reference Levels measurement when it is checked in a sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsSequenceSettings.AutoSetGeneratorLevel">
            <summary>
            Gets or sets whether the Auto Generator Level function will be used to find the dBrG or dBSPL reference
            value for the signal path.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsSequenceSettings.SignalPaths">
            <summary>
            Gets the available signal paths in the project from which this measurement can copy reference values.  It is common
            to establish reference values in a signal path early in the sequence, and then use them again in a signal path
            later in the sequence.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsSequenceSettings.CopyReferencesFromSignalPath">
            <summary>
            Gets or sets which signal path to copy reference values from when running in a sequence.  It is common
            to establish reference values in a signal path early in the sequence, and then use them again in a signal path
            later in the sequence.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter">
            <summary>
            Represents the settings used to find the clipping point of the device
            under test or the minimum distortion level of the device under test.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.Mode">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IRegulationSettings.TargetValueType"/> and <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetType"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.TargetThdN">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.MeasureWorstChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IRegulationSettings.TargetChannelType">TargetChannelType</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.MeasuredChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.MaximumGeneratorAmplitude">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> or <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.SetGeneratorLevel">
            <summary>
            Attempt to find the desired distortion level of the device by adjusting the generator level, using the method 
            specified in the Mode parameter.
            </summary>
            <exception cref="T:AudioPrecision.API.APException">Throws an exception if the distortion level could not be found.</exception>
            <returns>True if completed successfully, False if cancelled by user.</returns>
        </member>
        <member name="P:AudioPrecision.API.IReferenceLevelsAutoGeneratorLevelSetter.TargetLevel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRegulatedFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Regulated Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRegulatedFrequencySweepMeasurement">
            <summary>
            Represents the settings and results for the Regulated Frequency Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="RegFreqSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.ThdNLevel">
             <summary>
             Gets the THD+N Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="RegFreqSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.ThdNRatio">
             <summary>
             Gets the THD+N Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="RegFreqSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.GeneratorLevel">
            <summary>
            Gets the Generator Level result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.MaximumGeneratorAmplitude">
            <summary>
            This property is obsolete. Use RegulationSettings.<see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StartValue"/> or RegulationSettings.<see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.StopValue"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.MeasuredThdNChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.MeasuredLevelChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> and <see cref="P:AudioPrecision.API.IRegulatedFrequencySweepRegulationSettings.MeasureAllChannels"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.TargetThdN">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.GeneratorTolerance">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.MeasuredLevelTolerance">
            <summary>
            This property is obsolete.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.TargetLevel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetValue">TargetValue</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.Mode">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetType"/> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepMeasurement.RegulationSettings">
            <summary>
            Gets the settings for the regulation algorithm.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRegulatedFrequencySweepRegulationSettings">
            <summary>
            Represents the settings for the regulation algorithm for the Regulated Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepRegulationSettings.MeasureAllChannels">
            <summary>
            If True, makes the regulation measurements on all channels. When False, only measures one specific channel 
            as specified in the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetChannel"/> property.
            This property only applies when the <see cref="P:AudioPrecision.API.ITargetChannelRegulationSettings.TargetType"/> is
            <see cref="F:AudioPrecision.API.RegulationTarget.RmsLevel"/>.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IRegulatedFrequencySweepGenerator">
            <summary>
            Represents the generator settings for regulated frequency sweep measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.Double)">
            <summary>
            Sets the generator offset to the specified value in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.SetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Sets the generator to the specified offset.
            </summary>
            <param name="ch">The output channel</param>
            <param name="offset">The desired offset.  This string may contain units or multipliers such as "m", "n", "k", "u", etc.</param>
            <example>See ILevelAndGainMeasurement.<see cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Generator"/> for an example of setting generator levels.</example>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetOffsetValue(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The desired unit</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetOffsetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator offset</returns>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetOffsetText(AudioPrecision.API.OutputChannelIndex,System.String)">
            <summary>
            Gets the offset of the generator for the specified channel in the specified unit and returns a formatted
            string with unit information.
            </summary>
            <param name="ch">The output channel</param>
            <param name="unit">The unit</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="M:AudioPrecision.API.IRegulatedFrequencySweepGenerator.GetOffsetText(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the offset of the generator for the specified channel, in the current offset unit.
            </summary>
            <param name="ch">The output channel</param>
            <returns>A formatted string containing the offset and the unit</returns>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.OffsetUnit">
            <summary>
            Gets or sets the current unit for generator offsets.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRegulatedFrequencySweepGenerator.OffsetUnitList">
            <summary>
            Gets the list of available units for the generator offsets.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITriggeredAcquisitionSettings">
            <summary>
            Represents settings for acquisition based measurements such as Signal Analyzer and Signal Acquisition or the FFT measurement in Bench Mode.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.AcquisitionType">
            <summary>
            Gets or sets how the acquisition length is set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.AcquisitionSamples">
            <summary>
            Gets or sets the acquisition length in samples.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.AcquisitionSeconds">
            <summary>
            Gets or sets the acquisition length in seconds.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.TriggerType">
            <summary>
            Gets or sets the trigger type used by the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.TriggerChannel">
            <summary>
            Gets or sets the channel the algorithm will use for signal triggering.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.DelayTimeInSeconds">
            <summary>
            Gets or sets the amount of time, in seconds, the acquisition is delayed after the measurement is started.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.UseDelayTimeInSeconds">
            <summary>
            Gets or sets whether the acquisition delay is specified in seconds or in frames at the current sample rate.
            The delay values as specified in seconds using the <see cref="P:AudioPrecision.API.ITriggeredAcquisitionSettings.DelayTimeInSeconds">DelayTimeInSeconds</see> property
            and in frames using the <see cref="P:AudioPrecision.API.ITriggeredAcquisitionSettings.DelayTimeInSamples">DelayTimeInSamples</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.DelayTimeInSamples">
            <summary>
            Sets the acquisition delay time in samples.  This option is only valid when a waveform is loaded into the generator
            and the acquisition is using a generator trigger.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.PdmSignalSource">
            <summary>
            When the input is PDM, this setting chooses between acquiring from the normal audio stream or from the 
            undecimated PDM bitstream.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.AnalogInputBandwidth">
            <summary>
            Gets or set the bandwidth to be used in place of the InputBandwidth as specified in the SignalPathSetup.
            The maximum value is limited by the number of channels specified in the SignalPathSetup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.NestedSweep">
            <summary>
            Gets the settings for making a nested set of measurements.  Nesting parameters allow the user to configure a measurement
            which is executed with differing measurement parameters such as signal levels or frequencies.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITriggeredAcquisitionSettings.SaveToFileSettings">
            <summary>
            Gets the settings for saving the acquisition data to a disk file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFftSettings">
            <summary>
            Represents the measurement and configuration settings for FFT based measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftSettings.AveragingType">
            <summary>
            Gets or sets the averaging type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftSettings.FFTLength">
            <summary>
            Gets or sets the acquisition length for the FFT.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftSettings.Averages">
            <summary>
            Gets or sets the number of averages performed by the FFT algorithm.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftSettings.WindowType">
            <summary>
            Gets the window type used to make the FFT measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IFftResults">
            <summary>
            Represents the result settings and data for FFT based measurements
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftResults.Scope">
             <summary>
             Gets the time domain scope result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SignalAnalyzer.vb" region="Scope" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFftResults.FFTSpectrum">
             <summary>
             Get the frequency domain FFT result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SignalAnalyzer.vb" region="FftSpectrum" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IFftResults.AmplitudeSpectralDensity">
            <summary>
            Get the amplitude spectral density result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IFftResults.PowerSpectralDensity">
            <summary>
            Get the power spectral density result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalAnalyzerMeasurement">
            <summary>
            Represents the settings and results for the Signal Analyzer measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAnalyzerMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAnalyzerMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="SignalAnalyzer.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.ISignalAnalyzerGenerator">
            <summary>
            Represents the generator settings for the Signal Analyzer measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAnalyzerGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.  This property is only applicable
            when the input is File.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAnalyzerGenerator.LoopWaveform">
            <summary>
            Gets or sets whether the generator loops the waveform selected in the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalAnalyzerGenerator.NoiseShape">
            <summary>
            Gets the type of noise to be generated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBitsGraph">
            <summary>
            Represents the graph on the Signal Path Diagnostics measurement which displays the current
            bit readings for a digital input signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBitsGraph.BitsAnalysis">
            <summary>
            Gets or sets whether the graph is analyzing the active bits or the data bits of the
            audio word.
            </summary>
        </member>
        <member name="E:AudioPrecision.API.IBitsGraph.ValuesChanged">
            <summary>
            Event fired when new data is available. 
            Use the APEvents class to subscribe to this event.
            <see cref="T:AudioPrecision.API.APEvents"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBitsGraph.GetValues">
            <summary>
            Gets the current meter readings.
            </summary>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBitsGraph.ExportData(System.String,System.Boolean)">
            <summary>
            Exports the meter data to an Excel or CSV file.  The type of file is determined by the file
            extension.  If the file extension is ".xls" the file is exported to an Excel file, otherwise it
            is exported to a CSV text file.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
            <param name="append">True to add the data to an existing file if that file type supports append</param>
        </member>
        <member name="P:AudioPrecision.API.IBitsGraph.ChannelCount">
            <summary>
            Gets the number of channels for this graph.  Before the measurement is run this will equal the number
            of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBitsGraph.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IConstantValues">
            <summary>
            Represents the collection of generator channels for the constant value generator type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConstantValues.TrackFirstChannel">
            <summary>
            Gets or sets whether all channels have the same value.  If true, all channels
            have the same value as the first channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IConstantValues.Count">
            <summary>
            Gets the number of channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IConstantValues.SetValue(AudioPrecision.API.OutputChannelIndex,System.Int32)">
            <summary>
            Sets the generator to the specified value.
            </summary>
            <param name="ch">The output channel</param>
            <param name="constantValue">The desired value</param>
        </member>
        <member name="M:AudioPrecision.API.IConstantValues.GetValue(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets the value of the generator for the specified channel.
            </summary>
            <param name="ch">The output channel</param>
            <returns>The generator value</returns>
        </member>
        <member name="T:AudioPrecision.API.ISignalToNoiseSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Signal to Noise Ratio measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseSettlingParametersCollection.Noise">
            <summary>
            Gets the settling parameters for measuring noise.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseSettlingParametersCollection.Signal">
            <summary>
            Gets the settling parameters for measuring the signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalToNoiseRatioMeasurement">
            <summary>
            Represents the settings and results for the Signal to Noise Ratio measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="Snr.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.SignalToNoiseRatio">
            <summary>
            Gets the signal to noise ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="Snr.vb" region="Meter" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISignalToNoiseRatioMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISignalToNoiseRatioGenerator">
            <summary>
            Represents the generator settings for the Signal to Noise Ratio measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISinadSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the THD+N measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadSettlingParametersCollection.Sinad">
            <summary>
            Gets the settling parameters for measuring SINAD.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISinadMeasurement">
            <summary>
            Represents the settings and the results for the SINAD measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="ThdN.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.SinadRatio">
            <summary>
            Gets the SINAD Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.Enob">
            <summary>
            Gets the ENOB meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.NotchTuningMode">
            <summary>
            Gets or sets the notch filter tuning behavior.
            The filter can be set to follow: the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.NotchFrequency">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISinadMeasurement.NotchFilterFrequency">NotchFilterFrequency</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadMeasurement.NotchFilterFrequency">
            <summary>
            Gets a setting which controls the notch filter frequency.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.SinadGeneratorType">
            <summary>
            Specifies the signal type for the SINAD measurement generator
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SinadGeneratorType.Sinad400Hz">
            <summary>
            400 Hz Sine wave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SinadGeneratorType.Sinad1Khz">
            <summary>
            1 kHz Sine wave
            </summary>
        </member>
        <member name="F:AudioPrecision.API.SinadGeneratorType.File">
            <summary>
            User selected waveform file
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISinadGenerator">
            <summary>
            Represents the generator settings for the Sinad measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadGenerator.GeneratorType">
            <summary>
            Gets the currently selected generator type.  Use the <see cref="P:AudioPrecision.API.IWaveformGenerator.Waveform">Waveform</see> property to 
            choose a new generator type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadGenerator.PrecisionTune">
            <summary>
            Turn on or off the precison tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISinadGenerator.On">
            <summary>
            Gets or sets whether the generator is currently outputting a signal.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDimLevelSweepMeasurement">
            <summary>
            Represents a stepped DIM level sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimLevelSweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimLevelSweepMeasurement.MeasurementMode">
            <summary>
            Gets or sets the measurement algorithm used to compute the DIM IMD value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDimLevelSweepMeasurement.DimRatioVsLevel">
             <summary>
             Gets the DIM Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedDimSweep.vb" region="DimRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IDimLevelSweepMeasurement.DimRatioVsMeasuredLevel">
             <summary>
             Gets the DIM Ratio vs Measured Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedDimSweep.vb" region="DimRatioVsMeasuredLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="T:AudioPrecision.API.ISteppedDimSweepGenerator">
            <summary>
            Represents a generator which produces two steady sine waves as well as DIM signals (sqare + sine).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.AmplitudeStart">
            <summary>
            Gets a setting for the sweep start amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.AmplitudeStop">
            <summary>
            Gets a setting for the sweep stop amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep in the analog output configuration
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.SineFrequency">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.SquareFrequency">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedDimSweepGenerator.Waveform">
            <summary>
            Gets or sets the type of DIM waveform.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedDimSweepGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.ISteppedDimSweepGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.ISteppedDimSweepGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISteppedDimSweepGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="T:AudioPrecision.API.ISteppedSweepMeasurement">
            <summary>
            Represents a stepped sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedSweepMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedFrequencySweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Stepped Frequency Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepSettlingParametersCollection.Phase">
            <summary>
            Gets the settling parameters for measuring phase.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase">
            <summary>
            Represents the settings and results for the Stepped Frequency Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a frequency sweep generator
            <code source="SteppedFreqSweep.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.SweepSignal">
            <summary>
            Gets or sets the type of signal to use when the sweep tones are not generated by 
            the APx internal generator (i.e. waveform files or externally generated signals)
            This choice allows the analyzer to better understand the signal so it can make
            more accurate measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.SweepSignalNames">
            <summary>
            Gets the list of sweep signals that have been defined for this measurment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.SweepSignalDefinition">
            <summary>
            Gets the settings for the currently selected <see cref="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.SweepSignal">SweepSignal</see>.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.LoadSweepSignalFile(System.String,System.Boolean)">
            <summary>
            Loads a file which represents a sweep signal from a specified file on disk.  
            Sweep signal files can be descriptive files in .CSV or .XLS format.
            </summary>
            <param name="fileName">File name to load sweep signal from</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a signal definition file attached
            to the project with this signal definition file.</param>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurementBase.TrackChannel">
            <summary>
            Gets or sets which channel is used for primary analysis of sweep tones when the output connector
            is set to None (External) or when the generator is playing a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedFrequencySweepMeasurement">
            <summary>
            Represents the settings and results for the Stepped Frequency Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.ThdNRatio">
             <summary>
             Gets the THD+N Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.ThdNLevel">
             <summary>
             Gets the THD+N Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Deviation">
            <summary>
            Gets the Deviation result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting settled meter readings from a batch measurement.
            <code source="SteppedFreqSweep.vb" region="Deviation" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.RelativeLevel">
             <summary>
             Gets the Relative Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="RelativeLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Phase">
             <summary>
             Gets the Phase result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Phase" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.ThdRatio">
             <summary>
             Gets the THD Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.ThdLevel">
             <summary>
             Gets the THD Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedFreqSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.DistortionProductLevel">
             <summary>
             Gets the Harmonic Level settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.DistortionProductRatio">
             <summary>
             Gets the Harmonic Ratio settings and results.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="ContinuousSweep.vb" region="DistortionProductLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Sinad">
            <summary>
            Gets the SINAD X,Y result settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepMeasurement.PhaseReferenceChannel">
            <summary>
            Gets or sets the reference channel used to measure phase.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISweepParameters">
            <summary>
            Represents the settings which control the exection of a stepped sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISweepParameters.NumberOfPoints">
            <summary>
            Gets or sets the number of points in the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISweepParameters.StepType">
            <summary>
            Gets or sets the step type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISweepParameters.StepSize">
            <summary>
            Gets a setting for the sweep step size.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISweepParameters.SweepPoints">
            <summary>
            Gets or sets the sweep points.  Sweep points must be sequential.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISweepParameters.ExportSweepPoints(System.String)">
            <summary>
            Saves the sweep points to a file.
            </summary>
            <param name="fileName">The name of the file to save to</param>
        </member>
        <member name="M:AudioPrecision.API.ISweepParameters.ImportSweepPoints(System.String)">
            <summary>
            Loads sweep points from a file.
            </summary>
            <param name="fileName">The name of the file to load</param>
        </member>
        <member name="T:AudioPrecision.API.ISteppedFrequencySweepDefinition">
            <summary>
            Represents the settings for a stepped frequency sweep definition
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.Name">
            <summary>
            Gets the name of the signal definition.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.NumberOfPoints">
            <summary>
            Gets the number of points in the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.StepType">
            <summary>
            Gets the step type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.StepSize">
            <summary>
            When the <see cref="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.StepType">StepType</see> property is Linear, this value indicates the step size in Hz.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.SweepPoints">
            <summary>
            Gets the sweep points.  Sweep points must be sequential.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.SweepPointDurations">
            <summary>
            Gets the duration for each point in the sweep.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.IncludePilotTone">
            <summary>
            Gets whether or not the sweep includes a pilot tone before the sweep steps.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.PilotToneFrequency">
            <summary>
            Gets the frequency of the pilot tone when the <see cref="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.IncludePilotTone">IncluePilotTone</see> propery is set to True.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.PilotToneDuration">
            <summary>
            Gets the duration of the pilot tone in seconds when the <see cref="P:AudioPrecision.API.ISteppedFrequencySweepDefinition.IncludePilotTone">IncluePilotTone</see> propery is set to True.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedFrequencySweepDefinition.Export(System.String)">
            <summary>
            Exports the signal definition to an Excel (.xls) or CSV Text (.csv) file, depending on the file extension.
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:AudioPrecision.API.ISteppedFrequencySweepDefinition.ExportWav(System.String,System.Double,AudioPrecision.API.WavExportBitDepth)">
            <summary>
            Exports the signal definition to a .WAV file.  If the signal is a waveform file already, this function throws an exception.
            </summary>
            <param name="fileName">The file name</param>
            <param name="sampleRate">The sample rate of the WAV file</param>
            <param name="bitDepth">The desired bit depth</param>
        </member>
        <member name="T:AudioPrecision.API.ISteppedFrequencySweepGenerator">
            <summary>
            Represents the generator settings for the Stepped Frequency Sweep measurement
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.EQSettings">
            <summary>
            Gets the settings for the EQ table.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.StartFrequency">
            <summary>
            Gets the setting for the start frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.StopFrequency">
            <summary>
            Gets the setting for the end frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.SweepSignal">
            <summary>
            Gets or sets the type of signal to use when the sweep tones are not generated by 
            the APx internal generator (i.e. waveform files or externally generated signals)
            This choice allows the analyzer to better understand the signal so it can make
            more accurate measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.SweepSignalNames">
            <summary>
            Gets the list of sweep signals that have been defined for this measurment.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.SweepSignalDefinition">
            <summary>
            Gets the settings for the currently selected <see cref="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.SweepSignal">SweepSignal</see>.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedFrequencySweepGenerator.LoadSweepSignalFile(System.String,System.Boolean)">
            <summary>
            Loads a file which represents a sweep signal from a specified file on disk.  
            Sweep signal files can be descriptive files in .CSV or .XLS format.
            </summary>
            <param name="fileName">File name to load sweep signal from</param>
            <param name="replaceIfExists">Indicates whether the caller wants to replace a signal definition file attached
            to the project with this signal definition file.</param>
        </member>
        <member name="P:AudioPrecision.API.ISteppedFrequencySweepGenerator.Type">
            <summary>
            Gets the current setting for the generator type.  The system is either using its internal
            generator or is playing back the contents of a waveform file.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdLevelSweepMeasurement">
            <summary>
            Represents a IMD stepped level sweep
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.ImdType">
            <summary>
            Gets or sets 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.MeasurementMode">
            <summary>
            Gets or sets the measurement algorithm used to compute the IMD value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.ImdRatioVsLevel">
             <summary>
             Gets the IMD Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedImdSweep.vb" region="ImdRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.ImdRatioVsMeasuredLevel">
             <summary>
             Gets the IMD Ratio vs Measured Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedImdSweep.vb" region="ImdRatioVsMeasuredLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for the SteppedImdLevel measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdLevelSweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IIMDSteppedLevelGenerator">
            <summary>
            Represents the signal generator settings for the Stepped IMD Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.Frequency1">
            <summary>
            Gets the setting for the first sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.Frequency2">
            <summary>
            Gets the setting for the second sine wave frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.SmpteAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdLevelSweepMeasurement.ImdType">ImdType</see> is SMPTE.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.ModAmplitudeRatio">
            <summary>
            Gets or sets the ratio of the amplitude of the sine waves.
            This setting only applies when
            <see cref="P:AudioPrecision.API.IImdLevelSweepMeasurement.ImdType">ImdType</see> is MOD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.AmplitudeStart">
            <summary>
            Gets a setting for the sweep start amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.AmplitudeStop">
            <summary>
            Gets a setting for the sweep stop amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep in the analog output configuration
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IIMDSteppedLevelGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IIMDSteppedLevelGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.IIMDSteppedLevelGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.IIMDSteppedLevelGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="P:AudioPrecision.API.IIMDSteppedLevelGenerator.Split">
            <summary>
            Gets whether or not the IMD frequencies are combined in each channel, or whether they are separated onto individual
            output channels.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IImdSteppedLevelSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the IMD measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdSteppedLevelSettlingParametersCollection.ImdRatioSettlingParams">
            <summary>
            Gets the settling parameters for settling IMD.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IImdSteppedLevelSettlingParametersCollection.MeasuredLevelSettlingParams">
            <summary>
            Gets the settling parameters for settling rms level.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedLevelSweepSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the Stepped Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepSettlingParametersCollection.Level">
            <summary>
            Gets the settling parameters for measuring level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepSettlingParametersCollection.RmsLevelAcPlusDc">
            <summary>
            Gets the settling parameters for measuring RMS Level (AC+DC).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedLevelSweepGenerator">
            <summary>
            Represents the generator settings for the Stepped Level Sweep measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.AnalogSineMode">
            <summary>
            Gets or sets the sine generator mode on APx instruments which support a hardware generated signal.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.PrecisionTune">
            <summary>
            Turn on or off the precision tune mode while in high performance sine generation.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.AmplitudeStart">
            <summary>
            Gets a setting for the sweep start amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.AmplitudeStop">
            <summary>
            Gets a setting for the sweep stop amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.Offset">
            <summary>
            Gets a setting for the sweep offset amplitude.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.Frequency">
            <summary>
            Gets a setting for the generator frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.SweepParameters">
            <summary>
            Gets the settings for the sweep in the analog output configuration
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISteppedLevelSweepGenerator.SetChannelEnabled(AudioPrecision.API.OutputChannelIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.ISteppedLevelSweepGenerator.SetChannelEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <param name="enabled">True if the channel should output a signal.</param>
        </member>
        <member name="M:AudioPrecision.API.ISteppedLevelSweepGenerator.GetChannelEnabled(AudioPrecision.API.OutputChannelIndex)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="M:AudioPrecision.API.ISteppedLevelSweepGenerator.GetChannelEnabled(System.Int32)">
            <summary>
            Gets whether or not the specified generator channel will output a signal.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the generator is configured to output a signal on the specified channel.</returns>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepGenerator.Type">
            <summary>
            Gets the current generator type.  
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISteppedLevelSweepMeasurement">
            <summary>
            Represents the settings and results for the Stepped Level Sweep measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Generator">
            <summary>
            Gets the generator for this measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdRatio">
            <summary>
            Gets the THD Ratio result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdLevel">
            <summary>
            Gets the THD Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdNRatio">
             <summary>
             Gets the THD+N Ratio result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdNLevel">
             <summary>
             Gets the THD+N Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Level">
             <summary>
             Gets the Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Level" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.RmsLevelAcPlusDc">
            <summary>
            Gets the Rms Level (AC+DC) result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Gain">
             <summary>
             Gets the Gain result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Gain" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Linearity">
             <summary>
             Gets teh Linearity result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="Linearity" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdRatioVsMeasuredLevel">
            <summary>
            Gets the THD Ratio vs Measured Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdLevelVsMeasuredLevel">
            <summary>
            Gets the THD Level vs Measured Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdNRatioVsMeasuredLevel">
             <summary>
             Gets the THD+N Ratio vs Measured Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNRatioVsMeasuredLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.ThdNLevelVsMeasuredLevel">
             <summary>
             Gets the THD+N Level vs Measured Level result.
             X,Y readings and graph settings are accessed via this property.
             </summary>
             <example>
             This example shows how to read the X,Y values from a graph and check to see if the data
             passed limit checks
             <code source="SteppedLevelSweep.vb" region="ThdNLevelVsMeasuredLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.DistortionProductRatio">
            <summary>
            Gets the Distortion Product Ratio result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.DistortionProductLevel">
            <summary>
            Gets the Distortion Product Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.PeakLevel">
            <summary>
            Gets the Peak Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.AvergeJitterLevel">
            <summary>
            Gets the Average Jitter Level result.
            X,Y readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Sinad">
            <summary>
            Gets the SINAD X,Y result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.SinadVsMeasuredLevel">
            <summary>
            Gets the SINAD vs Measured Level X,Y result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.FilterTuningMode">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.NotchTuningMode">NotchTuningMode</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.FixedTuningFrequency">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.NotchFilterFrequency">NotchFilterFrequency</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.NotchTuningMode">
            <summary>
            Gets or sets the notch filter tuning behavior.
            The filter can be set to follow the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISteppedLevelSweepMeasurement.NotchFilterFrequency">
            <summary>
            Gets or sets the center frequency for the notch filter.
            This value is used only when the FilterTuningModes is set to Fixed.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ILinearityXYGraph">
            <summary>
            Represents the results for a linearity measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILinearityXYGraph.RelativeLevel">
            <summary>
            Gets the Relative Level setting for linearity measurements.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILinearityXYGraph.DataMode">
            <summary>
            Gets or sets how the data is displayed.  The data can be Normalized to a reference value, or automatically
            centered within the supplied limits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILinearityXYGraph.MinLimit">
            <summary>
            Gets a setting to determine the lower bounds of the data used for the AutoCenter algorithm.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ILinearityXYGraph.MaxLimit">
            <summary>
            Gets a setting to determine the upper bounds of the data used for the AutoCenter algorithm.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITedsDataMeasurement">
            <summary>
            Represents the collection of settings for the TEDS Measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITedsDataMeasurement.TedsSource">
            <summary>
            Set or get the channel to read TEDS from.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITedsDataMeasurement.TedsTabularData">
            <summary>
            Read the TEDS data as tabular results.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITedsTabularResult">
            <summary>
            Represents the collection of settings for the TEDS Measurement results.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITedsTabularResult.GetProperties">
            <summary>
            Get the list of properties from the tabular results
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ITedsTabularResult.GetValue(System.String)">
            <summary>
            Get a value based on the given property.
            </summary>
            <param name="property">Specified property</param>
            <returns>The value of the given property</returns>
        </member>
        <member name="M:AudioPrecision.API.ITedsTabularResult.GetValue(System.Int32)">
            <summary>
            Get a value based on the index into the tabular data.
            </summary>
            <param name="index">Specified index</param>
            <returns>The value at the given index</returns>
        </member>
        <member name="T:AudioPrecision.API.IThdNSettlingParametersCollection">
            <summary>
            Represents the collection of settling parameters for the THD+N measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNSettlingParametersCollection.ThdN">
            <summary>
            Gets the settling parameters for measuring THD+N.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IThdNMeasurement">
            <summary>
            Represents the settings and the results for the THD+N measurement.
            
            Generator settings can be modified via the Generator property.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            Example:  APx.LevelAndGain.Level
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.AnalogInputRanges">
            <summary>
            Gets the analog input range settings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.Generator">
            <summary>
            Gets the sine wave generator for this measurement.
            </summary>
            <example>
            This example demonstrates configuring a sine wave generator
            <code source="ThdN.vb" region="Generator" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.NoiseWeightingEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> instead.
            When <see cref="P:AudioPrecision.API.INoiseWeightingMeasurement.NoiseWeighting">NoiseWeighting</see> is 
            <see cref="F:AudioPrecision.API.WeightingFilterType.SignalPath">WeightingFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.LowpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.ILowpassFilterMeasurement.LowpassFilterType">LowpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementLowpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.HighpassFilterFrequencyEnabled">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> instead.
            When <see cref="P:AudioPrecision.API.IHighpassFilterMeasurement.HighpassFilterType">HighpassFilterType</see> is 
            <see cref="F:AudioPrecision.API.MeasurementHighpassFilterType.SignalPath">MeasurementFilterType.SignalPath</see>, the filter
            settings from Signal Path Setup are used.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.ThdNRatio">
            <summary>
            Gets the THD+N Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="ThdN.vb" region="ThdNRatio" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.ThdNLevel">
            <summary>
            Gets the THD+N Level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
            <example>
            This is an example for getting the current meter readings.
            <code source="ThdN.vb" region="ThdNLevel" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.ThdRatio">
            <summary>
            Gets the THD Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.ThdLevel">
            <summary>
            Gets the THD Level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.NoiseRatio">
            <summary>
            Gets the Noise Ratio meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.NoiseLevel">
            <summary>
            Gets the Noise Level meter result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.DistortionProductLevel">
            <summary>
            Gets the Distortion Product Level result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.DistortionProductRatio">
            <summary>
            Gets the Distortion Product Ratio result.
            Meter readings and graph settings are accessed via this property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.Settling">
            <summary>
            Gets the collection of settling parameters.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.FilterTuningMode">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IThdNMeasurement.NotchTuningMode">NotchTuningMode</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.FixedTuningFrequency">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IThdNMeasurement.NotchFilterFrequency">NotchFilterFrequency</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.NotchTuningMode">
            <summary>
            Gets or sets the notch filter tuning behavior.
            The filter can be set to follow the generator frequency, the measured frequency, or a fixed frequency.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IThdNMeasurement.NotchFilterFrequency">
            <summary>
            Gets or sets the center frequency for the notch filter.
            This value is used only when the FilterTuningModes is set to Fixed.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IThdNGenerator">
            <summary>
            Represents the generator settings for the THD+N measurement
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYImportData">
            <summary>
            Represents a collection of data to be imported into an XY graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYImportData.XUnit">
            <summary>
            Gets the unit for the X-axis values.  
            This value is configured when the data import object is created.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYImportData.YUnit">
            <summary>
            Ges the unit for the Y-axis values
            This value is configured when the data import object is created.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYImportData.ChannelCount">
            <summary>
            Gets the number of channels in the data set.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.SetChannelData(AudioPrecision.API.InputChannelIndex,System.Double[],System.Double[])">
            <summary>
            Sets the x,y data for the specified channel.  The arrays for the x and y values must be non-null 
            and must have the same length.  The values are specified in the <see cref="P:AudioPrecision.API.IXYImportData.XUnit">XUnit</see> and 
            <see cref="P:AudioPrecision.API.IXYImportData.YUnit">YUnit</see> properties.
            </summary>
            <param name="ch">The channel</param>
            <param name="xValues">Array of x-axis values</param>
            <param name="yValues">Array of y-axis values</param>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.SetChannelData(System.Int32,System.Double[],System.Double[])">
            <summary>
            Sets the x,y data for the specified channel.  The arrays for the x and y values must be non-null 
            and must have the same length.  The values are specified in the <see cref="P:AudioPrecision.API.IXYImportData.XUnit">XUnit</see> and 
            <see cref="P:AudioPrecision.API.IXYImportData.YUnit">YUnit</see> properties.
            </summary>
            <param name="ch">The channel</param>
            <param name="xValues">Array of x-axis values</param>
            <param name="yValues">Array of y-axis values</param>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.GetXValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the x-axis values in the unit specified by the <see cref="P:AudioPrecision.API.IXYImportData.XUnit">XUnit</see> property.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.GetXValues(System.Int32)">
            <summary>
            Gets the x-axis values in the unit specified by the <see cref="P:AudioPrecision.API.IXYImportData.XUnit">XUnit</see> property.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.GetYValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the y-axis values in the unit specified by the <see cref="P:AudioPrecision.API.IXYImportData.YUnit">YUnit</see> property.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYImportData.GetYValues(System.Int32)">
            <summary>
            Gets the y-axis values in the unit specified by the <see cref="P:AudioPrecision.API.IXYImportData.YUnit">YUnit</see> property.
            </summary>
            <param name="ch">The channel</param>
            <returns>An array of values</returns>
        </member>
        <member name="T:AudioPrecision.API.IVddRampMeasurement">
            <summary>
            Represents the settings and the results for the Vdd Ramp measurement.
            
            This measurement requires a PDM module.
            
            Results can be examined, and result measurement parameters can be configured
            by accessing the property with the same name as the name of the result.  See the 
            Measurement Navigator or the Measurement Selector in the APx500 user interface 
            for the name of the result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVddRampMeasurement.StartLevel">
            <summary>
            Gets or sets the starting Vdd level of the ramp signal in volts.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVddRampMeasurement.StopLevel">
            <summary>
            Gets or sets the ending Vdd level of the ramp signal in volts.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVddRampMeasurement.RampTime">
            <summary>
            Gets or sets the duration in seconds from the generator emitting the starting level 
            and the ending level.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVddRampMeasurement.ExtraAcquisitionTime">
            <summary>
            Gets or sets any additional time in seconds to leave the generator on at the ending level.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVddRampMeasurement.Acquisition">
            <summary>
            Gets the XY graph for the acquisition.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ApiResourceService">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ApiResourceService.GetString(System.Enum,System.Object[])">
            <summary>
              Get a string and apply formatting.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDerivedResult">
            <summary>
            Represents the settings for a result who's result values are computed from the output of another result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDerivedResult.Source">
            <summary>
            Gets the graph which provides the input data to this computed result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.OffsetResultType">
            <summary>
            Represents the operation mode for an Offset derived result.  Some results, depending on their units, are
            scaled (multiplication), while others are offset (addition).
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OffsetResultType.Scale">
            <summary>
            Indicates the input values are scaled (multiplied)
            </summary>
        </member>
        <member name="F:AudioPrecision.API.OffsetResultType.Offset">
            <summary>
            Indicates the input values are offset (added)
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IOffsetMeterResult">
            <summary>
            Represents a derived meter result in which the input meter readings are either scaled or offset by a specified amount.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOffsetMeterResult.Offset">
            <summary>
            Gets a setting for the offset or scaling factor for the input data
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOffsetMeterResult.OffsetType">
            <summary>
            Gets whether the output data is offset (addition) or scaled (multiplication).
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareMeterResult">
            <summary>
            Represents a derived meter result in which the input values are compared to either a constant or a reference value from
            the source result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareMeterResult.ReferenceType">
            <summary>
            Gets or sets the comparison type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareMeterResult.ComparisonValue">
            <summary>
            When <see cref="P:AudioPrecision.API.ICompareMeterResult.ReferenceType">ReferenceType</see> is "Constant", this setting represents the comparison value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDerivedDataTrace">
            <summary>
            Represents the settings for a single trace or bar in a derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDerivedDataTrace.Name">
            <summary>
            Gets or sets the name of the trace.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDerivedDataTrace.Delete">
            <summary>
            Delete the derived result trace specification from the result.  If there is only one trace
            in the collection, this command throws an exception.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeterDataFromXyTrace">
            <summary>
            Represents the trace settings for a single bar in a result derived from an X,Y graph which produces a meter result. 
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterDataFromXyTrace.AllChannels">
            <summary>
            Gets or sets whether the computed data is derived from all channels, or a specified subset of channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterDataFromXyTrace.SelectChannel(AudioPrecision.API.InputChannelIndex,System.Boolean)">
            <summary>
            Sets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <param name="selected">True if the channel should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterDataFromXyTrace.SelectChannel(System.Int32,System.Boolean)">
            <summary>
            Sets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <param name="selected">True if the channel should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterDataFromXyTrace.IsChannelSelected(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterDataFromXyTrace.IsChannelSelected(System.Int32)">
            <summary>
            Gets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsMeterDataTrace">
            <summary>
            Represents the trace settings for a single bar in a derived Min/Max/Statistics Single Value meter result. 
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeterDataFromXyTraceCollection">
            <summary>
            Represents the collection of traces for a meter result which is derived from X,Y data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterDataFromXyTraceCollection.Count">
            <summary>
            Gets the number of traces in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterDataFromXyTraceCollection.Item(System.Int32)">
            <summary>
            Gets the specified trace.
            </summary>
            <param name="index">Index of the trace</param>
            <returns>The requested trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterDataFromXyTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsMeterDataTraceCollection">
            <summary>
            Represents the collection of traces for a Min/Max/Statistics Single Value derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterDataTraceCollection.Count">
            <summary>
            Gets the number of traces in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the specified trace.
            </summary>
            <param name="index">Index of the trace</param>
            <returns>The requested trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IStatisticsMeterDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsMeterFromMeterResult">
            <summary>
            Represents the settings for a derived result which can calculate the Minimum, Maximum, or other statistical 
            mathematical values from the source input data, where the source input is also a meter result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromMeterResult.Function">
            <summary>
            Gets or sets the mathematical function.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromMeterResult.Traces">
            <summary>
            Gets the set of bars in this derived result.  
            There is one bar per meter reading in a meter derived result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsMeterFromXYResult">
            <summary>
            Represents the settings for a derived result which can calculate the Minimum, Maximum, or other statistical 
            mathematical values from the source input data, where the source input is an XY graph result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromXYResult.Function">
            <summary>
            Gets or sets the mathematical function.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromXYResult.DataSetType">
            <summary>
            Gets or sets whether the computation operates on the most recent data set in the XY source result, 
            or whether the computation operates on a specific acquisition or imported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromXYResult.SourceDataSet">
            <summary>
            Gets or sets the 1-based index into the data set selection of the source result when 
            the <see cref="P:AudioPrecision.API.IStatisticsMeterFromXYResult.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromXYResult.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings">
            <summary>
            Represents the data selection properties for derived result meters where the source resuls is
            Level and Distortion (Acoustic Response).
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.DataSelection">
            <summary>
            Gets whether the result plots the data from all channels for a specific harmonic value, or 
            all harmonics for a specific channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.Channel">
            <summary>
            Gets which channel to plot when the <see cref="P:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.DataSelection">DataSelection</see> property is 
            <see cref="F:AudioPrecision.API.LevelAndDistortionDataSelection.AllTracesOneChannel">LevelAndDistortionDataSelection.AllTracesOneChannel</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.HarmonicIndex">
            <summary>
            Gets which harmonic data to plot when the <see cref="P:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.DataSelection">DataSelection</see> property is 
            <see cref="F:AudioPrecision.API.LevelAndDistortionDataSelection.AllChannelsOneTrace">LevelAndDistortionDataSelection.AllChannelsOneTrace</see>.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.SelectAllChannelsOneTrace(AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Selects all channels for the specified harmonic index.
            </summary>
            <param name="harmonicIndex">Harmonic index to select from</param>
        </member>
        <member name="M:AudioPrecision.API.IDerivedMeterFromLevelAndDistortionSettings.SelectAllTracesOneChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Selects all harmonics for the specified channel.
            </summary>
            <param name="channelIndex">Channel index to select from</param>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult">
            <summary>
            Represents the settings for a derived result which can calculate the Minimum, Maximum, or other statistical 
            mathematical values from the source input data, where the source input is a Level and Distortion (Acoustic Response) graph result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult.Function">
            <summary>
            Gets or sets the mathematical function.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult.DataSetType">
            <summary>
            Gets or sets whether the computation operates on the most recent data set in the XY source result, 
            or whether the computation operates on a specific acquisition or imported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult.SourceDataSet">
            <summary>
            Gets or sets the 1-based index into the data set selection of the source result when 
            the <see cref="P:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsMeterFromLevelAndDistortionResult.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.INormalizeInvertResult">
            <summary>
            Represents the settings for a Normalize/Invert derived XY graph result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INormalizeInvertResult.Mode">
            <summary>
            Gets or sets whether the source data is inverted or normalized to a specific reference value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.INormalizeInvertResult.Reference">
            <summary>
            Gets the reference value setting.  This settings is only applicable when the <see cref="P:AudioPrecision.API.INormalizeInvertResult.Mode">Mode</see> setting is "Normalize".
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IOffsetXYResult">
            <summary>
            Represents the settings for an Offset derived XY graph result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOffsetXYResult.Offset">
            <summary>
            Gets a setting for the offset or scaling factor for the input data
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IOffsetXYResult.OffsetType">
            <summary>
            Gets whether the output data is offset (addition) or scaled (multiplication).
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISpecifyDataPointsResult">
            <summary>
            Represents the settings for a Specify Data Points derived XY result which allows the user to take a large input
            data set, and reduce it to a known set of values relative to specified data points on the X-axis of the source data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifyDataPointsResult.NumberOfPoints">
            <summary>
            Gets or sets the desired number of data points for the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifyDataPointsResult.StepType">
            <summary>
            Gets or sets the step type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifyDataPointsResult.StepSize">
            <summary>
            Gets a setting for the step size.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifyDataPointsResult.DataPoints">
            <summary>
            Gets or sets the data points.  Data points must be sequential.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ISpecifyDataPointsResult.Export(System.String)">
            <summary>
            Saves the data points to a file.
            </summary>
            <param name="fileName">The name of the file to save to</param>
        </member>
        <member name="M:AudioPrecision.API.ISpecifyDataPointsResult.Import(System.String)">
            <summary>
            Loads data points from a file.
            </summary>
            <param name="fileName">The name of the file to load</param>
        </member>
        <member name="M:AudioPrecision.API.ISpecifyDataPointsResult.ConfigureDataPoints(System.Double,System.Double,System.Int32,System.Boolean)">
            <summary>
            Updates the <see cref="P:AudioPrecision.API.ISpecifyDataPointsResult.DataPoints"/> property with a table computed from the specified values. 
            </summary>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <param name="numPoints">Number of points</param>
            <param name="isLog">True for Log, False for Linear</param>
        </member>
        <member name="T:AudioPrecision.API.ISpecifySingleDataPointResult">
            <summary>
            Represents the settings for a Specify Single Data Point derived meter result which allows the user to take a large input
            data set, and extract the data value at a specific X-axis point.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifySingleDataPointResult.XValue">
            <summary>
            Gets or sets the X-Axis value where the desired reading will be extracted.  If an exact match
            is not found, the data will be interpolated using nearby values.  If the specifed value is out
            of range of the source data, the reading value will be Double.NaN.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifySingleDataPointResult.DataSetType">
            <summary>
            Gets or sets whether the computation operates on the most recent data set in the XY source result, 
            or whether the computation operates on a specific acquisition or imported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifySingleDataPointResult.SourceDataSet">
            <summary>
            Gets or sets the 1-based index into the data set selection of the source result when 
            the <see cref="P:AudioPrecision.API.ISpecifySingleDataPointResult.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifySingleDataPointResult.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISpecifySingleDataPointFromLevelAndDistortionResult">
            <summary>
            Represents the settings for a Specify Single Data Point derived meter result which is derived from a Level and Distortion (Acoustic Response) result.
            This result allows the user to take a large input data set, and extract the data value at a specific X-axis point.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISpecifySingleDataPointFromLevelAndDistortionResult.XValue">
            <summary>
            Gets or sets the X-Axis value where the desired reading will be extracted.  If an exact match
            is not found, the data will be interpolated using nearby values.  If the specifed value is out
            of range of the source data, the reading value will be Double.NaN.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ISmoothResult">
            <summary>
            Represents the settings for a Smooth derived XY graph result.  This derived result is available
            for XY results which have a frequency X-axis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISmoothResult.OctaveSmoothing">
            <summary>
            Gets or sets the smoothing parameter
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITimeDomainSmoothResult">
            <summary>
            Represents the settings for a Smooth derived XY graph result.  This derived result is available
            for XY results which have a time X-axis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainSmoothResult.TimeDomainSmoothing">
            <summary>
            Gets or sets the degree of smoothing for time-based measurements.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareXYDataElement">
            <summary>
            Represents the settings for one part of a comparison operation for a Compare XY derived result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataElement.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataElement.DataSetType">
            <summary>
            Gets or sets the data set selection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataElement.SourceDataSet">
            <summary>
            Gets or sets the data set when the <see cref="P:AudioPrecision.API.ICompareXYDataElement.DataSetType">DataSetType</see> parameter is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataElement.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareXYDataTrace">
            <summary>
            Represents the two halves of a comparison for a Compare XY derived result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataTrace.Reference">
            <summary>
            Gets the settings for the reference values of the comparison.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataTrace.CompareTo">
            <summary>
            Gets the settings for the values to compare to the reference values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareXYDataTraceCollection">
            <summary>
            Represents the set of data traces in a Compare XY derived result.  
            Each data trace has a reference and comparison specification.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataTraceCollection.Count">
            <summary>
            Get the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the settings for the specified comparison data trace.
            </summary>
            <param name="index">The index of the requested item</param>
            <returns>The settings at the requested index</returns>
        </member>
        <member name="M:AudioPrecision.API.ICompareXYDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.ICompareXYResult">
            <summary>
            Represents the settings for a Compare XY derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareXYResult.Traces">
            <summary>
            Gets the collection of data traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareLevelAndDistortionDataElement">
            <summary>
            Represents the settings for one part of a comparison operation for a Compare XY derived result when the source
            results is a Level and Distortion result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.DataSetType">
            <summary>
            Gets or sets the data set selection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.SourceDataSet">
            <summary>
            Gets or sets the data set when the <see cref="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.DataSetType">DataSetType</see> parameter is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataElement.HarmonicIndex">
            <summary>
            Gets or sets which harmonic data to operate upon.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareLevelAndDistortionDataTrace">
            <summary>
            Represents the two halves of a comparison for a Compare XY derived result when the source result is a
            Level and Distortion result
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataTrace.Reference">
            <summary>
            Gets the settings for the reference values of the comparison.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataTrace.CompareTo">
            <summary>
            Gets the settings for the values to compare to the reference values.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICompareLevelAndDistortionDataTraceCollection">
            <summary>
            Represents the set of data traces in a Compare XY derived result when the source result is a 
            Level and Distortion result.
            Each data trace has a reference and comparison specification.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataTraceCollection.Count">
            <summary>
            Get the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the settings for the specified comparison data trace.
            </summary>
            <param name="index">The index of the requested item</param>
            <returns>The settings at the requested index</returns>
        </member>
        <member name="M:AudioPrecision.API.ICompareLevelAndDistortionDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.ICompareLevelAndDistortionResult">
            <summary>
            Represents the settings for a Compare XY derived result when the source result is a Level and Distortion result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICompareLevelAndDistortionResult.Traces">
            <summary>
            Gets the collection of data traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYDataTrace">
            <summary>
            Represents the data values for a single result specification.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTrace.DataSetType">
            <summary>
            Gets or sets the selection of data from the source result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTrace.SourceDataSet">
            <summary>
            Gets or sets the data set when the <see cref="P:AudioPrecision.API.IXYDataTrace.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTrace.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTrace.AllChannels">
            <summary>
            Gets or sets whether the computation is performed on all channels or a specified subset of channels
            from the input source data.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDataTrace.SelectChannel(AudioPrecision.API.InputChannelIndex,System.Boolean)">
            <summary>
            Sets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <param name="selected">True if the channel should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDataTrace.SelectChannel(System.Int32,System.Boolean)">
            <summary>
            Sets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <param name="selected">True if the channel should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDataTrace.IsChannelSelected(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDataTrace.IsChannelSelected(System.Int32)">
            <summary>
            Gets whether a specified channel is included in the derived result computation.
            </summary>
            <param name="ch">The channel</param>
            <returns>True if the channel is included</returns>
        </member>
        <member name="T:AudioPrecision.API.IXYDataTraceCollection">
            <summary>
            Represents the collection of traces for a derived XY graph result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTraceCollection.Count">
            <summary>
            Gets the number of traces in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the specified trace.
            </summary>
            <param name="index">Index of the trace</param>
            <returns>The requested trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsXYResult">
            <summary>
            Represents the settings for a derived result which can calculate the Minimum, Maximum, or other statistical 
            mathematical values from the source input data, where the source input is an XY result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsXYResult.Function">
            <summary>
            Gets or sets the mathematical function.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsXYResult.Traces">
            <summary>
            Gets the collection of data traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYLevelAndDistortionDataTrace">
            <summary>
            Represents the data values for a single result specification, when the source result is a Level and Distortion result
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYLevelAndDistortionDataTrace.SelectHarmonic(AudioPrecision.API.DistortionHarmonicIndex,System.Boolean)">
            <summary>
            Sets whether data for a specified harmonic is included in the derived result computation.
            </summary>
            <param name="harmIndex">The harmonic index</param>
            <param name="selected">True if the harmonic data should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IXYLevelAndDistortionDataTrace.SelectHarmonic(System.Int32,System.Boolean)">
            <summary>
            Sets whether data for a specified harmonic is included in the derived result computation.
            </summary>
            <param name="harmIndex">The harmonic index</param>
            <param name="selected">True if the harmonic data should be included, otherwise false</param>
        </member>
        <member name="M:AudioPrecision.API.IXYLevelAndDistortionDataTrace.IsHarmonicSelected(AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether or not the data for the specified harmonic index is included in the derived result computation.
            </summary>
            <param name="harmIndex">The harmonic index</param>
            <returns>True if selected</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYLevelAndDistortionDataTrace.IsHarmonicSelected(System.Int32)">
            <summary>
            Gets whether or not the data for the specified harmonic index is included in the derived result computation.
            </summary>
            <param name="harmIndex">The harmonic index</param>
            <returns>True if selected</returns>
        </member>
        <member name="T:AudioPrecision.API.IXYLevelAndDistortionDataTraceCollection">
            <summary>
            Represents the collection of traces for a derived XY graph result when the source result
            is a Level and Distortion result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYLevelAndDistortionDataTraceCollection.Count">
            <summary>
            Gets the number of traces in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYLevelAndDistortionDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the specified trace.
            </summary>
            <param name="index">Index of the trace</param>
            <returns>The requested trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYLevelAndDistortionDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.IStatisticsXYLevelAndDistortionResult">
            <summary>
            Represents the settings for a derived result which can calculate the Minimum, Maximum, or other statistical 
            mathematical values from the source input data, where the source input is a Level and Distortion XY result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsXYLevelAndDistortionResult.Function">
            <summary>
            Gets or sets the mathematical function.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IStatisticsXYLevelAndDistortionResult.Traces">
            <summary>
            Gets the collection of data traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IHarmonicSumMeter">
            <summary>
            Represents the settings for a Harmonic Sum Ratio or Harmonic Sum Level derived meter result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicSumMeter.AllHarmonics">
            <summary>
            Gets or sets whether all harmonic products or only specific harmonics are summed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IHarmonicSumMeter.GetHarmonicSelected(AudioPrecision.API.DiscreteHarmonicIndex)">
            <summary>
            Gets whether or not the specified harmonic is included in the summation.
            </summary>
            <param name="harmonicIndex">The harmonic</param>
            <returns>True if selected, otherwise False</returns>
        </member>
        <member name="M:AudioPrecision.API.IHarmonicSumMeter.SetHarmonicSelected(AudioPrecision.API.DiscreteHarmonicIndex,System.Boolean)">
            <summary>
            Sets whether or not the specified harmonic is included in the summation.
            </summary>
            <param name="harmonicIndex">The harmonic</param>
            <param name="selected">True if the harmonic should be in the summation, otherwise False</param>
        </member>
        <member name="T:AudioPrecision.API.IDataDistributionResult">
            <summary>
            Represents the settings for a Data Distribution derived result.  This result is derived from an XY Graph and 
            provides a meter reading of Mean value and Deviation value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDataDistributionResult.GetDeviation">
            <summary>
            Gets the deviation value for each channel.
            </summary>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IDataDistributionResult.GetDeviation(System.String)">
            <summary>
            Gets the deviation value for each channel in the requested unit.
            </summary>
            <param name="unit">Unit</param>
            <returns>An array of Double values</returns>
        </member>
        <member name="M:AudioPrecision.API.IDataDistributionResult.GetDeviationText">
            <summary>
            Gets the deviation value as formatted text for each channel.
            </summary>
            <returns>An Array of formatted text values</returns>
        </member>
        <member name="M:AudioPrecision.API.IDataDistributionResult.GetDeviationText(System.String)">
            <summary>
            Gets the deviation value as formatted text for each channel.
            </summary>
            <param name="unit">Unit</param>
            <returns>An Array of formatted text values</returns>
        </member>
        <member name="P:AudioPrecision.API.IDataDistributionResult.DistributionType">
            <summary>
            Gets or sets how the deviation values are calculated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDataDistributionResult.DataSetType">
            <summary>
            Gets or sets whether the computation operates on the most recent data set in the XY source result, 
            or whether the computation operates on a specific acquisition or imported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDataDistributionResult.SourceDataSet">
            <summary>
            Gets or sets the 1-based index into the data set selection of the source result when 
            the <see cref="P:AudioPrecision.API.IDataDistributionResult.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDataDistributionResult.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CustomProcessingPropertyType">
            <summary>
            Describes the data type for a property provided by a custom processing plug-in
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingPropertyType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingPropertyType.Int">
            <summary>
            32-bit integer
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingPropertyType.Double">
            <summary>
            64-bit floating point
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingPropertyType.Bool">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingPropertyType.Enum">
            <summary>
            Enumerated value
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICustomProcessingProperties">
            <summary>
            Represents a set of properties provided by a plug-in.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetDouble(System.String)">
            <summary>
            Gets a double value with the specified name.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetDouble(System.String,System.Double)">
            <summary>
            Sets or creates a properties with a floating point value.
            </summary>
            <param name="name">Name of the property</param>
            <param name="val">Property value</param>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetInt(System.String)">
            <summary>
            Gets an integer value with the specified name.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetInt(System.String,System.Int32)">
            <summary>
            Sets or creates a properties with an integer value.
            </summary>
            <param name="name">Name of the property</param>
            <param name="val">Property value</param>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetBool(System.String)">
            <summary>
            Gets a boolean value with the specified name.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetBool(System.String,System.Boolean)">
            <summary>
            Sets or creates a properties with a boolean value.
            </summary>
            <param name="name">Name of the property</param>
            <param name="val">Property value</param>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetString(System.String)">
            <summary>
            Gets a string value with the specified name.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetString(System.String,System.String)">
            <summary>
            Sets or creates a properties with a string value.
            </summary>
            <param name="name">Name of the property</param>
            <param name="val">Property value</param>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetStringValues(System.String)">
            <summary>
            For a string property which has multiple pre-defined selections, this property returns the list of
            allowable values.
            </summary>
            <param name="name">Name of the property</param>
            <returns>List of available selections for the property, or an empty array if not applicable.</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetEnum(System.String)">
            <summary>
            This function is obsolete. Use <see cref="M:AudioPrecision.API.ICustomProcessingProperties.GetString(System.String)"/> instead.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetEnum(System.String,System.Enum)">
            <summary>
            This function is obsolete. Use <see cref="M:AudioPrecision.API.ICustomProcessingProperties.SetString(System.String,System.String)"/> instead.
            </summary>
            <param name="name">Name of the property</param>
            <param name="val">Property value</param>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingProperties.PropertyNames">
            <summary>
            Gets the list of all property names.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetBoolArrayValue(System.String,System.Int32)">
            <summary>
            Gets the Boolean True/False value for the specified index into the array.
            </summary>
            <param name="name">Name of the property</param>
            <param name="index">0-based index into the array</param>
            <returns>True or False</returns>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.SetBoolArrayValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the Boolean True/False value for the specified index in the array.
            </summary>
            <param name="name">Name of the property</param>
            <param name="index">0-based index into the array</param>
            <param name="val">True/False value</param>
        </member>
        <member name="M:AudioPrecision.API.ICustomProcessingProperties.GetPropertyType(System.String)">
            <summary>
            Gets the type of the specified property.
            </summary>
            <param name="name">Property name</param>
            <returns>Returns the data type</returns>
        </member>
        <member name="T:AudioPrecision.API.ICustomProcessingXyResult">
            <summary>
            Represents an X,Y graph from a custom processing plug-in
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingXyResult.Properties">
            <summary>
            Gets the properties provided by this result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.CustomProcessingSourceDataType">
            <summary>
            Describes whether a plug-in meter result is derived from a meter graph or an X,Y graph.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingSourceDataType.Meter">
            <summary>
            Derived from a meter graph
            </summary>
        </member>
        <member name="F:AudioPrecision.API.CustomProcessingSourceDataType.Xy">
            <summary>
            Derived from an X,Y graph
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICustomProcessingMeterResult">
            <summary>
            Represents a meter graph from a custom processing plug-in.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingMeterResult.Properties">
            <summary>
            Gets the properties provided by this result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICustomProcessingDerivedMeterResult">
            <summary>
            Represents a derived meter graph from a custom processing plug-in.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingDerivedMeterResult.SourceDataType">
            <summary>
            Gets what type of result this is derived from.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingDerivedMeterResult.DataSetType">
            <summary>
            Gets or sets whether the computation operates on the most recent data set in the XY source result, 
            or whether the computation operates on a specific acquisition or imported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingDerivedMeterResult.SourceDataSet">
            <summary>
            Gets or sets the 1-based index into the data set selection of the source result when 
            the <see cref="P:AudioPrecision.API.ICustomProcessingDerivedMeterResult.DataSetType">DataSetType</see> property is "Specific".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingDerivedMeterResult.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITabularResult">
            <summary>
            Represents a data table with rows and columns of string values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITabularResult.RowCount">
            <summary>
            Gets the number of rows.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITabularResult.ColumnCount">
            <summary>
            Gets the number of columns.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ITabularResult.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value at the specified row and column.
            </summary>
            <param name="row">0-based row index</param>
            <param name="col">0-based column index</param>
            <returns>The string value at the specified cell</returns>
        </member>
        <member name="M:AudioPrecision.API.ITabularResult.ExportData(System.String)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
        </member>
        <member name="T:AudioPrecision.API.ICustomProcessingTabularResult">
            <summary>
            Represents a tabular data result from a custom processing plug-in.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingTabularResult.Properties">
            <summary>
            Gets the properties provided by this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomProcessingTabularResult.SourceDataType">
            <summary>
            Gets what type of result this is derived from.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEqXyDataTrace">
            <summary>
            Represents the settings for each trace of an EQ curve derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyDataTrace.DataSetType">
            <summary>
            Gets or sets the selection of data from the source result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyDataTrace.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyDataTrace.SourceDataSet">
            <summary>
            Gets or sets the data set index, for example "Measured 1".
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyDataTrace.SourceDataSetType">
            <summary>
            Gets or sets whether the specified data set is measured or imported.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IEqXyResultDataTraceCollection">
            <summary>
            Represents the set of EQ curve traces for the EQ derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyResultDataTraceCollection.Count">
            <summary>
            Get the number of items in the collection.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyResultDataTraceCollection.Item(System.Int32)">
            <summary>
            Gets the settings for the specified comparison data trace.
            </summary>
            <param name="index">The index of the requested item</param>
            <returns>The settings at the requested index</returns>
        </member>
        <member name="M:AudioPrecision.API.IEqXyResultDataTraceCollection.Add">
            <summary>
            Adds a new result to the collection.
            </summary>
            <returns>A new derived result</returns>
        </member>
        <member name="T:AudioPrecision.API.IEqXyResult">
            <summary>
            Represents the settings for a derived result which applies an EQ curve to each specified input data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IEqXyResult.Traces">
            <summary>
            Gets the collection of data traces.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.TitleAlignment">
            <summary>
            Graph Title alignment at the top of the graph. <seealso cref="P:AudioPrecision.API.IGraphTitle.Alignment"/>
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TitleAlignment.Left">
            <summary>
            Aligns the title to the left
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TitleAlignment.Center">
            <summary>
            Aligns the title in the center
            </summary>
        </member>
        <member name="F:AudioPrecision.API.TitleAlignment.Right">
            <summary>
            Aligns the title to the right
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGraphTitle">
            <summary>
            Represents the title for the the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphTitle.Text">
            <summary>
            Gets the text for the title.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphTitle.Alignment">
            <summary>
            Gets or sets the alignment of the title.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphTitle.Visible">
            <summary>
            Gets or sets whether the title is displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphTitle.Font">
            <summary>
            Gets the font for the title.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphTitle.Auto">
            <summary>
            Gets or sets the auto setting for the result Title.
            When true the title is automatically generated.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGraphAxis">
            <summary>
            Represents the settings for the graph axis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.IsLog">
            <summary>
            Gets or sets whether the axis is scaled linear or logorithmic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.AutoScale">
            <summary>
            This property is obsolete.  Use <see cref="P:AudioPrecision.API.IGraphAxis.RangeType">RangeType</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.RangeType">
            <summary>
            Gets or sets how the graph axis adjusts its size to display the data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.Maximum">
            <summary>
            Gets or sets the maximum extent of the axis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.Minimum">
            <summary>
            Gets or sets the minimum extent of the axis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.ScrollingRange">
            <summary>
            Gets or sets the axis range when the <see cref="P:AudioPrecision.API.IGraphAxis.RangeType">RangeType</see> property is <see cref="F:AudioPrecision.API.GraphRangeType.Scrolling">Scrolling</see>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.AutoTitle">
            <summary>
            Gets or sets whether the graph title is automatically generated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.TitleVisible">
            <summary>
            Gets or sets whether or not the graph title is visible.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.Unit">
            <summary>
            Gets or sets the axis unit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphAxis.UnitList">
            <summary>
            Gets the list of available units.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGraphFont">
            <summary>
            Represents a font for the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Bold">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:AudioPrecision.API.IGraphFont"/> is bold.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Italic">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:AudioPrecision.API.IGraphFont"/> is italic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Underline">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:AudioPrecision.API.IGraphFont"/> object is underlined.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Strikeout">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:AudioPrecision.API.IGraphFont"/> specifies a horizontal line through the font
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Color">
            <summary>
            Gets or sets the color of this <see cref="T:AudioPrecision.API.IGraphFont"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.FontName">
            <summary>
            Gets or sets the face name of this <see cref="T:AudioPrecision.API.IGraphFont"/>.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Size">
            <summary>
            Gets or sets the size of this <see cref="T:AudioPrecision.API.IGraphFont"/> in points.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraphFont.Style">
            <summary>
            Gets the <see cref="T:System.Drawing.FontStyle"/> for this <see cref="T:AudioPrecision.API.IGraphFont"/>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:AudioPrecision.API.ISequenceResultGraph">
            <summary>
            Represents the settings for a measurement result in the project Navigator.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.Name">
            <summary>
            Gets or sets the name of the measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.IsValid">
            <summary>
            Gets whether or not this measurement result is available in the current I/O configuration.
            For example: some results are not available when the output connector is set to None.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.ViewType">
            <summary>
            Gets the type of this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.Checked">
            <summary>
            Gets or sets whether or not the measurement view will be included in the sequence report.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.IsSource">
            <summary>
            Gets whether the data for this result is used as the input source data for a derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ISequenceResultGraph.IsDerived">
            <summary>
            Gets whether this result is derived from another result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IGraph">
            <summary>
            Represents a measurement result. Result data and graphical settings are avialable in
            objects derived from this common base class.
            <seealso cref="T:AudioPrecision.API.IMeterGraph"/>
            <seealso cref="T:AudioPrecision.API.IXYGraph"/>
            <seealso cref="T:AudioPrecision.API.IVerticalBarGraph"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraph.Show">
            <summary>
            Makes this measurement result visible in the measurement view.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.IsVisible">
            <summary>
            Returns true if this result is currently displayed in a measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.Title">
            <summary>
            Gets the Title for the graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraph.Save(System.String,AudioPrecision.API.GraphImageType)">
            <summary>
            Saves the graph image to a file.
            </summary>
            <param name="filename">The name of the file</param>
            <param name="type">The file type of image</param>
        </member>
        <member name="M:AudioPrecision.API.IGraph.Save(System.String,AudioPrecision.API.GraphImageType,System.Int32,System.Int32)">
            <summary>
            Saves the graph image to a file.
            </summary>
            <param name="filename">The name of the file</param>
            <param name="type">The file type of image</param>
            <param name="width">Width in pixels of the image</param>
            <param name="height">Height in pixels of the image</param>
        </member>
        <member name="M:AudioPrecision.API.IGraph.SaveReport(System.String,AudioPrecision.API.ReportExportFormat)">
            <summary>
            Saves the graph report to the specified file format. This function is equivalent to exporting the result of the Print button 
            when viewing a graph.
            </summary>
            <param name="fileName">The name of the file</param>
            <param name="format">The file format of the exported file</param>
        </member>
        <member name="M:AudioPrecision.API.IGraph.CopyToClipboard">
            <summary>
            Copies the graph image to the Windows Clipboard.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.Result">
            <summary>
            Gets the base dynamic results API interface object for this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.DerivedResultTypes">
            <summary>
            Gets the set of result types which can be derived from this graph.  If no results can be derived, the
            array length is 0.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraph.AddDerivedResult(AudioPrecision.API.MeasurementResultType)">
            <summary>
            Adds a new result derived from this result.  The input to this function must be defined in the 
            set of available results.  See <see cref="P:AudioPrecision.API.IGraph.DerivedResultTypes">DerivedResultTypes</see>.
            Use the <see cref="P:AudioPrecision.API.IGraph.Result">Result</see> property to access the actual derived result settings.
            </summary>
            <param name="derivedResultType">The type of the result to derive from this result.</param>
            <returns>A new result graph</returns>
            <exception cref="T:AudioPrecision.API.APException">An exception is thrown if an invalid result type is specified.</exception>"
        </member>
        <member name="M:AudioPrecision.API.IGraph.AddDerivedResult(System.String)">
            <summary>
            Adds a new result derived from this result.  The input to this function must be defined in the 
            set of available results.  See <see cref="P:AudioPrecision.API.IGraph.DerivedResultTypeNames"/>.
            Use the <see cref="P:AudioPrecision.API.IGraph.Result"/> property to access the actual derived result settings.
            </summary>
            <param name="derivedResultTypeName">The name result type to derive from this result.</param>
            <returns>A new result graph</returns>
            <exception cref="T:AudioPrecision.API.APException">An exception is thrown if an invalid result type is specified.</exception>"
        </member>
        <member name="P:AudioPrecision.API.IGraph.DerivedResultTypeNames">
            <summary>
            Gets the set of result types which can be derived from this graph.  If no results can be derived, the
            array length is 0.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.TimeStamp">
            <summary>
            Gets the date and time the measurement was completed.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IGraph.SetZoomPanToOriginal">
            <summary>
            Sets the graph extents back to their original values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IGraph.Message">
            <summary>
            Gets any messages drawn on the graph indicating status of the result.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDynamicResultGraph">
            <summary>
            Represents an APx result.  This object describes the type of the object and provides methods for 
            casting this result as a specific result type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.ResultType">
            <summary>
            Gets the type of this measurement result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsSource">
            <summary>
            Gets whether the data for this result is used as the input source data for a derived result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsDerived">
            <summary>
            Gets whether this result is derived from another result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsBitsGraph">
            <summary>
            Gets whether this is a Bits result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsBitsGraph">
            <summary>
            Gets this result graph as an IBitsGraph object.
            </summary>
            <returns>The result as an IBitsGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsMetadataGraph">
            <summary>
            Gets whether this is a Metadata result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsMetadataGraph">
            <summary>
            Gets this result graph as an IMetadataGraph object.
            </summary>
            <returns>The result as an MetadataGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsMeterGraph">
            <summary>
            Gets whether this is a Meter result type
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsMeterGraph">
            <summary>
            Gets this result as an IMeterGraph object.
            </summary>
            <returns>The result as an IMeterGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsVerticalBarGraph">
            <summary>
            Gets whether this is a vertical bar graph result type, i.e. Distortion Product Level.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsVerticalBarGraph">
            <summary>
            Gets this result graph as an IVerticalBarGraph object
            </summary>
            <returns>The result as an IVerticalBarGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsXYGraph">
            <summary>
            Gets whether this is a XY result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsXYGraph">
            <summary>
            Gets this result graph as an IXYGraph object.
            </summary>
            <returns>The result as an IXYGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsOffsetMeterResult">
            <summary>
            Gets whether this is an Offset meter derived result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsOffsetMeterResult">
            <summary>
            Gets this result graph as an IOffsetMeterResult object.
            </summary>
            <returns>The result as an IOffsetMeterResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsOffsetXYResult">
            <summary>
            Gets whether this is an Offset XY derived result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsOffsetXYResult">
            <summary>
            Gets this result graph as an IOffsetXYResult object.
            </summary>
            <returns>The result as an IOffsetXYResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsStatisticsMeterFromMeterResult">
            <summary>
            Gets whether this is a Min/Max/Statistics meter derived result type where the source result is a meter result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsStatisticsMeterFromMeterResult">
            <summary>
            Gets this result graph as an IStatisticsMeterFromMeterResult object.
            </summary>
            <returns>The result as an IStatisticsMeterFromMeterResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsStatisticsMeterFromXYResult">
            <summary>
            Gets whether this is a Min/Max/Statistics meter derived result type where the source result is an XY result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsStatisticsMeterFromXYResult">
            <summary>
            Gets this result graph as an IStatisticsMeterFromXYResult object.
            </summary>
            <returns>The result as an IStatisticsMeterFromXYResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsStatisticsMeterFromLevelAndDistortionResult">
            <summary>
            Gets whether this is a Min/Max/Statistics meter derived result type where the source result is a 
            Level and Distortion (Acoustic Response) XY result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsStatisticsMeterFromLevelAndDistortionResult">
            <summary>
            Gets this result graph as an IStatisticsMeterFromLevelAndDistortionResult object.
            </summary>
            <returns>The result as an IStatisticsMeterFromLevelAndDistortionResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsNormalizeInvertResult">
            <summary>
            Gets whether this is a Normalize/Invert derived result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsNormalizeInvertResult">
            <summary>
            Gets this result graph as an INormalizeInvertResult object.
            </summary>
            <returns>The result as an INormalizeInvert object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsSpecifyDataPointsResult">
            <summary>
            Gets whether this is a Specify Data Points result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsSpecifyDataPointsResult">
            <summary>
            Gets this result graph as an ISpecifyDataPointsResult object.
            </summary>
            <returns>The result as an ISpecifyDataPointsResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsSpecifySingleDataPointResult">
            <summary>
            Gets whether this is a Specify Single Data Point result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsSpecifySingleDataPointResult">
            <summary>
            Gets this result graph as an ISpecifySingleDataPointResult object.
            </summary>
            <returns>The result as an ISpecifySingleDataPointResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsSpecifySingleDataPointFromLevelAndDistortionResult">
            <summary>
            Gets whether this is a Specify Single Data Point result type which is derived from a 
            Level and Distortion (Acoustic Response) result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsSpecifySingleDataPointFromLevelAndDistortionResult">
            <summary>
            Gets this result graph as an ISpecifySingleDataPointFromLevelAndDistortionResult object.
            </summary>
            <returns>The result as an ISpecifySingleDataPointFromLevelAndDistortionResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsSmoothResult">
            <summary>
            Gets whether this is a Smooth result type where the source result has a frequency X-axis.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsSmoothResult">
            <summary>
            Gets this result graph as an ISmoothResult object.
            </summary>
            <returns>The result as an ISmoothResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsTimeDomainSmoothResult">
            <summary>
            Gets whether this is a Smooth result type where the source result has a time x-axis.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsTimeDomainSmoothResult">
            <summary>
            Gets this result graph as an ITimeDomainSmoothResult object.
            </summary>
            <returns>The result as an ITimeDomainSmoothResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCompareMeterResult">
            <summary>
            Gets whether this is a Compare derived result type where the source result is a meter result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCompareMeterResult">
            <summary>
            Gets this result graph as an ICompareMeterResult object.
            </summary>
            <returns>The result as an ICompareMeterResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCompareXYResult">
            <summary>
            Gets whether this is a Compare derived result type where the source is an XY result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCompareXYResult">
            <summary>
            Gets this result graph as an ICompareXYResult object.
            </summary>
            <returns>The result as an ICompareXYResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCompareLevelAndDistortionResult">
            <summary>
            Gets whether this is a Compare derived result type where the source is a Level and Distortion result.
             </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCompareLevelAndDistortionResult">
            <summary>
            Gets this result graph as an ICompareLevelAndDistortionResult object.
            </summary>
            <returns>The result as an ICompareLevelAndDistortionResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsStatisticsXYResult">
            <summary>
            Gets whether this is a Min/Max/Statistics derived result type where the source result is an XY result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsStatisticsXYResult">
            <summary>
            Gets this result graph as an IStatisticsXYResult object.
            </summary>
            <returns>The result as an IStatisticsXYResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsStatisticsXYLevelAndDistortionResult">
            <summary>
            Gets whether this is a Min/Max/Statistics derived result type where the source result is the Level and Distortion result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsStatisticsXYLevelAndDistortionResult">
            <summary>
            Gets this result graph as an IStatisticsXYLevelAndDistortionResult object.
            </summary>
            <returns>The result as an IStatisticsXYLevelAndDistortionResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsHarmonicSumMeter">
            <summary>
            Gets whether this is a Harmonic Sum Ratio or Harmonic Sum Level derived result type.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsHarmonicSumMeter">
            <summary>
            Gets this result graph as an IHarmonicSumMeter object
            </summary>
            <returns>The result as an IHarmonicSumeterResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsToneMeterGraph">
            <summary>
            Gets whether this is a meter result which has a tone selector.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsToneMeterGraph">
            <summary>
            Gets this result graph as an IToneMeterGraph object
            </summary>
            <returns>The result as an IToneMeterGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsToneCrosstalkMeterGraph">
            <summary>
            Gets whether this is a meter result for computing crosstalk at a specified crosstalk tone.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsToneCrosstalkMeterGraph">
            <summary>
            Gets this result graph as an IToneCrosstalkMeterGraph object
            </summary>
            <returns>The result as an IToneCrosstalkMeterGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsRatioToneMeterGraph">
            <summary>
            Gets whether this is a meter result which computes a ratio at a specified tone.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsRatioToneMeterGraph">
            <summary>
            Gets this result graph as an IRatioToneMeterGraph object
            </summary>
            <returns>The result as an IRatioToneMeterGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsDataDistributionResult">
            <summary>
            Gets whether this is a Data Distribution meter result which displays a mean value and a deviation value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsDataDistributionResult">
            <summary>
            Gets this result graph as an IDataDistributionResult object.
            </summary>
            <returns>The result as an IDataDistributionResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsHarmonicXYGraph">
            <summary>
            Gets whether this is a Harmonic XY graph used for Distortion Product Ratio/Level results.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsHarmonicXYGraph">
            <summary>
            Gets this result graph as an IHarmonicXYGraph object.
            </summary>
            <returns>The result as an IHarmonicXYGraph object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCompareEncodedBitstreamResult">
            <summary>
            Gets whether this result graph is from the Compare Encoded Bitstream to Reference measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCompareEncodedBitstreamResult">
            <summary>
            Gets this result graph as an ICompareEncodedBitstreamResult object.
            </summary>
            <returns>The result as an ICompareEncodedBitstreamResult object</returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCustomMeterGraph">
            <summary>
            Gets whether this result graph is a custom meter graph where the data comes from an external file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCustomMeterGraph">
            <summary>
            Gets this result graph as an ICustomMeterGraph object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCustomXYGraph">
            <summary>
            Gets whether this result graph is a custom XY graph where the data comes from an external file.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCustomXYGraph">
            <summary>
            Gets this result graph as an ICustomXYGraph object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCustomProcessingXyResult">
            <summary>
            Gets whether this result graph is an XY graph produced by a custom processing plug-in.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCustomProcessingXyResult">
            <summary>
            Gets this result graph as an ICustomProcessingXyResult object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCustomProcessingMeterResult">
            <summary>
            Gets whether this result graph is meter graph produced by a custom processing plug-in.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCustomProcessingMeterResult">
            <summary>
            Gets this result graph as an ICustomProcessingMeterResult object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsCustomProcessingTabularResult">
            <summary>
            Gets whether this result graph is tabular data grid produced by a custom processing plug-in.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsCustomProcessingTabularResult">
            <summary>
            Gets this result graph as an ICustomProcessingTabularResult object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsTabularResult">
            <summary>
            Get whether this result graph is a tabular result from a tabular measurement.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsTabularResult">
            <summary>
            Get the result graph as an ITabularResult object.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDynamicResultGraph.IsEqXyResult">
            <summary>
            Gets whether is result graph is an EQ derived result.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IDynamicResultGraph.AsEqXyResult">
            <summary>
            Gets the result graph as an IEqXyResult object.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMetadataGraph">
            <summary>
            Represents the result from the <see cref="T:AudioPrecision.API.IMetadataRecorderMeasurement">IMetadataRecorderMeasurement</see>.
            This graph contains information about the status of metadata fields, and describes when the metadata field
            values change with relation to time.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.SetFieldTrace(System.Int32,AudioPrecision.API.MetadataField)">
            <summary>
            Configure a trace for a MetaData field
            </summary>
            <param name="traceIndex">Index of the trace to configure. Limited to 0 through <see cref="P:AudioPrecision.API.IMetadataGraph.FieldTraceCount">FieldTraceCount</see></param>
            <param name="field"><see cref="T:AudioPrecision.API.MetadataField"/>MetaDataKey enumeration</param>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.IsFieldTraceValid(System.Int32)">
            <summary>
            Indicates whether or not the specified trace is assigned a field value.
            </summary>
            <param name="traceIndex">Index of the trace</param>
            <returns>True if the trace has a field assigned to it, or false if the trace is not assigned.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.ClearFieldTrace(System.Int32)">
            <summary>
            Removes the field assignment from the specified trace
            </summary>
            <param name="traceIndex">Index of the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetFieldTrace(System.Int32)">
            <summary>
            Gets the field for the trace.
            </summary>
            <param name="traceIndex">Index of the trace.  Limited to 0 through <see cref="P:AudioPrecision.API.IMetadataGraph.FieldTraceCount">FieldTraceCount</see></param>
            <returns>The enumeration of the field.  Returns an empty string for a trace that is not configured.</returns>
            <exception cref="T:AudioPrecision.API.APException">Throws an APException with ErrorCode = APError.MetadataFieldNotAssigned if the
            trace does not have a field assigned to it.</exception>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetFieldTraceName(System.Int32)">
            <summary>
            Gets the field name for the trace.
            </summary>
            <param name="traceIndex">Index of the trace.  Limited to 0 through <see cref="P:AudioPrecision.API.IMetadataGraph.FieldTraceCount">FieldTraceCount</see></param>
            <returns>The enumeration of the field.  Returns an empty string for a trace that is not configured.</returns>
            <exception cref="T:AudioPrecision.API.APException">Throws an APException with ErrorCode = APError.MetadataFieldNotAssigned if the
            trace does not have a field assigned to it.</exception>
        </member>
        <member name="P:AudioPrecision.API.IMetadataGraph.FieldTraceCount">
            <summary>
            Gets the number of fields that can be tracked on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMetadataGraph.NumberOfReadings">
            <summary>
            Gets the total number of readings acquired when the measurement last ran.
            The measurement should have one reading for the start, one for the end, 
            and one for each timestamp where one or more tracked fields changed its value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetTimestamp(System.Int32)">
            <summary>
            Gets the time of the specified reading.
            </summary>
            <param name="readingIndex">The reading index</param>
            <returns>A double representing the time the reading was acquired.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetFieldTraceValue(System.Int32,AudioPrecision.API.MetadataField)">
            <summary>
            Gets the specified field value as a formatted string.
            </summary>
            <param name="readingIndex">The index of the reading</param>
            <param name="field">The requested field</param>
            <returns>The field value as a formatted string</returns>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetFieldTraceValue(System.Int32,System.Int32)">
            <summary>
            Gets the specified field value as a formatted string.
            </summary>
            <param name="readingIndex">The index of the reading</param>
            <param name="fieldTraceIndex">The requested field</param>
            <returns>The field value as a formatted string</returns>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.ExportData(System.String)">
            <summary>
            Exports the metadata transition data to an Excel or CSV file.  The type of file is determined by the file
            extension.  If the file extension is ".xls" the file is exported to an Excel file, otherwise it
            is exported to a CSV text file.
            </summary>
            <param name="fileName">The name of the Excel or CSV file</param>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.FitDataToView">
            <summary>
            Scales the data into view.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMetadataGraph.Transitions">
            <summary>
            Gets or sets the number of transitions shown on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMetadataGraph.AutoScale">
            <summary>
            Gets or sets whether to autoscale the x axis.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.SetFieldColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the color for a particular field index.
            </summary>
            <param name="fieldIndex"></param>
            <param name="color"></param>
        </member>
        <member name="M:AudioPrecision.API.IMetadataGraph.GetFieldColor(System.Int32)">
            <summary>
            Gets the color for a particular field index;
            </summary>
            <param name="fieldIndex"></param>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.IMeterGraph">
            <summary>
            Represents a horizontal bar graph and its settings and meter readings.
            </summary>
            <example>
            See the ILevelAndGainMeasurement.<seealso cref="P:AudioPrecision.API.ILevelAndGainMeasurement.Level"/> property for an example of getting
            numeric values out of the graph.
            </example>
            <example>
            See the <see cref="P:AudioPrecision.API.IMeterGraph.Axis"/> property for an example of configuring the graph units.
            </example>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.Axis">
            <summary>
            Gets the axis object for this graph.  
            </summary>
            <example>
            <code source="Graph.vb" region="Axis" lang="vbnet"/>
            </example>
        </member>
        <member name="E:AudioPrecision.API.IMeterGraph.ValuesChanged">
            <summary>
            Event fired when new data is available. 
            Use the APEvents class to subscribe to this event.
            <see cref="T:AudioPrecision.API.APEvents"/>
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetValues">
            <summary>
            Gets the current meter readings in the current meter units.
            </summary>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetValues(System.String)">
            <summary>
            This function offers the ability to take the recorded results and convert them
            to another unit in the family of units associated with the result. 
            </summary>
            <param name="Unit">A unit within the family of units for this result.  For example, "dBV" is in the same family as "Vrms"</param>
            <returns>an array of doubles converted to the desired unit</returns>
            <exception cref="T:AudioPrecision.API.APException">An APException with error code APError.NonCompatibleUnit if the requested unit is not within the family</exception>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetText">
            <summary>
            Gets the current meter readings as text formatted with the unit string
            in the current meter units.
            </summary>
            <returns>an array of text in the current unit with units and formatting</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetText(System.String)">
            <summary>
            This function offers the ability to take the recorded results and convert them
            to another unit in the family of units associated with the result. 
            </summary>
            <param name="Unit">A unit within the family of units for this result.  For example, "dBV" is in the same family as "Vrms"</param>
            <returns>an array of text converted to the desired unit with units and formatting</returns>
            <exception cref="T:AudioPrecision.API.APException">An APException with error code APError.NonCompatibleUnit if the requested unit is not within the family</exception>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.TrackFirstLimitChannel">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IMeterLimits.TrackFirstChannel">Limits.TrackFirstChannel</see> instead.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.ClearLimits">
            <summary>
            This property is obsolete. Use <see cref="M:AudioPrecision.API.IMeterLimits.Clear">Limits.Clear</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.UpperLimit">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IMeterLimits.Upper">Limits.Upper</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.LowerLimit">
            <summary>
            This property is obsolete. Use <see cref="P:AudioPrecision.API.IMeterLimits.Lower">Limits.Lower</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.Limits">
            <summary>
            Gets the settings for the upper and lower limits.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.ExportData(System.String,System.String)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="unit">the desired unit of the meter values</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.ExportData(System.String,System.String,System.Boolean[])">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="unit">the desired unit of the meter values</param>
            <param name="selectedChannels">An array of true/false values indicating which channels should be exported, or Null to export all channels</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.ExportData(System.String,System.String,System.Boolean[],System.Boolean)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="unit">the desired unit of the meter values</param>
            <param name="selectedChannels">An array of true/false values indicating which channels should be exported, or Null to export all channels</param>
            <param name="append">True to add the data to an existing file if that file type supports append</param>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.ChannelCount">
            <summary>
            Gets the number of channels for this meter.  Before the measurement is run this will equal the number
            of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterGraph.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetTraceName(System.Int32)">
            <summary>
            Gets the display name for a specific bar on the meter graph.
            </summary>
            <param name="traceIndex">Bar index, 0 based</param>
            <returns>The display name</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.SetTraceName(System.Int32,System.String)">
            <summary>
            Sets the display name for a specific bar on the meter graph.
            </summary>
            <param name="traceIndex">Bar index, 0 based</param>
            <param name="name">The display name</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.GetTraceColor(System.Int32)">
            <summary>
            Gets the color for a specific bar.
            </summary>
            <param name="traceIndex">Bar number, 0 based</param>
            <returns>System.Drawing.Color for the bar</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.SetTraceColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the color for a specific bar.
            </summary>
            <param name="traceIndex">Bar number, 0 based</param>
            <param name="color">System.Drawing.Color for the bar</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.ResetTraceStyle(System.Int32)">
            <summary>
            Resets the style for a bar so it uses the default styles from the project settings.
            </summary>
            <param name="traceIndex">Bar number, 0 based</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterGraph.FitDataToView">
            <summary>
            Scales the data into view.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICustomMeterGraph">
            <summary>
            Represents a user defined meter graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomMeterGraph.CustomDataFile">
            <summary>
            Gets or sets the csv or Excel file containing the data for the graph.
            File format must be in the same form produced by the ExportData command 
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICustomMeterGraph.Refresh">
            <summary>
            Reloads the data from the CustomDataFile into the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomMeterGraph.CenterXAxisAtOrigin">
            <summary>
            Gets or sets the 'center at origin' property on the x-axis.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeterLimits">
            <summary>
            Represents the limit settings for a meter result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimits.TrackFirstChannel">
            <summary>
            Gets or sets whether the limit values are the same for all channels.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimits.Clear">
            <summary>
            Removes all limit values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimits.Upper">
            <summary>
            Gets the upper limit.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimits.Lower">
            <summary>
            Gets the lower limit.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IMeterLimit">
            <summary>
            Represents the limits for a meter graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetValues">
            <summary>
            Gets the limit values in the current meter unit.
            </summary>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetValues(System.String)">
            <summary>
            Gets the limit values in the specified unit.
            </summary>
            <param name="unit">The desired unit.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetValue(AudioPrecision.API.InputChannelIndex,System.String)">
            <summary>
            Gets a meter value on a specified channel in the specified unit.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="unit">The desired unit.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetValue(System.Int32,System.String)">
            <summary>
            Gets a meter value on a specified channel in the specified unit.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="unit">The desired unit.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.SetValue(AudioPrecision.API.InputChannelIndex,System.Double,System.String)">
            <summary>
            Sets a new limit value on a specified channel in a specified unit.
            </summary>
            <param name="ch">The channel.</param>
            <param name="limit">The new limit value.</param>
            <param name="unit">The unit of the new limit value.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.SetValue(System.Int32,System.Double,System.String)">
            <summary>
            Sets a new limit value on a specified channel in a specified unit.
            </summary>
            <param name="ch">The channel.</param>
            <param name="limit">The new limit value.</param>
            <param name="unit">The unit of the new limit value.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.SetValue(AudioPrecision.API.InputChannelIndex,System.Double)">
            <summary>
            Sets a new limit value on a specified channel in the current meter unit.
            </summary>
            <param name="ch">The channel.</param>
            <param name="limit">The new limit value.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.SetValue(System.Int32,System.Double)">
            <summary>
            Sets a new limit value on a specified channel in the current meter unit.
            </summary>
            <param name="ch">The channel.</param>
            <param name="limit">The new limit value.</param>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetText">
            <summary>
            Gets the limit values as formatted text with unit strings in the current
            meter unit.
            </summary>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetText(System.String)">
            <summary>
            Gets the limit values as formatted text with unit strings in the specified unit
            </summary>
            <param name="unit">The desired unit.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetText(AudioPrecision.API.InputChannelIndex,System.String)">
            <summary>
            Gets a meter value as formatted text with units on a specified channel 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="unit">The desired unit.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.GetText(System.Int32,System.String)">
            <summary>
            Gets a meter value as formatted text with units on a specified channel 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="unit">The desired unit.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.PassedLimitCheckOnChannel(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not the current meter value is within this limit on the specified channel.
            </summary>
            <param name="ch">The channel.</param>
            <returns>True if within limits.</returns>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimit.PassedLimitCheck">
            <summary>
            Gets whether or not the current meter values pass this limit on all channels.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimit.Enabled">
            <summary>
            Gets or sets whether or not the limit checking is active for this meter.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IMeterLimit.Count">
            <summary>
            Gets the number of channels in this limit
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IMeterLimit.Clear">
            <summary>
            Resets all limit values to their default value.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDeviationMeterGraph">
            <summary>
            Represents a result for a Deviation meter measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeviationMeterGraph.MinFrequency">
            <summary>
            Gets the setting which controls the minimum frequency of interest for the Deviation measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeviationMeterGraph.MaxFrequency">
            <summary>
            Gets the setting which controls the maximum frequency of interest for the Deviation measurement.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDeviationMeterWithSmoothingGraph">
            <summary>
            Represents a result for a Deviation meter measurement, where the level result upon which
            this deviation value is calculated has been smoothed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeviationMeterWithSmoothingGraph.OctaveSmoothing">
            <summary>
            Get the smoothing value for this graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IThieleSmallResult">
            <summary>
            Represents the result data for Thiele-Small parameter measurements.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.GetValue(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter value, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.GetText(AudioPrecision.API.ThieleSmallParameter,System.Boolean)">
            <summary>
            Gets the specified Thiele-Small parameter value as formatted text, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <param name="withUnitString">True to include the unit string, False to remove it</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.GetLowerLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter lower limit value, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.SetLowerLimit(AudioPrecision.API.ThieleSmallParameter,System.Double)">
            <summary>
            Sets the specified Thiele-Small parameter lower limit value.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <param name="limit">The limit value</param>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.GetUpperLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets the specified Thiele-Small parameter upper limit value, if it exists
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>The parameter value, if it exists</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.SetUpperLimit(AudioPrecision.API.ThieleSmallParameter,System.Double)">
            <summary>
            Sets the specified Thiele-Small parameter upperlimit value.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <param name="limit">The limit value</param>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.PassedLowerLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets whether or not the specified Thiele-Small parameter value passed the lower limit, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>True if passed, False if not</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.PassedUpperLimit(AudioPrecision.API.ThieleSmallParameter)">
            <summary>
            Gets whether or not the specified Thiele-Small parameter value passed the upper limit, if it exists in the collection.
            </summary>
            <param name="parameter">The Thiele-Small parameter</param>
            <returns>True if passed, False if not</returns>
        </member>
        <member name="M:AudioPrecision.API.IThieleSmallResult.ExportData(System.String)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
        </member>
        <member name="T:AudioPrecision.API.IVerticalBarGraph">
            <summary>
            Represents a vertical bar graph and its settings and meter readings.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVerticalBarGraph.Axis">
            <summary>
            Gets the axis object for this graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVerticalBarGraph.DisplayChannel">
            <summary>
            Gets or sets the channel currently displayed in the distortion graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetValues(AudioPrecision.API.InputChannelIndex,System.String,System.String)">
            <summary>
            Gets the meter readings for this graph.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="xUnit">The desired unit for the x axis.</param>
            <param name="yUnit">The desireded unit for the y axis.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetValues(System.Int32,System.String,System.String)">
            <summary>
            Gets the meter readings for this graph.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="xUnit">The desired unit for the x axis.</param>
            <param name="yUnit">The desireded unit for the y axis.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetValues(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the meter readings for this graph.
            </summary>
            <param name="ch">The desired channel.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetVales(System.Int32)">
            <summary>
            Gets the meter readings for this graph.
            </summary>
            <param name="ch">The desired channel.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetText(AudioPrecision.API.InputChannelIndex,System.String,System.String)">
            <summary>
            Gets the meter readings for this graph as formatted text with units.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="xUnit">The desired unit for the x axis.</param>
            <param name="yUnit">The desireded unit for the y axis.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetText(System.Int32,System.String,System.String)">
            <summary>
            Gets the meter readings for this graph as formatted text with units.
            </summary>
            <param name="ch">The desired channel.</param>
            <param name="xUnit">The desired unit for the x axis.</param>
            <param name="yUnit">The desireded unit for the y axis.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetText(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets the meter readings for this graph as formatted text with units.
            </summary>
            <param name="ch">The desired channel.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetText(System.Int32)">
            <summary>
            Gets the meter readings for this graph as formatted text with units.
            </summary>
            <param name="ch">The desired channel.</param>
            <returns>An array of values.</returns>
        </member>
        <member name="P:AudioPrecision.API.IVerticalBarGraph.ChannelCount">
            <summary>
            Gets the number of channels for this graph.  Before the measurement is run this will equal the number
            of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVerticalBarGraph.NumBarsPerChannel">
            <summary>
            For graphs such as Distortion Product Ratio graphs, each channel is represented by one or more bars.  A 
            Distortion Product Ratio graph contains a bar for the fundamental, and then one bar for each of the next 9 harmonics.
            This property indicates how many bars are present for each measured channel.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IVerticalBarGraph.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.GetTraceColor(System.Int32,System.Int32)">
            <summary>
            Gets the color for a specific channel and bar.
            </summary>
            <param name="channelIndex">Channel number, 0 based</param>
            <param name="traceIndex">Bar number, 0 based</param>
            <returns>System.Drawing.Color for the bar</returns>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.SetTraceColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets the color for a specific channel and bar.
            </summary>
            <param name="channelIndex">Channel number, 0 based</param>
            <param name="traceIndex">Bar number, 0 based</param>
            <param name="color">System.Drawing.Color for the bar</param>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.ResetTraceStyle(System.Int32,System.Int32)">
            <summary>
            Resets the style for a bar so it uses the default styles from the project settings.
            </summary>
            <param name="channelIndex">Channel number, 0 based</param>
            <param name="traceIndex">Bar number, 0 based</param>
        </member>
        <member name="M:AudioPrecision.API.IVerticalBarGraph.FitDataToView">
            <summary>
            Scales the data into view.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYDistortionGraph">
            <summary>
            Represents an X-Y graph where the X-Axis is the measured frequency, and the 
            Y-Axis is the measured level.  This graph has three traces per channel.  One for the fundamental,
            one for the second harmonic, and one for the third harmonic.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.XAxis">
            <summary>
            Gets the settings for the X axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.YAxis">
            <summary>
            Gets the settings for the Y axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.LegendVisible">
            <summary>
            Gets or sets whether the graphical legend is displayed on the graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.ExportData(System.String,System.String,System.String,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="xUnit">the desired unit of the X values</param>
            <param name="yUnit">the desired unit of the Y values</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.SetHarmonicVisible(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Boolean)">
            <summary>
            Hides or shows a trace for the specified harmonic for the channel specified by <paramref name="channel">channel</paramref>.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="visible">True if the trace should be shown, False if the trace should be hidden.l</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.SetHarmonicVisible(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Hides or shows a trace for the specified harmonic for the channel specified by <paramref name="channel">channel</paramref>.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="visible">True if the trace should be shown, False if the trace should be hidden.l</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicVisible(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets whether or not a trace for a harmonic for the channel specified by DisplayChannel is displayed on the graph.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>True if the trace is currently displayed on the graph.</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicVisible(System.Int32,System.Int32)">
            <summary>
            Gets whether or not a trace for a harmonic for the channel specified by DisplayChannel is displayed on the graph.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>True if the trace is currently displayed on the graph.</returns>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.ChannelCount">
            <summary>
            Gets the number of channels for this graph.  Before the measurement is run this will equal the number
            of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(System.Int32,System.Int32)">
            <summary>
            Gets the X axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the X axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the X axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the X axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(System.Int32,System.Int32)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the harmonic 
            for the channel specified
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the harmonic 
            for the channel specified in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the 
            harmonic for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the 
            harmonic for the channel specified in the desired unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(System.Int32,System.Int32)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the harmonic for the channel specified 
            in the desired unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the harmonic for the channel specified 
            in the desired unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(System.Int32,System.Int32)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel in the desired unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel in the desired unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicXValues(System.Int32,System.Int32)">
            <summary>
            Gets the raw measured X axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicXValues(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the raw measured X axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified in the specified unit. 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the raw measured X axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the raw measured X axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified in the specified unit. 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicYValues(System.Int32,System.Int32)">
            <summary>
            Gets the raw measured Y axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicYValues(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the raw measured Y axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified in the specified unit. 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Gets the raw measured Y axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetAllHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String)">
            <summary>
            Gets the raw measured Y axis values, without interpolation or consideration of the currently displayed graph extents,
            for the harmonic for the channel specified in the specified unit. 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="unit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the X axis values for the specified acquisition and the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32)">
            <summary>
            Gets the X axis values for the specified acquisition and the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets the X axis values for the specified acquisition and the harmonic for the channel specified 
            in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.String)">
            <summary>
            Gets the X axis values for the specified acquisition and the harmonic for the channel specified in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.String)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the Y axis values for the specified acquisition and the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32)">
            <summary>
            Gets the Y axis values for the specified acquisition and the harmonic for the channel specified 
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets the Y axis values for the specified acquisition and the harmonic for the channel specified 
            in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.String)">
            <summary>
            Gets the Y axis values for the specified acquisition and the harmonic for the channel specified 
            in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetHarmonicYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.Int32,System.String)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the harmonic 
            for the channel specified in the specified unit.
            </summary>
            <param name="channel">The desired channel index</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.AcquisitionCount">
            <summary>
            Gets the total number of acquisitions currently displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.ActiveAcquisition">
            <summary>
            Gets or sets the currently displayed acquisition for the graph.  
            The acquisition number uses a 0 based index, therefore:
              [ -1 ]is All acqusitions
              [  0 ]is acquisition #1
              [  1 ]is acquisition #2
              [etc.]
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.SetActiveAcquisition(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Sets the currently displayed acquisition for the graph.  
            </summary>
            <param name="dataType">Data type, i.e. Measured or Imported</param>
            <param name="index">The 1-based index of the data, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.ClearData(System.Int32)">
            <summary>
            Clears the data for this graph on the specified data set index.
            The data set index is 0 based, therefore:
              [ -1 ]is All Data
              [  0 ]is data set #1
              [  1 ]is data set #2
              [etc.]
            </summary>
            <param name="index">the index number of the data set to clear</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.ClearData(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Clears the data for the graph based on the requested data type and index, i.e. "Measured 1".
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="index">The data index, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetDataType(System.Int32)">
            <summary>
            Gets the data type for the requested index.
            </summary>
            <param name="index">The requested index</param>
            <returns>Measured or Imported</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetDataIndex(System.Int32)">
            <summary>
            Gets the index value for the requested data set.  
            Example:
            [ 0 ] Measured 1  -> returns 1
            [ 1 ] Measured 2  -> returns 2
            [ 2 ] Imported 1  -> returns 1
            </summary>
            <param name="index">The index of the data set in the list of all data sets for this graph</param>
            <returns>The index number for the specific data type</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetValues(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y data for the specified data type and index, i.e. "Measured 1"
            </summary>
            <param name="dataType">The type of the data, Measured or Imported</param>
            <param name="dataIndex">The 1 based index of the data set</param>
            <returns>An object which contains the X,Y values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.GetTraceStyles(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the collection of styles for the traces on an X,Y graph for a specific data set.  
            Styles include name, color, width, and line style.
            </summary>
            <param name="dataType">The type of the data, Measured or Imported</param>
            <param name="dataIndex">The 1 based index of the data set</param>
            <returns>An IXYDistortionTraceStyleCollection representing the selected styles</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.ImportData(System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Imports a data file which was created by APx500 into the XY graph.  If the file 
            does not contain data which has compatible units with the graph, an exception is thrown.  
            If more than one data set exists in the file which matches the graph, an exception is thrown.
            </summary>
            <param name="fileName">The full path to the file containing the data to import</param>
            <param name="axis">Left or Right axis</param>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.ShowCursors">
            <summary>
            Shows the cursor legend and displays cursors on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.DeltaCursor">
            <summary>
            Gets the delta cursor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.PrimaryCursor">
            <summary>
            Gets the primary graph cursor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionGraph.SecondaryCursor">
            <summary>
            Gets the secondary graph cursor.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionGraph.FitDataToView">
            <summary>
            Scales the data into view.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXyDistortionValues">
            <summary>
            Represents measured X,Y data values for the Level and Distortion (<see cref="T:AudioPrecision.API.IXYDistortionGraph"/>) graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXValues(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXValues(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXText(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXText(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYValues(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYValues(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYText(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYText(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXyDistortionValues.GetYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="harmonicIndex">The desired harmonic index</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="T:AudioPrecision.API.ICursorHarmonic">
            <summary>
            Represents the settings for an X,Y graph cursor when it is attached to a Level and Distortion result graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursorHarmonic.AttachedTrace">
            <summary>
            Gets the attached IHarmonicTraceInfo.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICursorHarmonic.AttachHarmonic(AudioPrecision.API.SourceDataType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Attaches a trace to the cursor.
            </summary>
            <param name="dataType">SourceDataType</param>
            <param name="dataIndex">Data Index</param>
            <param name="channel">Channel index</param>
            <param name="harmonicIndex">Harmonid index</param>
        </member>
        <member name="M:AudioPrecision.API.ICursorHarmonic.AttachHarmonic(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Attaches a trace to the cursor.
            </summary>
            <param name="dataType">SourceDataType</param>
            <param name="dataIndex">Data Index</param>
            <param name="channel">Channel index</param>
            <param name="harmonicIndex">Harmonid index</param>
        </member>
        <member name="M:AudioPrecision.API.ICursorHarmonic.AttachHarmonic(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.DistortionHarmonicIndex)">
            <summary>
            Attaches a trace to the cursor.
            </summary>
            <param name="channel">Channel index</param>
            <param name="harmonicIndex">Harmonid index</param>
        </member>
        <member name="M:AudioPrecision.API.ICursorHarmonic.AttachHarmonic(System.Int32,System.Int32)">
            <summary>
            Attaches a trace to the cursor.
            </summary>
            <param name="channel">Channel index</param>
            <param name="harmonicIndex">Harmonid index</param>
        </member>
        <member name="T:AudioPrecision.API.IHarmonicTraceInfo">
            <summary>
            Describes how an X,Y graph cursor is attached to data on a Level and Distortion graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IHarmonicTraceInfo.Harmonic">
            <summary>
            Harmonic index
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYDistortionTraceStyleCollection">
            <summary>
            Represents a collection of trace styles for a specific data set on an X,Y graph.
            Styles include name, color, width, and line style.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYDistortionTraceStyleCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.GetColor(System.Int32,System.Int32)">
            <summary>
            Gets the color for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <returns>A System.Drawing.Color object</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.SetColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets the color for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <param name="color">A System.Drawing.Color object for the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.GetName(System.Int32,System.Int32)">
            <summary>
            Gets the name for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <returns>The name of the trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.SetName(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the name for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <param name="name">The name of the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.GetLineStyle(System.Int32,System.Int32)">
            <summary>
            Gets the line style for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <returns>A System.Drawing.DashStyle object for the trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.SetLineStyle(System.Int32,System.Int32,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Sets the line style for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <param name="lineStyle">A System.Drawing.DashStyle object for the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.GetLineWidth(System.Int32,System.Int32)">
            <summary>
            Gets the line width for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <returns>An integer between 1 and 5</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.SetLineWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the line width for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <param name="lineWidth">An integer between 1 and 5</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.GetVisible(System.Int32,System.Int32)">
            <summary>
            Gets whether or not the specified trace appears on the graph.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <returns>True if the trace appears on the graph, otherwise False</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.SetVisible(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified trace appears on the graph.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
            <param name="visible">True to make the trace appear on the graph, otherwise False</param>
        </member>
        <member name="M:AudioPrecision.API.IXYDistortionTraceStyleCollection.ResetTraceStyle(System.Int32,System.Int32)">
            <summary>
            Resets the style for a trace so it uses the default styles from the project settings.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="harmonicIndex">Index of the selected harmonic, 0 based</param>
        </member>
        <member name="T:AudioPrecision.API.GraphPoint">
            <summary>
            Represents a data point on a graph with an X and Y value
            </summary>
        </member>
        <member name="M:AudioPrecision.API.GraphPoint.#ctor(System.Double,System.Double)">
            <summary>
            Create a new GraphPoint
            </summary>
            <param name="x">Desired X value</param>
            <param name="y">Desired Y value</param>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.GraphPoint.X">
            <summary>
            The X value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphPoint.Y">
            <summary>
            The Y Value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.GraphPoint.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to</param>
            <returns>true if obj and this instance are the same type and represent the same value; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.GraphPoint.GetHashCode">
            <summary>
            Returns the hash code for this instance
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:AudioPrecision.API.GraphPoint.ToString">
            <summary>
             Returns the string representation for a graph point. (x, y)
            </summary>
            <returns></returns>
        </member>
        <member name="T:AudioPrecision.API.GraphStringPoint">
            <summary>
            Represents a data point on a graph with an X and Y value
            formatted as text with unit strings.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.GraphStringPoint.#ctor(System.String,System.String)">
            <summary>
            Create a new GraphStrringPoint
            </summary>
            <param name="x">Desired X value</param>
            <param name="y">Desired Y value</param>
            <exclude/>
        </member>
        <member name="F:AudioPrecision.API.GraphStringPoint.X">
            <summary>
            The X value.
            </summary>
        </member>
        <member name="F:AudioPrecision.API.GraphStringPoint.Y">
            <summary>
            The Y value.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.GraphStringPoint.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to</param>
            <returns>true if obj and this instance are the same type and represent the same value; otherwise, false.</returns>
        </member>
        <member name="M:AudioPrecision.API.GraphStringPoint.GetHashCode">
            <summary>
            Returns the hash code for this instance
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="T:AudioPrecision.API.ICustomXYGraph">
            <summary>
            Represents the settings for a user defined XY graph to which limits can be applied.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICustomXYGraph.CustomDataFile">
            <summary>
            Gets or sets the csv or Excel file containing the data for the graph.
            File format must be in the same form produced by the ExportData command 
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICustomXYGraph.Refresh">
            <summary>
            Reloads the data from CustomDataFile into the graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYGraphWithLimits">
            <summary>
            Represents the settings for an XY graph to which limits can be applied.
            <seealso cref="T:AudioPrecision.API.IXYGraph"/>
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.TrackFirstLimitChannel">
            <summary>
            Gets or sets whether or not the limit values for all channels on this measurement result are
            set to the same values.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYGraphWithLimits.ClearLimits">
            <summary>
            Removes all limit values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.LowerLimit">
            <summary>
            Gets the settings for the lower limit for this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.UpperLimit">
            <summary>
            Gets the settings for the upper limit for this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.LowerLimitRight">
            <summary>
            Gets the settings for the lower limit right axis for this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.UpperLimitRight">
            <summary>
            Gets the settings for the upper limit right axis for this result.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraphWithLimits.FailureCondition">
            <summary>
            Gets or sets whether how limits are evaluated when a graph has both a left and right axis defined.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYGraph">
            <summary>
            Represents an X,Y graph and all of its settings and data points.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetValues(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetValues(System.Int32,System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetValues(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetValues(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetText(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values as formatted text with unit strings for a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetText(System.Int32,System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values as formatted text with unit strings for a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetText(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values as formatted text with unit strings for a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetText(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values as formatted text with unit strings for a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXValues(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXValues(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXValues(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified acquisition and the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXValues(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified acquisition and the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXText(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXText(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXText(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetXText(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified acquisition and the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYValues(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYValues(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYValues(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified acquisition and the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYValues(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified acquisition and the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYText(System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYText(AudioPrecision.API.InputChannelIndex,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYText(System.Int32,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetYText(AudioPrecision.API.InputChannelIndex,System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified acquisition and the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="acquisitionNumber">The desired acquisition</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="P:AudioPrecision.API.IXYGraph.AcquisitionCount">
            <summary>
            Gets the total number of acquisitions currently displayed.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYGraph.ActiveAcquisition">
            <summary>
            This property is obsolete.  Use Use <see cref="M:AudioPrecision.API.IMeasurementBase.GetDataVisible(AudioPrecision.API.SourceDataType,System.Int32)">IMeasurement.GetDataVisible</see> or 
            <see cref="M:AudioPrecision.API.IMeasurementBase.SetDataVisible(AudioPrecision.API.SourceDataType,System.Int32,System.Boolean)">IMeasurement.SetDataVisible</see> instead.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.SetActiveAcquisition(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            This property is obsolete.  Use Use <see cref="M:AudioPrecision.API.IMeasurementBase.GetDataVisible(AudioPrecision.API.SourceDataType,System.Int32)">IMeasurement.GetDataVisible</see> or 
            <see cref="M:AudioPrecision.API.IMeasurementBase.SetDataVisible(AudioPrecision.API.SourceDataType,System.Int32,System.Boolean)">IMeasurement.SetDataVisible</see> instead.
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="index">The data index, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.ClearData(System.Int32)">
            <summary>
            Clears the data for this graph on the specified data set index.
            The data set index is 0 based, therefore:
              [ -1 ]is All Data
              [  0 ]is data set #1
              [  1 ]is data set #2
              [etc.]
            </summary>
            <param name="index">the index number of the data set to clear</param>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.ClearData(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Clears the data for the graph based on the requested data type and index, i.e. "Measured 1".
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="index">The data index, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetDataType(System.Int32)">
            <summary>
            Gets the data type for the requested index.
            </summary>
            <param name="index">The requested index</param>
            <returns>Measured or Imported</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetDataIndex(System.Int32)">
            <summary>
            Gets the index value for the requested data set.  
            Example:
            [ 0 ] Measured 1  -> returns 1
            [ 1 ] Measured 2  -> returns 2
            [ 2 ] Imported 1  -> returns 1
            </summary>
            <param name="index">The index of the data set in the list of all data sets for this graph</param>
            <returns>The index number for the specific data type</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetData(AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Gets the X,Y data for the specified data type and index, i.e. "Measured 1", and returns the number of 
            data points specified by the <see cref="P:AudioPrecision.API.IXYGraph.NumberOfDataPoints"/> property.
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="dataIndex">The acquisition number, i.e. Measured 1</param>
            <returns>An object which contains the X,Y values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.GetData(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.NumberOfGraphPoints)">
            <summary>
            Gets the X,Y data for the specified data type and index, i.e. "Measured 1".
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="dataIndex">The acquisition number, i.e. Measured 1</param>
            <param name="numberOfGraphPoints">Determines the number of data points in the returned object</param>
            <returns>An object which contains the X,Y values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYGraph.HasDataOnAxis(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Returns true if the graph has the requested SourceDataType and DataIndex for the specified axis.
            If the graph doesn't have any acquisitions then Measured 1 will always be true.
            </summary>
            <param name="dataType">Measured or Imported</param>
            <param name="dataIndex">The acquisition number</param>
            <param name="axis">Left or Right axis</param>
            <returns></returns>
        </member>
        <member name="P:AudioPrecision.API.IXYGraph.NumberOfDataPoints">
            <summary>
            Gets or sets the number of data points returned by the data access methods such as GetValues.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYValues">
            <summary>
            Represents measured X,Y data values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYValues.ChannelCountLeft">
            <summary>
            Gets the number of channels for the left axis data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYValues.ChannelCountRight">
            <summary>
            Gets the number of channels for the right axis data, or 0 if no right axis data is present.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYValues.HasRightAxisData">
            <summary>
            Returns True if this object contains data for the right axis of the source graph, otherwise False.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXText(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXText(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetXText(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the specified channel, 
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYText(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYText(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="M:AudioPrecision.API.IXYValues.GetYText(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings for the specified channel,
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="yUnit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>		
        </member>
        <member name="T:AudioPrecision.API.IRelativeLevelXYGraph">
            <summary>
            Represents the results for a Relative Level vs Frequency measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRelativeLevelXYGraph.ReferenceFrequency">
            <summary>
            Gets the reference frequency setting at which the Relative Level is measured.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRelativeLevelXYGraph.DataMode">
            <summary>
            Gets or sets how the data is displayed.  The data can be Normalized to a reference value, or automatically
            centered within the supplied limits.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRelativeLevelXYGraph.MinLimitFrequency">
            <summary>
            Gets a setting to determine the lower bounds of the data used for the AutoCenter algorithm.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IRelativeLevelXYGraph.MaxLimitFrequency">
            <summary>
            Gets a setting to determine the upper bounds of the data used for the AutoCenter algorithm.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IBaseXYGraph">
            <example>
            See the IFrequencyResponseMeasurement.<seealso cref="P:AudioPrecision.API.IFrequencyResponseMeasurement.Level"/> property for an example of getting
            numeric values out of the graph.
            </example>
            <example>
            See the <see cref="P:AudioPrecision.API.IBaseXYGraph.XAxis"/> or the <see cref="P:AudioPrecision.API.IBaseXYGraph.YAxis"/> property for an example of configuring the graph units.
            </example>
            <summary>
            Represents an X,Y graph and all of its settings and data points.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.XAxis">
            <summary>
            Gets the settings for the X axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.YAxis">
            <summary>
            Gets the settings for the Y axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.LegendVisible">
            <summary>
            Gets or sets whether the graphical legend is displayed on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ShowMarkers">
            <summary>
            Shows a marker for each point on the graph.
            This property only applies to XY graphs with sparse data sets such as Stepped Frequency Sweep
            or PESQ File MOS.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ShowXLabels">
            <summary>
            Shows the X value above each marker. See the <see cref="P:AudioPrecision.API.IBaseXYGraph.ShowMarkers"/> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ShowYLabels">
            <summary>
            Shows the Y value above each marker. See the <see cref="P:AudioPrecision.API.IBaseXYGraph.ShowMarkers"/> property.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ShowIndicators">
            <summary>
            Get or sets where the indicators are shown on the graph.  
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ShowCursors">
            <summary>
            Shows the cursor legend and displays cursors on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.DeltaCursor">
            <summary>
            Gets the delta cursor
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.PrimaryCursor">
            <summary>
            Gets the primary graph cursor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.SecondaryCursor">
            <summary>
            Gets the secondary graph cursor.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetValues(AudioPrecision.API.InputChannelIndex,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition for a specified channel in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetValues(System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition for a specified channel in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition for a specified channel in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition for a specified channel in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetText(AudioPrecision.API.InputChannelIndex,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition as formatted text with unit strings for 
            a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetText(System.Int32,System.String,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition as formatted text with unit strings for 
            a specified channel and acquisition in the specified units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="xUnit">Unit for X values</param>
            <param name="yUnit">Unit for Y values</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition as formatted text with unit strings for 
            a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetText(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X,Y values for the most recent acquisition as formatted text with unit strings for 
            a specified channel and acquisition in the current units.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the most recent acquisition for the specified channel in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values for the most recent acquisition for the specified channel in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXText(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXText(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the specified channel
            in the specified unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetXText(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the X axis values as formatted text with unit strings, for the most recent acquisition for the specified channel
            in the desired unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the specified channel in the desired unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values for the most recent acquisition for the specified channel in the desired unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYText(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYText(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel in the desired unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYText(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetYText(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the Y axis values as formatted text with unit strings, for the most recent acquisition for the 
            specified channel in the desired unit.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of strings representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllXValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw X axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllXValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw X axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllXValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw X axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllXValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw X axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the X axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllYValues(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw Y axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllYValues(System.Int32,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw Y axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllYValues(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw Y axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetAllYValues(AudioPrecision.API.InputChannelIndex,System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the raw Y axis values for the most recent data set, without interpolation or 
            consideration of the currently displayed graph extents, for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="unit">The desired unit</param>
            <param name="axis">The left or right axis</param>
            <returns>An array of doubles representing the Y axis values</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.String)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="xUnit">the desired unit of the X values</param>
            <param name="yUnit">the desired unit of the Y values</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.String,AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="xUnit">the desired unit of the X values</param>
            <param name="yUnit">the desired unit of the Y values</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.String,AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="xUnit">the desired unit of the X values</param>
            <param name="yUnit">the desired unit of the Y values</param>
            <param name="axis">The left or right axis</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.String,AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis,System.Boolean)">
            <summary>
            Exports either X,Y data or meter to an Excel, Matlab, or CSV file.  The type of file is determined by the file
            extension.  
            For Excel: ".xls"
            For Matlab: ".mat"
            All other extensions are exported as a CSV text file.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="xUnit">the desired unit of the X values</param>
            <param name="yUnit">the desired unit of the Y values</param>
            <param name="axis">The left or right axis</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
            <param name="append">True to add the data to an existing file if that file type supports append</param>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ExportDataSpecifications">
            <summary>
            Gets all of the X,Y data export specifications that are attached to the project which are compatible with this graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ExportSpecification">
            <summary>
            Gets or sets the selected export specification, or "Same as Graph" if none is specified.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.LoadExportSpecification(System.String,System.Boolean)">
            <summary>
            Loads an export specification from a file and attaches it to the project.  
            </summary>
            <param name="fileName">File name</param>
            <param name="replaceIfExists">True to automatically replace matching item</param>
            <returns>An object which describes the export specification settings from the specified file. Note that any changes to this object will
            not be applied to the project untile the <see cref="M:AudioPrecision.API.IXyDataExportSpecification.SaveToProject(System.String,System.Boolean)"/> function is called.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String)">
            <summary>
            Exports the X,Y data to an Excel, Matlab, or CSV file using the named export specification.
            If the specification is already in the project, you can refer to it by name. Otherwise use the <see cref="M:AudioPrecision.API.IBaseXYGraph.CreateExportSpecification"/> 
            function to create a new one and add it to the project.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="exportSpecification">The named project attachment, or "All Points"</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.Boolean[],AudioPrecision.API.SourceDataType,System.Int32)">
            <summary>
            Exports the X,Y data to an Excel, Matlab, or CSV file using the named export specification.
            If the specification is already in the project, you can refer to it by name. Otherwise use the <see cref="M:AudioPrecision.API.IBaseXYGraph.CreateExportSpecification"/> 
            function to create a new one and add it to the project.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="exportSpecification">The named project attachment, or "All Points"</param>
            <param name="selectedChannels">An array of true/false values indicating which channels should be exported, or Null to export all channels</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.Boolean[],AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Exports the X,Y data to an Excel, Matlab, or CSV file using the named export specification.
            If the specification is already in the project, you can refer to it by name. Otherwise use the <see cref="M:AudioPrecision.API.IBaseXYGraph.CreateExportSpecification"/> 
            function to create a new one and add it to the project.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="exportSpecification">The named project attachment, or "All Points"</param>
            <param name="selectedChannels">An array of true/false values indicating which channels should be exported, or Null to export all channels</param>
            <param name="axis">The left or right axis</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.Boolean[],AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis,System.Boolean)">
            <summary>
            Exports the X,Y data to an Excel, Matlab, or CSV file using the named export specification.
            If the specification is already in the project, you can refer to it by name. Otherwise use the <see cref="M:AudioPrecision.API.IBaseXYGraph.CreateExportSpecification"/> 
            function to create a new one and add it to the project.
            </summary>
            <param name="fileName">The name of the data file</param>
            <param name="exportSpecification">The named project attachment, or "All Points"</param>
            <param name="selectedChannels">An array of true/false values indicating which channels should be exported, or Null to export all channels</param>
            <param name="axis">The left or right axis</param>
            <param name="dataType">The data set type, i.e. Measured or Imported</param>
            <param name="dataIndex">The index of the data set, i.e. Measured 1</param>
            <param name="append">True to add the data to an existing file if that file type supports append</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.CreateExportSpecification">
            <summary>
            Creates an object which describes the subset of data to export from the graph. The object must be saved to the project
            in order to be referenced by functions like <see cref="M:AudioPrecision.API.IBaseXYGraph.ExportData(System.String,System.String,System.Boolean[],AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis,System.Boolean)"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.SetChannelVisible(AudioPrecision.API.InputChannelIndex,System.Boolean)">
            <summary>
            Hides or shows a trace for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="visible">True if the trace should be shown, False if the trace should be hidden.l</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.SetChannelVisible(System.Int32,System.Boolean)">
            <summary>
            Hides or shows a trace for the specified channel.
            </summary>
            <param name="ch">The desired channel</param>
            <param name="visible">True if the trace should be shown, False if the trace should be hidden.l</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetChannelVisible(AudioPrecision.API.InputChannelIndex)">
            <summary>
            Gets whether or not a trace for a channel is displayed on the graph.
            </summary>
            <param name="ch">The desired channel</param>
            <returns>True if the trace is currently displayed on the graph.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetChannelVisible(System.Int32)">
            <summary>
            Gets whether or not a trace for a channel is displayed on the graph.
            </summary>
            <param name="ch">The desired channel</param>
            <returns>True if the trace is currently displayed on the graph.</returns>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ChannelCount">
            <summary>
            Gets the number of channels for this graph.  Before the measurement is run this will equal the number
            of input channels in the Signal Path Setup.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.ChannelNames">
            <summary>
            Gets the name of each channel in the data set.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.CreateImportDataObject(System.String,System.String)">
            <summary>
            Creates an object which can be populated with data to import onto a graph.  
            The imported data appears as appended measurement data on the graph.
            </summary>
            <param name="xUnit">Specifies the x-axis unit of the imported data</param>
            <param name="yUnit">Specifies the y-axis unit of the import data</param>
            <returns>An object which can be populated with data.  
            This object can be imported onto the graph as long as the XUnit and YUnit properties are compatible.</returns>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ImportData(AudioPrecision.API.IXYImportData)">
            <summary>
            Imports the specified data into the XY graph, as long as the x and y axis units are compatible with this graph
            </summary>
            <param name="importData">The data object to import.</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ImportData(System.String,AudioPrecision.API.VerticalAxis)">
            <summary>
            Imports a data file which was created by APx500 into the XY graph.  If the file 
            does not contain data which has compatible units with the graph, an exception is thrown.  
            If more than one data set exists in the file which matches the graph, an exception is thrown.
            </summary>
            <param name="fileName">The full path to the file containing the data to import</param>
            <param name="axis">Left or right axis</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.GetTraceStyles(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Gets the collection of styles for the traces on an X,Y graph for a specific data set.  
            Styles include name, color, width, and line style.
            </summary>
            <param name="dataType">The type of the data, Measured or Imported</param>
            <param name="dataIndex">The 1 based index of the data set</param>
            <param name="axis">The left or right axis</param>
            <returns>An IXYTraceStyleCollection representing the selected styles</returns>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.LeftAxis">
            <summary>
            Gets the settings for the Y axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.RightAxis">
            <summary>
            Gets the settings for the Y axis.
            </summary>
            <example>
            <code source="Graph.vb" region="XYAxis" lang="vbnet"/>
            </example>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.IsRightAxisResultDefined">
            <summary>
            Gets whether or not the graph has result data on the right axis.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.DefineRightAxisResult(AudioPrecision.API.MeasurementResultType)">
            <summary>
            Allows the user to specify a result for the right axis of the graph.  Not all result types are allowed on every graph.  
            Result types must share the same X-axis type, i.e. Frequency.
            </summary>
            <param name="resultType">The specified result type</param>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.ClearRightAxisResult">
            <summary>
            Removes the result and its data from the right axis of a graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.DefineDerivedRightAxisResult(AudioPrecision.API.MeasurementResultType,AudioPrecision.API.MeasurementResultType)">
            <summary>
            Allows the user to specify a derived result for the right axis of the graph.  The source result type must already exist in
            this measurement, and the derived result type must be valid for the source result, and have a common X-axis with the left axis
            of this graph.
            </summary>
            <param name="sourceResultType">The desired source result type</param>
            <param name="derivedResultType">The desired derived result type</param>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.RightAxisResult">
            <summary>
            Gets the settings for the right axis result.  Use the IsXXX and AsXXX methods to convert the generic result type
            to the specified type for accessing settings and data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.IsRightAxisResult">
            <summary>
            Gets whether or not this object represents the right axis result for an X,Y graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IBaseXYGraph.VerticalAxisType">
            <summary>
            Gets whether this result is displayed on the left or right axis of the graph.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IBaseXYGraph.FitDataToView">
            <summary>
            Scales the data into view.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYCursor">
            <summary>
            Represents the settings for an X,Y Graph cursor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYCursor.AttachedTrace">
            <summary>
            Gets the attached ITraceInfo.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ICursor">
            <summary>
            Represents the settings for an X,Y graph cursor.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.Label">
            <summary>
            Gets or sets the cursor label.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.ShowLabel">
            <summary>
            Gets or sets the cursor label visible.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.Visible">
            <summary>
            Gets or sets the cursor visible.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Attach(System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Attaches the cursor to the trace 
            </summary>
            <param name="channel">Channel number of the trace to attach to.</param>
            <param name="axis">Left or Right axis</param>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Attach(AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Attaches the cursor to the trace. 
            </summary>
            <param name="channel">InputChannelIndex of the trace to attach to.</param>
            <param name="axis">Left or Right axis</param>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Attach(AudioPrecision.API.SourceDataType,System.Int32,System.Int32,AudioPrecision.API.VerticalAxis)">
            <summary>
            Attaches the cursor to the trace associated with the SourceDataType and dataIndex. 
            </summary>
            <param name="dataType">SourceDataType</param>
            <param name="dataIndex">index of the SourceDataType</param>
            <param name="channel">channel</param>
            <param name="axis">Left or Right axis</param>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Attach(AudioPrecision.API.SourceDataType,System.Int32,AudioPrecision.API.InputChannelIndex,AudioPrecision.API.VerticalAxis)">
            <summary>
            Attaches the cursor to the trace associated with the SourceDataType and dataIndex. 
            </summary>
            <param name="dataType">SourceDataType</param>
            <param name="dataIndex">index of the SourceDataType</param>
            <param name="channel">InputChannelIndex</param>
            <param name="axis">Left or Right axis</param>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Detach">
            <summary>
            Removes the cursor from attached channel.  Sets it to None.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.XValue">
            <summary>
            Get or set the XValue in the Unit of the Graph XAxis.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.YValue">
            <summary>
            Get or set the YValue in the unit of the Graph YAxis.
            If the cursor is attached and the attached trace has data then this command does nothing.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.ICursor.Center">
            <summary>
            Centers the cursor on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.LineStyle">
            <summary>
             Gets or sets the linestyle
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.LineWidth">
            <summary>
            Gets or sets the line width.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.Color">
            <summary>
            Gets or sets the line color.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.Shape">
            <summary>
            Gets or sets the cursor shape.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.Selected">
            <summary>
            Get or set the cursor as selected.  This highlights the cursor on the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.HorizontalGraticule">
            <summary>
            Gets or sets the horizontal cursor graticule.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ICursor.VerticalGraticule">
            <summary>
            /// Gets or sets the vertical cursor graticule.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITraceInfo">
            <summary>
            Describes how an X,Y graph cursor is attached to data on a graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITraceInfo.DataType">
            <summary>
            Data type
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITraceInfo.DataIndex">
            <summary>
            Data index
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITraceInfo.Channel">
            <summary>
            Channel index
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IDeltaCursor">
            <summary>
            Represents the settings for the difference between two X,Y cursor values.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeltaCursor.Visible">
            <summary>
            Get or set the Delta cursor visible in the legend.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeltaCursor.XValue">
            <summary>
            Gets the delta X value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeltaCursor.XText">
            <summary>
            Gets the delta X value as text.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeltaCursor.YValue">
            <summary>
            Gets the delta Y value.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IDeltaCursor.YText">
            <summary>
            Gets the delta Y value as text.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXYTraceStyleCollection">
            <summary>
            Represents a collection of trace styles for a specific data set on an X,Y graph.
            Styles include name, color, width, and line style.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXYTraceStyleCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.GetColor(System.Int32)">
            <summary>
            Gets the color for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <returns>A System.Drawing.Color object</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.SetColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets the color for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="color">A System.Drawing.Color object for the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.GetName(System.Int32)">
            <summary>
            Gets the name for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <returns>The name of the trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.SetName(System.Int32,System.String)">
            <summary>
            Sets the name for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="name">The name of the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.GetLineStyle(System.Int32)">
            <summary>
            Gets the line style for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <returns>A System.Drawing.DashStyle object for the trace</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.SetLineStyle(System.Int32,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Sets the line style for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="lineStyle">A System.Drawing.DashStyle object for the trace</param>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.GetLineWidth(System.Int32)">
            <summary>
            Gets the line width for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <returns>An integer between 1 and 5</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.SetLineWidth(System.Int32,System.Int32)">
            <summary>
            Sets the line width for the specified trace.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="lineWidth">An integer between 1 and 5</param>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.GetVisible(System.Int32)">
            <summary>
            Gets whether or not the specified trace appears on the graph.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <returns>True if the trace appears on the graph, otherwise False</returns>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.SetVisible(System.Int32,System.Boolean)">
            <summary>
            Sets whether or not the specified trace appears on the graph.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
            <param name="visible">True to make the trace appear on the graph, otherwise False</param>
        </member>
        <member name="M:AudioPrecision.API.IXYTraceStyleCollection.ResetTraceStyle(System.Int32)">
            <summary>
            Resets the style for a trace so it uses the default styles from the project settings.
            </summary>
            <param name="traceIndex">Index of the trace, 0 based</param>
        </member>
        <member name="T:AudioPrecision.API.ITimeDomainXYGraph">
            <summary>
            Represents an X, Y graph where the X-Axis is time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainXYGraph.InterpolationOn">
            <summary>
            Gets or sets interpolation on for this graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITimeDomainDiagnosticGraph">
            <summary>
            Represents an X,Y graph where the X-Axis is time.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainDiagnosticGraph.InterpolationOn">
            <summary>
            Gets or sets interpolation on for this graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITimeDomainWithWindowXYGraph">
            <summary>
            Represents an X,Y graph where the X-Axis is time.  This graph has additional properties
            for setting the analysis window for the other graphs within the measurement.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TimeWindow">
            <summary>
            This property is obsolete.  Use Use <see cref="M:AudioPrecision.API.IMeasurementBase.GetDataVisible(AudioPrecision.API.SourceDataType,System.Int32)">IMeasurement.GetDataVisible</see> or 
            <see cref="M:AudioPrecision.API.IMeasurementBase.SetDataVisible(AudioPrecision.API.SourceDataType,System.Int32,System.Boolean)">IMeasurement.SetDataVisible</see> instead.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TimeWindowAutoStart">
            <summary>
            Gets or sets whether the time window start is automatically calculated.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TimeWindowStart">
            <summary>
            Gets or sets the start of the time window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TimeWindowEnd">
            <summary>
            Gets or sets the end of the time window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TaperType">
            <summary>
            Gets or sets the taper type
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.StartTaperWidth">
            <summary>
            Gets or sets the amount of taper at the start of the window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.EndTaperWidth">
            <summary>
            Gets or sets the amount of taper at the end of the window.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.TimeWindowType">
            <summary>
            Gets or sets the time window type.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithWindowXYGraph.InterpolationOn">
            <summary>
            Gets or sets interpolation on for this graph.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.ITimeDomainWithSourceChannel">
            <summary>
            Represents the settings for a time domain acquisition graph with a source channel setting.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.ITimeDomainWithSourceChannel.SourceChannel">
            <summary>
            Gets or sets the source channel for Acquired Waveform One to One crosstalk.
            </summary>
        </member>
        <member name="T:AudioPrecision.API.IXyDataExportSpecification">
            <summary>
            Represents a specification for exporting X,Y graph data.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.RangeType">
            <summary>
            Gets or sets which additional settings are applicable for defining the range of data to be exported.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.From">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.AllPointsInRange"/> or
            <see cref="F:AudioPrecision.API.XyDataRange.Custom"/>, this property gets or sets the upper or lower limit of the 
            x-axis data values to include in the exported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.To">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.AllPointsInRange"/> or
            <see cref="F:AudioPrecision.API.XyDataRange.Custom"/>, this property  gets or sets the upper or lower limit of the 
            x-axis data values to include in the exported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.StepType">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.Custom"/>, this property gets
            or sets the data point spacing in the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.DataPoints"/> property which defines the
            exact data points to be included in the exported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.DataPoints">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.Custom"/>, this property 
            defines the exact data points to be included in the exported data set.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.NumberOfDataPoints">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.Custom"/>, this property gets
            or sets the desired number of data points for the graph.
            </summary>
        </member>
        <member name="P:AudioPrecision.API.IXyDataExportSpecification.XUnit">
            <summary>
            When the <see cref="P:AudioPrecision.API.IXyDataExportSpecification.RangeType"/> property is <see cref="F:AudioPrecision.API.XyDataRange.Custom"/> or 
            <see cref="F:AudioPrecision.API.XyDataRange.AllPointsInRange"/>, this property determines the x-axis unit of
            the data points.
            </summary>
        </member>
        <member name="M:AudioPrecision.API.IXyDataExportSpecification.SaveToFile(System.String)">
            <summary>
            Saves the export specification to a file.
            </summary>
            <param name="fileName">Name of file to save to</param>
        </member>
        <member name="M:AudioPrecision.API.IXyDataExportSpecification.SaveToProject(System.String,System.Boolean)">
            <summary>
            Saves the export specification as an attached project item so it can be referenced by graphs and sequence steps.
            </summary>
            <param name="name">The name of the specification</param>
            <param name="replaceIfExists">True to replace an existing attachment, if one exists, or False to fail with an error.</param>
            <returns>The name of the attachment. APx may append a file extension or otherwise modify the name to ensure it is an 
            acceptable name.</returns>
        </member>
    </members>
</doc>
