<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBMAAAEAIAD0CQAAFgAAACgAAAAgAAAAJgAAAAEAIAAAAAAAgAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBxkAAAkrAQAB
        CzYXEAa1GBEGugABCjoBDCoCAQcZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFzcAAAAAAAAA
        DhgMCQd6RS8F4aBrA/+jbQP/SDEF4w0KB34AAA0aAAAAAAMOKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQKFAAAAAMAAAA
        EwkEBAhWMiIFyYdbBP3VjwL/5poA/+aaAP/UjgH/h1sE/TMjBcwGBghZAAETCgAACAAOTaMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQWAAAF
        IQIAAQo2HRQGqWVEBfaUYwX/lGQD/7V5Av/hlwH/45gA/+SZAP/hlwH/qHEE/1s+BvYeFQarAAEKNwAF
        IAIBBRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRAoAAAA
        AAAAAA0dDwsHhEszBeeqcgP/m2cD/ywdA/9AKgP/KhwD/5hmA//lmgD/45gA/39VA/9tSQT/zYoE/6lx
        A/9MMwXoDwsHhQAADR0AAAAABRAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACB07AAAA
        CQAAABENBgUIYDMjBdCLXQT+1o8B/+WZAf9TOAL/dE4D/+GXAv97UwP/TjQC/+GXAf/ZkgH/PyoD/6Bs
        A//omwD/5poA/9aQAf+LXQT+NCMF0AUFCF8AABEMAAAJAA8iQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAEE
        EwAABBsEAAEKPiAWBrJtSQT4xYQC/+WaAP/kmQD/35UB/0gwAv+UYwL/7J4A/5xpAv9GLwL/35YB/9mS
        Af8+KQP/p3AD/+aaAP/jmAD/5JkA/+aaAP/FhAL/bEkE+B8WBrEAAQo9AAQbAwEEEwAAAAAAAAAAAAMM
        HwAuuf8AAAAMIxENBo9QNgTsrXQD/+KXAf/lmQD/45gA/+OYAP/flQH/SDAC/5NiAv/WjwL/fFQD/zwo
        Av/EhAL/xYQD/zkmA/+fagT/3pUB/96VAf/glwH/4pgA/+WaAP/imAH/rXQD/081BOsQDAaMAAAMIQAA
        AAAHESYADA0PFQ4LB2k5JwXYkWED/9mRAf/mmgD/45gA/+OYAP/jmAD/45gA/9+VAf9IMAL/lWMC/75/
        A/8vIAP/EQsB/z8qBP9FLgX/FQ4C/0QtBf9lRAb/b0oF/3tSBv+IWgX/k2IF/51pBv/HhQP/2ZEB/49g
        BP43JQXWDQsHZg0ODxMEBgiPJxoE9LB2BP/onAD/5JkA/+OYAP/jmAD/45gA/+OYAP/jmAD/35UB/0gw
        Av+TYgL/6ZwA/41eA/89KQP/xIQD/8CBA/83JAP/k2MF/8yIA//JhwP/vX8E/6tzCP+qcgn/uHsG/9eQ
        Av/lmQD/6ZwA/7N4BP8pHAT1BAUHkwwNDhgPDAdtOygF2pNjBP/ZkgH/5poA/+OYAP/jmAD/45gA/+OY
        AP/flQH/SDAC/5NiAv/rnQD/mmcC/0YvAv/glgH/2pIB/z4pA/+ncAP/55sA/+aaAP/HhgP/kGAO/55q
        Dv/NiQX/5poA/9yTAf+aZwP/QSwF3xANB3cLCw0dAwweAAkyeAAAAAwlEg0GkVI3Be2udQP/4pcB/+WZ
        AP/jmAD/45gA/9+VAf9IMAL/k2IC/+udAP+ZZwL/RS4C/96VAf/YkQH/PikD/6ZvA//mmgD/45gA/92U
        Af/RjAT/1Y8E/9uTAv+0eQL/WDsE8BUPBpoAAAsrBxg+AQMLHgAAAAAAAAAAAAADEgAABhwEAAIJQCAX
        BrNtSgT4xYQC/+WaAP/lmQD/3JQB/0IsAv+ZZgL/6p0A/5lnAv9FLgL/3pUB/9mRAf8+KQP/pm8D/+aa
        AP/jmAD/5JkA/+ebAP/KhwL/c00E+iQZBroBAglGAAUZBgABDgAAAAAAAAAAAAAAAAAAAAAAAAAAACE7
        cAAAAAQAAAERDQYFCGAzIwXQi10D/tKNAv+lbwX/VjkE/8eGAv/onAD/nGkC/0ArA//elQH/2JEB/zon
        Av+pcQP/5poA/+aaAP/YkQH/j2AD/jcmBdUHBgdnAAAREAAAAAAfP20AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEDygAAAAAAAAADR0PCweERzAF55BhBv/TjgL/5poA/+WaAP+5fAL/KhwC/4lc
        A/+CVwP/LR4C/8WEAv/imAH/qnID/041BekQDAeJAAANIQAAAAAFECoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUWAAAEIQIAAQo1HhUGp2ZEBPW/gAL/5ZkA/+KX
        AP+MXgP/PikD/0ErA/+XZQP/v4AD/2hGBPYeFQarAAEKOQAEHQMABBQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACChdAAAACwAAARMJAwQIVC0f
        BceBVwT80YwC/+ebAP/dlAH/yocD/4RZBP0vIAXJBAQIVwABEwoAAAgABkOXAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQ
        KwAAAAAAAAAOFgsJB3ZDLQXenGkD/55qA/9FLgXfDAkHeQAADhgAAAAABhUzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACCR4AAhI6AQABCzIVDwavFQ8GsAABCzQACi8BAQcaAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/4H///8A///8AD//8AAP/+AAB/+AAAH+AA
        AAfAAAADAAAAAAAAAAAAAAAAwAAAAeAAAAf4AAAf/gAAf/8AAP//wAP///AP///4H/8=
</value>
  </data>
</root>